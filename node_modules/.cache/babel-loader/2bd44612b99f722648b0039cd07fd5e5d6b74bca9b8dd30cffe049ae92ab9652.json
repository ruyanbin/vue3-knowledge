{"ast":null,"code":"import { openBlock, createElementBlock, Fragment, renderList } from 'vue';\nconst _hoisted_1 = {\n  ref: \"video\",\n  style: {\n    \"display\": \"none\"\n  },\n  muted: \"\",\n  loop: \"\",\n  autoplay: \"\",\n  crossOrigin: \"anonymous\"\n};\nconst _hoisted_2 = [\"src\"];\nfunction render(_ctx, _cache, $props, $setup, $data, $options) {\n  return openBlock(), createElementBlock(\"video\", _hoisted_1, [(openBlock(true), createElementBlock(Fragment, null, renderList(_ctx.videoUrlList, item => {\n    return openBlock(), createElementBlock(\"source\", {\n      key: item,\n      src: item,\n      type: \"video/mp4\"\n    }, null, 8, _hoisted_2);\n  }), 128))], 512);\n}\nexport { render };","map":{"version":3,"mappings":";;EAEIA,GAAI;EACJC;IAAqB;EAAA;EACrBC;EACAC;EACAC;EACAC,WAAY;AAAA;;;EANd,sCAcO,UAdPC,UAcO,qBANLC,kBAKA,2BAJiB,MAAYC,cAApBC,IAAK;wBADdF,mBAKA;MAHGG,GAAK;MACLC,GAAK;MACNC,IAAK;IAAA","names":["ref","style","muted","loop","autoplay","crossOrigin","_hoisted_1","_createElementBlock","videoUrlList","item","key","src","type"],"sources":["../../../../../../src/packages/three/ThreeVideo/ThreeVideo.vue?vue&type=template&id=1ecdb4d5&lang.js"],"sourcesContent":["<template>\r\n  <video\r\n    ref=\"video\"\r\n    style=\"display: none;\"\r\n    muted\r\n    loop\r\n    autoplay\r\n    crossOrigin=\"anonymous\"\r\n  >\r\n    <source\r\n      v-for=\"item in videoUrlList\"\r\n      :key=\"item\"\r\n      :src=\"item\"\r\n      type=\"video/mp4\"\r\n    >\r\n  </video>\r\n</template>\r\n<script lang=\"ts\">\r\nimport {defineComponent} from \"vue\";\r\nimport registerMixin from '../../../mixins/register-component';\r\nimport ThreeVideo from \"./ThreeVideo\";\r\nimport type {Vec} from \"./Type\";\r\nimport type{PropType} from \"vue\";\r\n\r\nexport default defineComponent({\r\n  name: 'ElAmapThreeVideo',\r\n  mixins: [registerMixin],\r\n  props: {\r\n    video: {\r\n      type: [String, Array, HTMLVideoElement],\r\n      required: true\r\n    },\r\n    videoTranslate: {\r\n      type: Object as PropType<Vec>,\r\n      default(){\r\n        return {\r\n          x:0,\r\n          y:0,\r\n          z:0\r\n        }\r\n      }\r\n    },\r\n    videoWidth: {\r\n      type: Number\r\n    }, // 视频宽度\r\n    videoHeight: {\r\n      type: Number\r\n    }, // 视频高度\r\n    canvas: {\r\n      type: Object as PropType<HTMLCanvasElement>\r\n    },\r\n    position: {\r\n      type: Array as PropType<number[]>,\r\n      required: true\r\n    },\r\n    altitude: {\r\n      type: Number,\r\n      default: 0\r\n    },\r\n    rotation: {\r\n      type: Object as PropType<Vec>\r\n    },\r\n    scale: {\r\n      type: [Number, Array],\r\n      default: 1\r\n    },\r\n    angle: {\r\n      type: Number,\r\n      default: 0\r\n    },\r\n    opacity: {\r\n      type: Number,\r\n      default: 1\r\n    }, // 透明度，默认 1\r\n    alwaysFront: {\r\n      type: Boolean,\r\n      default: false\r\n    } //是否一直面朝屏幕\r\n  },\r\n  emits: ['click', 'mousemove', 'mouseover', 'mouseout'],\r\n  data() {\r\n    return {\r\n      videoUrlList: [] as string[]\r\n    };\r\n  },\r\n  methods: {\r\n    __initComponent(options) {\r\n      const urlType = Object.prototype.toString.call(options.video);\r\n      if(urlType === '[object String]'){\r\n        this.videoUrlList = [options.video as string];\r\n      }else if(urlType === '[object Array]'){\r\n        this.videoUrlList = options.video;\r\n      }\r\n      if(this.videoUrlList.length > 0){\r\n        options.video = this.$refs.video\r\n      }\r\n      this.$amapComponent = new ThreeVideo(this.$parentComponent);\r\n      return new Promise<void>((resolve) => {\r\n        this.$nextTick(() => {\r\n          this.$amapComponent.init(options, this).then(() => {\r\n            resolve()\r\n          });\r\n        })\r\n\r\n      })\r\n    },\r\n    destroyComponent() {\r\n      if(!this.parentInstance.isDestroy){\r\n        this.$amapComponent.remove();\r\n      }\r\n      this.$amapComponent.destroy()\r\n    },\r\n    $$start() {\r\n      this.$amapComponent.start();\r\n    },\r\n    $$pause() {\r\n      this.$amapComponent.pause();\r\n    }\r\n  }\r\n});\r\n</script>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}