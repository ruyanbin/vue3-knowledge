{"ast":null,"code":"import { createElementVNode as _createElementVNode, normalizeClass as _normalizeClass, openBlock as _openBlock, createElementBlock as _createElementBlock, renderSlot as _renderSlot } from \"vue\";\nconst _hoisted_1 = [\"width\", \"height\"];\nconst _hoisted_2 = [\"fill\", \"points\"];\nconst _hoisted_3 = [\"stroke\", \"points\"];\nconst _hoisted_4 = [\"stroke\", \"points\"];\nconst _hoisted_5 = [\"stroke\", \"points\"];\nconst _hoisted_6 = [\"stroke\", \"points\"];\nconst _hoisted_7 = [\"stroke\", \"points\"];\nconst _hoisted_8 = [\"stroke\", \"points\"];\nconst _hoisted_9 = {\n  class: \"border-box-content\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", {\n    class: \"dv-border-box-5\",\n    ref: $data.ref\n  }, [(_openBlock(), _createElementBlock(\"svg\", {\n    class: _normalizeClass(`dv-border-svg-container  ${$props.reverse && 'dv-reverse'}`),\n    width: _ctx.width,\n    height: _ctx.height\n  }, [_createElementVNode(\"polygon\", {\n    fill: $props.backgroundColor,\n    points: `\n        10, 22 ${_ctx.width - 22}, 22 ${_ctx.width - 22}, ${_ctx.height - 86} ${_ctx.width - 84}, ${_ctx.height - 24} 10, ${_ctx.height - 24}\n      `\n  }, null, 8 /* PROPS */, _hoisted_2), _createElementVNode(\"polyline\", {\n    class: \"dv-bb5-line-1\",\n    stroke: $data.mergedColor[0],\n    points: `8, 5 ${_ctx.width - 5}, 5 ${_ctx.width - 5}, ${_ctx.height - 100}\n          ${_ctx.width - 100}, ${_ctx.height - 5} 8, ${_ctx.height - 5} 8, 5`\n  }, null, 8 /* PROPS */, _hoisted_3), _createElementVNode(\"polyline\", {\n    class: \"dv-bb5-line-2\",\n    stroke: $data.mergedColor[1],\n    points: `3, 5 ${_ctx.width - 20}, 5 ${_ctx.width - 20}, ${_ctx.height - 60}\n          ${_ctx.width - 74}, ${_ctx.height - 5} 3, ${_ctx.height - 5} 3, 5`\n  }, null, 8 /* PROPS */, _hoisted_4), _createElementVNode(\"polyline\", {\n    class: \"dv-bb5-line-3\",\n    stroke: $data.mergedColor[1],\n    points: `50, 13 ${_ctx.width - 35}, 13`\n  }, null, 8 /* PROPS */, _hoisted_5), _createElementVNode(\"polyline\", {\n    class: \"dv-bb5-line-4\",\n    stroke: $data.mergedColor[1],\n    points: `15, 20 ${_ctx.width - 35}, 20`\n  }, null, 8 /* PROPS */, _hoisted_6), _createElementVNode(\"polyline\", {\n    class: \"dv-bb5-line-5\",\n    stroke: $data.mergedColor[1],\n    points: `15, ${_ctx.height - 20} ${_ctx.width - 110}, ${_ctx.height - 20}`\n  }, null, 8 /* PROPS */, _hoisted_7), _createElementVNode(\"polyline\", {\n    class: \"dv-bb5-line-6\",\n    stroke: $data.mergedColor[1],\n    points: `15, ${_ctx.height - 13} ${_ctx.width - 110}, ${_ctx.height - 13}`\n  }, null, 8 /* PROPS */, _hoisted_8)], 10 /* CLASS, PROPS */, _hoisted_1)), _createElementVNode(\"div\", _hoisted_9, [_renderSlot(_ctx.$slots, \"default\")])], 512 /* NEED_PATCH */);\n}","map":{"version":3,"mappings":";;;;;;;;;;EAyBSA,KAAK,EAAC;AAAoB;;uBAxBjCC,oBA2BM;IA3BDD,KAAK,EAAC,iBAAiB;IAAEE,GAAG,EAAEC;qBACjCF,oBAqBM;IArBAD,KAAK,8CAA8BI,cAAO;IAAqBC,KAAK,EAAEC,UAAK;IAAGC,MAAM,EAAED;MAC1FE,oBAEK;IAFKC,IAAI,EAAEL,sBAAe;IAAGM,MAAM;iBAAqBJ,UAAK,aAAaA,UAAK,UAAUA,WAAM,SAASA,UAAK,UAAUA,WAAM,aAAaA,WAAM;;uCAIrJE,oBAKE;IAJAR,KAAK,EAAC,eAAe;IACpBW,MAAM,EAAER,iBAAW;IACnBO,MAAM,UAAUJ,UAAK,WAAWA,UAAK,SAASA,WAAM;YAAoBA,UAAK,WAAWA,WAAM,WAAWA,WAAM;uCAGlHE,oBAKE;IAJAR,KAAK,EAAC,eAAe;IACpBW,MAAM,EAAER,iBAAW;IACnBO,MAAM,UAAUJ,UAAK,YAAYA,UAAK,UAAUA,WAAM;YAAmBA,UAAK,UAAUA,WAAM,WAAWA,WAAM;uCAGlHE,oBAAgG;IAAtFR,KAAK,EAAC,eAAe;IAAEW,MAAM,EAAER,iBAAW;IAAMO,MAAM,YAAYJ,UAAK;uCACjFE,oBAAgG;IAAtFR,KAAK,EAAC,eAAe;IAAEW,MAAM,EAAER,iBAAW;IAAMO,MAAM,YAAYJ,UAAK;uCACjFE,oBAAyH;IAA/GR,KAAK,EAAC,eAAe;IAAEW,MAAM,EAAER,iBAAW;IAAMO,MAAM,SAASJ,WAAM,SAASA,UAAK,WAAWA,WAAM;uCAC9GE,oBAAyH;IAA/GR,KAAK,EAAC,eAAe;IAAEW,MAAM,EAAER,iBAAW;IAAMO,MAAM,SAASJ,WAAM,SAASA,UAAK,WAAWA,WAAM;6EAGhHE,oBAEM,OAFNI,UAEM,GADJC,YAAaP","names":["class","_createElementBlock","ref","$data","$props","width","_ctx","height","_createElementVNode","fill","points","stroke","_hoisted_9","_renderSlot"],"sourceRoot":"","sources":["/Users/yanbinru/Desktop/代码/github/vue3-knowledge/node_modules/@jiaminghi/data-view/lib/components/borderBox5/src/main.vue"],"sourcesContent":["<template>\n  <div class=\"dv-border-box-5\" :ref=\"ref\">\n    <svg :class=\"`dv-border-svg-container  ${reverse && 'dv-reverse'}`\" :width=\"width\" :height=\"height\">\n      <polygon :fill=\"backgroundColor\" :points=\"`\n        10, 22 ${width - 22}, 22 ${width - 22}, ${height - 86} ${width - 84}, ${height - 24} 10, ${height - 24}\n      `\" />\n\n      <polyline\n        class=\"dv-bb5-line-1\"\n        :stroke=\"mergedColor[0]\"\n        :points=\"`8, 5 ${width - 5}, 5 ${width - 5}, ${height - 100}\n          ${width - 100}, ${height - 5} 8, ${height - 5} 8, 5`\"\n      />\n      <polyline\n        class=\"dv-bb5-line-2\"\n        :stroke=\"mergedColor[1]\"\n        :points=\"`3, 5 ${width - 20}, 5 ${width - 20}, ${height - 60}\n          ${width - 74}, ${height - 5} 3, ${height - 5} 3, 5`\"\n      />\n      <polyline class=\"dv-bb5-line-3\" :stroke=\"mergedColor[1]\" :points=\"`50, 13 ${width - 35}, 13`\" />\n      <polyline class=\"dv-bb5-line-4\" :stroke=\"mergedColor[1]\" :points=\"`15, 20 ${width - 35}, 20`\" />\n      <polyline class=\"dv-bb5-line-5\" :stroke=\"mergedColor[1]\" :points=\"`15, ${height - 20} ${width - 110}, ${height - 20}`\" />\n      <polyline class=\"dv-bb5-line-6\" :stroke=\"mergedColor[1]\" :points=\"`15, ${height - 13} ${width - 110}, ${height - 13}`\" />\n    </svg>\n\n    <div class=\"border-box-content\">\n      <slot></slot>\n    </div>\n  </div>\n</template>\n\n<script>\nimport autoResize from '../../../mixin/autoResize'\n\nimport { deepMerge } from '@jiaminghi/charts/lib/util/index'\n\nimport { deepClone } from '@jiaminghi/c-render/lib/plugin/util'\n\nexport default {\n  name: 'DvBorderBox5',\n  mixins: [autoResize],\n  props: {\n    color: {\n      type: Array,\n      default: () => ([])\n    },\n    reverse: {\n      type: Boolean,\n      default: false\n    },\n    backgroundColor: {\n      type: String,\n      default: 'transparent'\n    }\n  },\n  data () {\n    return {\n      ref: 'border-box-5',\n\n      defaultColor: ['rgba(255, 255, 255, 0.35)', 'rgba(255, 255, 255, 0.20)'],\n\n      mergedColor: []\n    }\n  },\n  watch: {\n    color () {\n      const { mergeColor } = this\n\n      mergeColor()\n    }\n  },\n  methods: {\n    mergeColor () {\n      const { color, defaultColor } = this\n\n      this.mergedColor = deepMerge(deepClone(defaultColor, true), color || [])\n    }\n  },\n  mounted () {\n    const { mergeColor } = this\n\n    mergeColor()\n  }\n}\n</script>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}