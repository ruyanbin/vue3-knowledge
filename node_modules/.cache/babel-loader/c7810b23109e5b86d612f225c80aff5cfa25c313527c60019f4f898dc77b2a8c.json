{"ast":null,"code":"import { renderSlot as _renderSlot, createCommentVNode as _createCommentVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", {\n    id: \"dv-full-screen-container\",\n    ref: $data.ref\n  }, [$data.ready ? _renderSlot(_ctx.$slots, \"default\", {\n    key: 0\n  }) : _createCommentVNode(\"v-if\", true)], 512 /* NEED_PATCH */);\n}","map":{"version":3,"mappings":";;uBACEA,oBAIM;IAJDC,EAAE,EAAC,0BAA0B;IAAEC,GAAG,EAAEC;MACvBA,WAAK,GACnBC,YAAaC;IAAAC;EAAA","names":["_createElementBlock","id","ref","$data","_renderSlot","_ctx","key"],"sourceRoot":"","sources":["/Users/yanbinru/Desktop/代码/github/vue3-knowledge/node_modules/@jiaminghi/data-view/lib/components/fullScreenContainer/src/main.vue"],"sourcesContent":["<template>\n  <div id=\"dv-full-screen-container\" :ref=\"ref\">\n    <template v-if=\"ready\">\n      <slot></slot>\n    </template>\n  </div>\n</template>\n\n<script>\nimport autoResize from '../../../mixin/autoResize.js'\n\nexport default {\n  name: 'DvFullScreenContainer',\n  mixins: [autoResize],\n  data () {\n    return {\n      ref: 'full-screen-container',\n      allWidth: 0,\n      scale: 0,\n      datavRoot: '',\n      ready: false\n    }\n  },\n  methods: {\n    afterAutoResizeMixinInit () {\n      const { initConfig, setAppScale } = this\n\n      initConfig()\n\n      setAppScale()\n\n      this.ready = true\n    },\n    initConfig () {\n      const { dom } = this\n      const { width, height } = screen\n\n      this.allWidth = width\n\n      dom.style.width = `${width}px`\n      dom.style.height = `${height}px`\n    },\n    setAppScale () {\n      const { allWidth, dom } = this\n\n      const currentWidth = document.body.clientWidth\n\n      dom.style.transform = `scale(${currentWidth / allWidth})`\n    },\n    onResize () {\n      const { setAppScale } = this\n\n      setAppScale()\n    }\n  }\n}\n</script>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}