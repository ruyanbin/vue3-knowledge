{"ast":null,"code":"import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-7bf517c8\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  id: \"mapcontainer\"\n}, null, -1 /* HOISTED */));\nconst _hoisted_2 = {\n  class: \"search-box\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_autocomplete = _resolveComponent(\"el-autocomplete\");\n  const _component_el_input = _resolveComponent(\"el-input\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_hoisted_1, _createElementVNode(\"div\", _hoisted_2, [_createVNode(_component_el_autocomplete, {\n    modelValue: $setup.keyword,\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.keyword = $event),\n    \"fetch-suggestions\": $setup.handleSearch,\n    \"trigger-on-focus\": false,\n    clearable: \"\",\n    placeholder: \"输入城市+关键字搜索\",\n    onSelect: $setup.handleSelect,\n    style: {\n      \"width\": \"300px\"\n    }\n  }, null, 8 /* PROPS */, [\"modelValue\"]), _createVNode(_component_el_input, {\n    modelValue: $setup.location.longitude,\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $setup.location.longitude = $event),\n    placeholder: \"点击地图选择经度\",\n    maxlength: \"15\",\n    readonly: \"\",\n    style: {\n      \"width\": \"150px\",\n      \"margin\": \"0 5px\"\n    }\n  }, null, 8 /* PROPS */, [\"modelValue\"]), _createVNode(_component_el_input, {\n    modelValue: $setup.location.latitude,\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $setup.location.latitude = $event),\n    placeholder: \"点击地图选择纬度\",\n    maxlength: \"15\",\n    readonly: \"\",\n    style: {\n      \"width\": \"150px\"\n    }\n  }, null, 8 /* PROPS */, [\"modelValue\"])])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"mappings":";;gEACCA,oBAA6B;EAAxBC,EAAE,EAAC;AAAc;;EACjBC,KAAK,EAAC;AAAY;;;;6DADvBC,UAA6B,EAC7BH,oBAkBM,OAlBNI,UAkBM,GAjBLC,aAQEC;gBAPQC,cAAO;+DAAPA,cAAO;IACf,mBAAiB,EAAEA,mBAAY;IAC/B,kBAAgB,EAAE,KAAK;IACxBC,SAAS,EAAT,EAAS;IACTC,WAAW,EAAC,YAAY;IACvBC,QAAM,EAAEH,mBAAY;IACrBI,KAAoB,EAApB;MAAA;IAAA;2CAEDN,aAMYO;gBALFL,eAAQ,CAACM,SAAS;+DAAlBN,eAAQ,CAACM,SAAS;IAC3BJ,WAAW,EAAC,UAAU;IACtBK,SAAS,EAAC,IAAI;IACdC,QAAQ,EAAR,EAAQ;IACRJ,KAAmC,EAAnC;MAAA;MAAA;IAAA;2CAEDN,aAAqHO;gBAAlGL,eAAQ,CAACS,QAAQ;+DAAjBT,eAAQ,CAACS,QAAQ;IAAEP,WAAW,EAAC,UAAU;IAACK,SAAS,EAAC,IAAI;IAACC,QAAQ,EAAR,EAAQ;IAACJ,KAAoB,EAApB;MAAA;IAAA","names":["_createElementVNode","id","class","_hoisted_1","_hoisted_2","_createVNode","_component_el_autocomplete","$setup","clearable","placeholder","onSelect","style","_component_el_input","longitude","maxlength","readonly","latitude"],"sourceRoot":"","sources":["/Users/yanbinru/Desktop/代码/github/vue3-knowledge/src/views/map/gaud/components/search.vue"],"sourcesContent":["<template>\n\t<div id=\"mapcontainer\"></div>\n\t<div class=\"search-box\">\n\t\t<el-autocomplete\n\t\t\tv-model=\"keyword\"\n\t\t\t:fetch-suggestions=\"handleSearch\"\n\t\t\t:trigger-on-focus=\"false\"\n\t\t\tclearable\n\t\t\tplaceholder=\"输入城市+关键字搜索\"\n\t\t\t@select=\"handleSelect\"\n\t\t\tstyle=\"width: 300px\"\n\t\t/>\n\t\t<el-input\n\t\t\tv-model=\"location.longitude\"\n\t\t\tplaceholder=\"点击地图选择经度\"\n\t\t\tmaxlength=\"15\"\n\t\t\treadonly\n\t\t\tstyle=\"width: 150px; margin: 0 5px\"\n\t\t></el-input>\n\t\t<el-input v-model=\"location.latitude\" placeholder=\"点击地图选择纬度\" maxlength=\"15\" readonly style=\"width: 150px\"></el-input>\n\t</div>\n</template>\n\n<script setup>\nimport AMapLoader from '@amap/amap-jsapi-loader';\nwindow._AMapSecurityConfig = {\n\tsecurityJsCode: 'eb7f0b1ade00661146b243b0026c8094',\n};\nconst props = defineProps({\n\tmodelValue: {\n\t\ttype: Object,\n\t\tdefault() {\n\t\t\treturn {};\n\t\t},\n\t},\n});\nconst emit = defineEmits(['update:modelValue']);\nconst map = shallowRef(null);\n// 地点\nconst location = computed({\n\tget() {\n\t\treturn props.modelValue;\n\t},\n\tset(val) {\n\t\temit('update:modelValue', val);\n\t},\n});\nwatch(location, (val) => {\n\tif (val.longitude && val.latitude) {\n\t\tdrawMarker();\n\t}\n});\nconst keyword = ref('');\nlet placeSearch, AMapObj, marker, geocoder;\nfunction initMap() {\n\tAMapLoader.load({\n\t\tkey: '0c93577f3a72d04f9bd2130824983cb2', // 申请好的Web端Key，首次调用 load 时必填\n\t\tversion: '2.0',\n\t}).then((AMap) => {\n\t\tAMapObj = AMap;\n\t\tconst layer = new AMap.TileLayer({\n\t\t\tzooms: [3, 20], //可见级别\n\t\t\tvisible: true, //是否可见\n\t\t\topacity: 1, //透明度\n\t\t\tzIndex: 0, //叠加层级\n\t\t});\n\t\tmap.value = new AMap.Map('mapcontainer', {\n\t\t\tlayers: [layer],\n\t\t\tviewMode: '2d', //是否为3D地图模式\n\t\t\tzoom: 15, //初始化地图级别\n\t\t\tlayers: [layer],\n\t\t});\n\t\t// 添加点击事件\n\t\tmap.value.on('click', onMapClick);\n\t\tif (location.value.longitude) {\n\t\t\tdrawMarker();\n\t\t}\n\t\tAMap.plugin(['AMap.ToolBar', 'AMap.Scale', 'AMap.Geolocation', 'AMap.PlaceSearch', 'AMap.Geocoder'], () => {\n\t\t\t// 缩放条\n\t\t\tconst toolbar = new AMap.ToolBar();\n\t\t\t// 比例尺\n\t\t\tconst scale = new AMap.Scale();\n\t\t\t// 定位\n\t\t\tconst geolocation = new AMap.Geolocation({\n\t\t\t\tenableHighAccuracy: true, //是否使用高精度定位，默认:true\n\t\t\t\ttimeout: 10000, //超过10秒后停止定位，默认：5s\n\t\t\t\tposition: 'RT', //定位按钮的停靠位置\n\t\t\t\tbuttonOffset: new AMap.Pixel(10, 20), //定位按钮与设置的停靠位置的偏移量，默认：Pixel(10, 20)\n\t\t\t\tzoomToAccuracy: true, //定位成功后是否自动调整地图视野到定位点\n\t\t\t});\n\t\t\tgeocoder = new AMap.Geocoder({\n\t\t\t\tcity: '全国',\n\t\t\t});\n\t\t\tmap.value.addControl(geolocation);\n\t\t\tmap.value.addControl(toolbar);\n\t\t\tmap.value.addControl(scale);\n\t\t\tplaceSearch = new AMap.PlaceSearch({\n\t\t\t\tmap: map.value,\n\t\t\t\tcity: '',\n\t\t\t\tpageSize: 30, // 单页显示结果条数\n\t\t\t\tpageIndex: 1, // 页码\n\t\t\t\tcitylimit: false, // 是否强制限制在设置的城市内搜索\n\t\t\t\tautoFitView: true,\n\t\t\t});\n\t\t});\n\t});\n}\nonMounted(() => {\n\tinitMap();\n});\n// 搜索地图\nfunction handleSearch(queryString, cb) {\n\tplaceSearch.search(queryString, (status, result) => {\n\t\tif (result && typeof result === 'object' && result.poiList) {\n\t\t\tconst list = result.poiList.pois;\n\t\t\tlist.forEach((item) => {\n\t\t\t\titem.value = item.name;\n\t\t\t\titem.label = item.name;\n\t\t\t});\n\t\t\tcb(list);\n\t\t} else {\n\t\t\tcb([]);\n\t\t}\n\t});\n}\n// 点击地图\nfunction onMapClick(e) {\n\tconst { lng, lat } = e.lnglat;\n\t// 逆地理编码\n\tgeocoder.getAddress([lng, lat], (status, result) => {\n\t\tif (status === 'complete' && result.info === 'OK') {\n\t\t\tconst { addressComponent, formattedAddress } = result.regeocode;\n\t\t\tlet { city, province, district } = addressComponent;\n\t\t\tif (!city) {\n\t\t\t\t// 直辖市\n\t\t\t\tcity = province;\n\t\t\t}\n\t\t\tlocation.value = {\n\t\t\t\tlongitude: lng,\n\t\t\t\tlatitude: lat,\n\t\t\t\taddress: formattedAddress,\n\t\t\t\tzone: [province, city, district],\n\t\t\t};\n\t\t}\n\t});\n}\n// 点击搜索项\nfunction handleSelect(item) {\n\tconst { pname, cityname, adname, address, name } = item;\n\tconst { lng, lat } = item.location;\n\tlocation.value = {\n\t\tlongitude: lng,\n\t\tlatitude: lat,\n\t\taddress,\n\t\tzone: [pname, cityname, adname],\n\t\tname,\n\t};\n\tmap.value.setZoomAndCenter(16, [lng, lat]);\n}\n// 绘制地点marker\nfunction drawMarker(val) {\n\tconst { longitude, latitude } = location.value || val;\n\tif (marker) {\n\t\tmarker.setMap(null);\n\t}\n\tmarker = new AMapObj.Marker({\n\t\tposition: new AMapObj.LngLat(longitude, latitude),\n\t\tanchor: 'bottom-center',\n\t});\n\tmap.value.add(marker);\n\tmap.value.setZoomAndCenter(16, [longitude, latitude]);\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.map-wrapper {\n\tposition: relative;\n\twidth: 100%;\n\theight: 400px;\n\t#mapcontainer {\n\t\twidth: 100%;\n\t\theight: 100%;\n\t}\n\t.search-box {\n\t\tposition: absolute;\n\t\ttop: 10px;\n\t\tleft: 10px;\n\t\tz-index: 1;\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t}\n}\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}