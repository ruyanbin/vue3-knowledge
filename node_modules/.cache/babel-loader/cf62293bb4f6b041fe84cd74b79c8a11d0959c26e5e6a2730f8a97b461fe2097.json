{"ast":null,"code":"import { defineComponent } from 'vue';\nimport registerMixin from '../../../mixins/register-component.mjs';\nimport locaMixin from '../../../mixins/loca-component.mjs';\nvar script = defineComponent({\n  name: \"ElAmapLocaPoint\",\n  mixins: [registerMixin, locaMixin],\n  props: {\n    blend: {\n      type: String\n    }\n  },\n  data() {\n    return {\n      converters: {}\n    };\n  },\n  methods: {\n    __initComponent(options) {\n      this.$amapComponent = new Loca.PointLayer(options);\n      this.setSource();\n      this.setStyle();\n      this.$parentComponent.add(this.$amapComponent);\n      this.initComplete();\n    },\n    setStyle() {\n      const defaultStyleValue = {\n        radius: 20,\n        color: \"#fff\",\n        unit: \"px\",\n        borderWidth: 10,\n        borderColor: \"#fff\",\n        blurWidth: -1\n      };\n      const style = Object.assign({}, defaultStyleValue, this[\"defaultStyleValue\"]);\n      const defaultLayerStyle = {\n        radius: (index, feature) => {\n          feature.properties = feature.properties || {};\n          return feature.properties.radius === void 0 ? style.radius : feature.properties.radius;\n        },\n        color: (index, feature) => {\n          feature.properties = feature.properties || {};\n          return feature.properties.color === void 0 ? style.color : feature.properties.color;\n        },\n        unit: style.unit,\n        borderWidth: (index, feature) => {\n          feature.properties = feature.properties || {};\n          return feature.properties.borderWidth === void 0 ? style.borderWidth : feature.properties.borderWidth;\n        },\n        borderColor: (index, feature) => {\n          feature.properties = feature.properties || {};\n          return feature.properties.borderColor === void 0 ? style.borderColor : feature.properties.borderColor;\n        },\n        blurWidth: (index, feature) => {\n          feature.properties = feature.properties || {};\n          return feature.properties.blurWidth === void 0 ? style.blurWidth : feature.properties.blurWidth;\n        }\n      };\n      const layerStyle = Object.assign({}, defaultLayerStyle, this[\"layerStyle\"]);\n      this.$amapComponent.setStyle(layerStyle);\n    }\n  },\n  render() {\n    return null;\n  }\n});\nexport { script as default };","map":{"version":3,"mappings":";;;AAKA,aAAeA,eAAgB;EAC7BC,IAAM;EACNC,QAAQ,CAACC,aAAe;EACxBC,KAAO;IACLC,KAAO;MACLC,IAAM;IAAA;EAAA;EAGVC,IAAO;IACE;MACLC,UAAY;IAAA;EAAA;EAGhBC,OAAS;IACPC,gBAAgBC,OAAS;MAClB,sBAAiB,IAAIC,KAAKC,UAAW;MACrC;MACA;MACA,sBAAiBC,IAAI,IAAK;MAC1B;IAAA;IAEPC,QAAW;MACT,MAAMC,iBAAoB;QACxBC,MAAQ;QACRC,KAAO;QACPC,IAAM;QACNC,WAAa;QACbC,WAAa;QACbC,SAAW;MAAA;MAEb,MAAMC,KAAQ,UAAOC,MAAO,KAAIR,mBAAmB,IAAK;MACxD,MAAMS,iBAAoB;QACxBR,QAAQ,CAACS,OAAOC,OAAY;UAClBA,qBAAaA,QAAQC,UAAc;UAC3C,OAAOD,QAAQC,UAAW,YAAW,SAAYL,KAAM,UAASI,QAAQC,UAAW;QAAA;QAErFV,OAAO,CAACQ,OAAOC,OAAY;UACjBA,qBAAaA,QAAQC,UAAc;UAC3C,OAAOD,QAAQC,UAAW,WAAU,SAAYL,KAAM,SAAQI,QAAQC,UAAW;QAAA;QAEnFT,MAAMI,KAAM;QACZH,aAAa,CAACM,OAAOC,OAAY;UACvBA,qBAAaA,QAAQC,UAAc;UAC3C,OAAOD,QAAQC,UAAW,iBAAgB,SAAYL,KAAM,eAAcI,QAAQC,UAAW;QAAA;QAE/FP,aAAa,CAACK,OAAOC,OAAY;UACvBA,qBAAaA,QAAQC,UAAc;UAC3C,OAAOD,QAAQC,UAAW,iBAAgB,SAAYL,KAAM,eAAcI,QAAQC,UAAW;QAAA;QAE/FN,WAAW,CAACI,OAAOC,OAAY;UACrBA,qBAAaA,QAAQC,UAAc;UAC3C,OAAOD,QAAQC,UAAW,eAAc,SAAYL,KAAM,aAAYI,QAAQC,UAAW;QAAA;MAAA;MAG7F,MAAMC,UAAa,UAAOL,MAAO,KAAIC,mBAAmB,IAAK;MAC7D,KAAKK,eAAef,QAAS;IAAA;EAAA;EAGjCgB,MAAQ;IACC;EAAA;AAAA","names":["defineComponent","name","mixins","registerMixin","props","blend","type","data","converters","methods","__initComponent","options","Loca","PointLayer","add","setStyle","defaultStyleValue","radius","color","unit","borderWidth","borderColor","blurWidth","style","assign","defaultLayerStyle","index","feature","properties","layerStyle","$amapComponent","render"],"sources":["../../../../../../src/packages/loca/PointLayer/PointLayer.vue"],"sourcesContent":["<script lang=\"ts\">\r\nimport {defineComponent} from \"vue\";\r\nimport registerMixin from '../../../mixins/register-component';\r\nimport locaMixin from '../../../mixins/loca-component';\r\n\r\nexport default defineComponent({\r\n  name: 'ElAmapLocaPoint',\r\n  mixins: [registerMixin, locaMixin],\r\n  props: {\r\n    blend: {\r\n      type: String\r\n    } // 图层里面元素的叠加效果，normal：正常透明度叠加，lighter：叠加后可能更加明亮\r\n  },\r\n  data() {\r\n    return {\r\n      converters: {},\r\n    };\r\n  },\r\n  methods: {\r\n    __initComponent(options) {\r\n      this.$amapComponent = new Loca.PointLayer(options);\r\n      this.setSource();\r\n      this.setStyle();\r\n      this.$parentComponent.add(this.$amapComponent);\r\n      this.initComplete();\r\n    },\r\n    setStyle() {\r\n      const defaultStyleValue = {\r\n        radius: 20,\r\n        color: '#fff',\r\n        unit: 'px',\r\n        borderWidth: 10,\r\n        borderColor: '#fff',\r\n        blurWidth: -1\r\n      };\r\n      const style = Object.assign({}, defaultStyleValue, this['defaultStyleValue']);\r\n      const defaultLayerStyle = {\r\n        radius: (index, feature) => {\r\n          feature.properties = feature.properties || {};\r\n          return feature.properties.radius === undefined ? style.radius : feature.properties.radius;\r\n        },\r\n        color: (index, feature) => {\r\n          feature.properties = feature.properties || {};\r\n          return feature.properties.color === undefined ? style.color : feature.properties.color;\r\n        },\r\n        unit: style.unit,\r\n        borderWidth: (index, feature) => {\r\n          feature.properties = feature.properties || {};\r\n          return feature.properties.borderWidth === undefined ? style.borderWidth : feature.properties.borderWidth;\r\n        },\r\n        borderColor: (index, feature) => {\r\n          feature.properties = feature.properties || {};\r\n          return feature.properties.borderColor === undefined ? style.borderColor : feature.properties.borderColor;\r\n        },\r\n        blurWidth: (index, feature) => {\r\n          feature.properties = feature.properties || {};\r\n          return feature.properties.blurWidth === undefined ? style.blurWidth : feature.properties.blurWidth;\r\n        }\r\n      };\r\n      const layerStyle = Object.assign({}, defaultLayerStyle, this['layerStyle']);\r\n      this.$amapComponent.setStyle(layerStyle);\r\n    }\r\n  },\r\n  render(){\r\n    return null;\r\n  }\r\n});\r\n</script>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}