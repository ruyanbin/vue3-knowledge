{"ast":null,"code":"import { defineComponent } from 'vue';\nimport registerMixin from '../../../mixins/register-component.mjs';\nimport locaMixin from '../../../mixins/loca-component.mjs';\nvar script = defineComponent({\n  name: \"ElAmapLocaScatter\",\n  mixins: [registerMixin, locaMixin],\n  props: {},\n  data() {\n    return {\n      converters: {}\n    };\n  },\n  methods: {\n    __initComponent(options) {\n      this.$amapComponent = new Loca.ScatterLayer(options);\n      this.setSource();\n      this.setStyle();\n      this.$parentComponent.add(this.$amapComponent);\n      this.initComplete();\n    },\n    setStyle() {\n      const defaultStyleValue = {\n        size: [20, 20],\n        rotation: 0,\n        color: \"rgba(200,200,200,1)\",\n        altitude: 0,\n        borderWidth: 0,\n        borderColor: \"rgba(250,250,250,1)\",\n        texture: null,\n        unit: \"px\",\n        animate: false,\n        duration: 0\n      };\n      const style = Object.assign({}, defaultStyleValue, this[\"defaultStyleValue\"]);\n      const defaultLayerStyle = {\n        size: (index, feature) => {\n          feature.properties = feature.properties || {};\n          return feature.properties.size === void 0 ? style.size : feature.properties.size;\n        },\n        rotation: (index, feature) => {\n          feature.properties = feature.properties || {};\n          return feature.properties.rotation === void 0 ? style.rotation : feature.properties.rotation;\n        },\n        color: (index, feature) => {\n          feature.properties = feature.properties || {};\n          return feature.properties.color === void 0 ? style.color : feature.properties.color;\n        },\n        altitude: (index, feature) => {\n          feature.properties = feature.properties || {};\n          return feature.properties.altitude === void 0 ? style.altitude : feature.properties.altitude;\n        },\n        borderWidth: (index, feature) => {\n          feature.properties = feature.properties || {};\n          return feature.properties.borderWidth === void 0 ? style.borderWidth : feature.properties.borderWidth;\n        },\n        borderColor: (index, feature) => {\n          feature.properties = feature.properties || {};\n          return feature.properties.borderColor === void 0 ? style.borderColor : feature.properties.borderColor;\n        },\n        texture: style.texture,\n        unit: style.unit,\n        animate: style.animate,\n        duration: style.duration\n      };\n      const layerStyle = Object.assign({}, defaultLayerStyle, this[\"layerStyle\"]);\n      this.$amapComponent.setStyle(layerStyle);\n    }\n  },\n  render() {\n    return null;\n  }\n});\nexport { script as default };","map":{"version":3,"mappings":";;;AAKA,aAAeA,eAAgB;EAC7BC,IAAM;EACNC,QAAQ,CAACC,aAAe;EACxBC,KAAO;EAEPC,IAAO;IACE;MACLC,UAAY;IAAA;EAAA;EAGhBC,OAAS;IACPC,gBAAgBC,OAAS;MAClB,sBAAiB,IAAIC,KAAKC,YAAa;MACvC;MACA;MACA,sBAAiBC,IAAI,IAAK;MAC1B;IAAA;IAEPC,QAAW;MACT,MAAMC,iBAAoB;QACxBC,MAAM,CAAC,EAAI;QACXC,QAAU;QACVC,KAAO;QACPC,QAAU;QACVC,WAAa;QACbC,WAAa;QACbC,OAAS;QACTC,IAAM;QACNC,OAAS;QACTC,QAAU;MAAA;MAEZ,MAAMC,KAAQ,UAAOC,MAAO,KAAIZ,mBAAmB,IAAK;MACxD,MAAMa,iBAAoB;QACxBZ,MAAM,CAACa,OAAOC,OAAY;UAChBA,qBAAaA,QAAQC,UAAc;UAC3C,OAAOD,QAAQC,UAAW,UAAS,SAAYL,KAAM,QAAOI,QAAQC,UAAW;QAAA;QAEjFd,UAAU,CAACY,OAAOC,OAAY;UACpBA,qBAAaA,QAAQC,UAAc;UAC3C,OAAOD,QAAQC,UAAW,cAAa,SAAYL,KAAM,YAAWI,QAAQC,UAAW;QAAA;QAEzFb,OAAO,CAACW,OAAOC,OAAY;UACjBA,qBAAaA,QAAQC,UAAc;UAC3C,OAAOD,QAAQC,UAAW,WAAU,SAAYL,KAAM,SAAQI,QAAQC,UAAW;QAAA;QAEnFZ,UAAU,CAACU,OAAOC,OAAY;UACpBA,qBAAaA,QAAQC,UAAc;UAC3C,OAAOD,QAAQC,UAAW,cAAa,SAAYL,KAAM,YAAWI,QAAQC,UAAW;QAAA;QAEzFX,aAAa,CAACS,OAAOC,OAAY;UACvBA,qBAAaA,QAAQC,UAAc;UAC3C,OAAOD,QAAQC,UAAW,iBAAgB,SAAYL,KAAM,eAAcI,QAAQC,UAAW;QAAA;QAE/FV,aAAa,CAACQ,OAAOC,OAAY;UACvBA,qBAAaA,QAAQC,UAAc;UAC3C,OAAOD,QAAQC,UAAW,iBAAgB,SAAYL,KAAM,eAAcI,QAAQC,UAAW;QAAA;QAE/FT,SAASI,KAAM;QACfH,MAAMG,KAAM;QACZF,SAASE,KAAM;QACfD,UAAUC,KAAM;MAAA;MAElB,MAAMM,UAAa,UAAOL,MAAO,KAAIC,mBAAmB,IAAK;MAC7D,KAAKK,eAAenB,QAAS;IAAA;EAAA;EAGjCoB,MAAQ;IACC;EAAA;AAAA","names":["defineComponent","name","mixins","registerMixin","props","data","converters","methods","__initComponent","options","Loca","ScatterLayer","add","setStyle","defaultStyleValue","size","rotation","color","altitude","borderWidth","borderColor","texture","unit","animate","duration","style","assign","defaultLayerStyle","index","feature","properties","layerStyle","$amapComponent","render"],"sources":["../../../../../../src/packages/loca/ScatterLayer/ScatterLayer.vue"],"sourcesContent":["<script lang=\"ts\">\r\nimport {defineComponent} from \"vue\";\r\nimport registerMixin from '../../../mixins/register-component';\r\nimport locaMixin from '../../../mixins/loca-component';\r\n\r\nexport default defineComponent({\r\n  name: 'ElAmapLocaScatter',\r\n  mixins: [registerMixin, locaMixin],\r\n  props: {\r\n  },\r\n  data() {\r\n    return {\r\n      converters: {},\r\n    };\r\n  },\r\n  methods: {\r\n    __initComponent(options) {\r\n      this.$amapComponent = new Loca.ScatterLayer(options);\r\n      this.setSource();\r\n      this.setStyle();\r\n      this.$parentComponent.add(this.$amapComponent);\r\n      this.initComplete();\r\n    },\r\n    setStyle() {\r\n      const defaultStyleValue = {\r\n        size: [20, 20],\r\n        rotation: 0,\r\n        color: 'rgba(200,200,200,1)',\r\n        altitude: 0,\r\n        borderWidth: 0,\r\n        borderColor: 'rgba(250,250,250,1)',\r\n        texture: null,\r\n        unit: 'px',\r\n        animate: false,\r\n        duration: 0\r\n      };\r\n      const style = Object.assign({}, defaultStyleValue, this['defaultStyleValue']);\r\n      const defaultLayerStyle = {\r\n        size: (index, feature) => {\r\n          feature.properties = feature.properties || {};\r\n          return feature.properties.size === undefined ? style.size : feature.properties.size;\r\n        },\r\n        rotation: (index, feature) => {\r\n          feature.properties = feature.properties || {};\r\n          return feature.properties.rotation === undefined ? style.rotation : feature.properties.rotation;\r\n        },\r\n        color: (index, feature) => {\r\n          feature.properties = feature.properties || {};\r\n          return feature.properties.color === undefined ? style.color : feature.properties.color;\r\n        },\r\n        altitude: (index, feature) => {\r\n          feature.properties = feature.properties || {};\r\n          return feature.properties.altitude === undefined ? style.altitude : feature.properties.altitude;\r\n        },\r\n        borderWidth: (index, feature) => {\r\n          feature.properties = feature.properties || {};\r\n          return feature.properties.borderWidth === undefined ? style.borderWidth : feature.properties.borderWidth;\r\n        },\r\n        borderColor: (index, feature) => {\r\n          feature.properties = feature.properties || {};\r\n          return feature.properties.borderColor === undefined ? style.borderColor : feature.properties.borderColor;\r\n        },\r\n        texture: style.texture,\r\n        unit: style.unit,\r\n        animate: style.animate,\r\n        duration: style.duration\r\n      };\r\n      const layerStyle = Object.assign({}, defaultLayerStyle, this['layerStyle']);\r\n      this.$amapComponent.setStyle(layerStyle);\r\n    }\r\n  },\r\n  render(){\r\n    return null;\r\n  }\r\n});\r\n</script>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}