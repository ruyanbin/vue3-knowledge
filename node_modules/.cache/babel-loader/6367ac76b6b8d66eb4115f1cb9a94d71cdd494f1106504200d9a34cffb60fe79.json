{"ast":null,"code":"import { createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"card-header\"\n}, [/*#__PURE__*/_createElementVNode(\"span\", {\n  class: \"font-medium\"\n}, \"构造函数+原型的动态原型模式（推荐）\")], -1 /* HOISTED */);\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */);\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */);\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */);\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */);\nconst _hoisted_6 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */);\n\nexport function render(_ctx, _cache) {\n  const _component_el_card = _resolveComponent(\"el-card\");\n  return _openBlock(), _createBlock(_component_el_card, null, {\n    header: _withCtx(() => [_hoisted_1]),\n    default: _withCtx(() => [_createTextVNode(\" 例子:\"), _hoisted_2, _createTextVNode(\" function Parent(){ this.name =\\\"李小龙\\\"; this.age =20; if(typeof Parent.lev==\\\"undefined\\\"){ Parent.prototype.lev= function(){ return this.name; } Parent.lev=true; } };\"), _hoisted_3, _createTextVNode(\" 说明：\"), _hoisted_4, _createTextVNode(\" 1.动态原型方式可以理解为混合构造函数，原型方式的一个特例\"), _hoisted_5, _createTextVNode(\" 2.该模式中，属性为方法的属性直接在函数中进行了定义，但是因为 if(typeof Parent.lev==\\\"undefined\\\"){ Parent.prototype.lev= function(){ return this.name; } Parent.lev=true; } 从而保证创建该对象的实例时，属性的方法不会被重复的创建 \"), _hoisted_6]),\n    _: 1 /* STABLE */\n  });\n}","map":{"version":3,"mappings":";gCAGGA,oBAEM;EAFDC,KAAK,EAAC;AAAa,iBACvBD,oBAAmD;EAA7CC,KAAK,EAAC;AAAa,GAAC,oBAAkB;gCAG3CD,oBAAI;gCAULA,oBAAI;gCAEHA,oBAAI;gCACsBA,oBAAI;gCASjCA,oBAAI;;;;uBA5BLE,aA8BUC;IA7BEC,MAAM,WAChB,MAEM,CAFNC,UAEM;sBACI,MACR,kBADQ,MACR,aAAI,4LAUL,aAAI,yBAEH,aAAI,mDACsB,aAAI,iMASjC,aAAI","names":["_createElementVNode","class","_createBlock","_component_el_card","header","_hoisted_1"],"sourceRoot":"","sources":["/Users/yanbinru/Desktop/代码/github/vue3-knowledge/src/views/Design/Dynamic.vue"],"sourcesContent":["<template>\n\t<el-card>\n\t\t<template #header>\n\t\t\t<div class=\"card-header\">\n\t\t\t\t<span class=\"font-medium\">构造函数+原型的动态原型模式（推荐）</span>\n\t\t\t</div>\n\t\t</template>\n\t\t例子:<br>\n\t\tfunction Parent(){\n\t\tthis.name =\"李小龙\";\n\t\tthis.age =20;\n\t\tif(typeof Parent.lev==\"undefined\"){\n\t\tParent.prototype.lev= function(){\n\t\treturn this.name;\n\t\t}\n\t\tParent.lev=true;\n\t\t}\n\t\t};<br>\n\n\t\t说明：<br>\n\t\t1.动态原型方式可以理解为混合构造函数，原型方式的一个特例<br>\n\t\t2.该模式中，属性为方法的属性直接在函数中进行了定义，但是因为\n\t\tif(typeof Parent.lev==\"undefined\"){\n\t\tParent.prototype.lev= function(){\n\t\treturn this.name;\n\t\t}\n\t\tParent.lev=true;\n\t\t}\n\t\t从而保证创建该对象的实例时，属性的方法不会被重复的创建\n\t\t<br>\n\n\t</el-card>\n</template>\n\n<script lang='ts' setup>\n</script>\n<style lang='scss' scoped>\n\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}