{"ast":null,"code":"import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, normalizeClass as _normalizeClass, normalizeStyle as _normalizeStyle } from \"vue\";\nconst _hoisted_1 = [\"width\", \"height\"];\nconst _hoisted_2 = [\"stroke\", \"points\"];\nconst _hoisted_3 = [\"stroke\", \"points\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", {\n    class: \"dv-decoration-4\",\n    ref: $data.ref\n  }, [_createElementVNode(\"div\", {\n    class: _normalizeClass(`container ${$props.reverse ? 'reverse' : 'normal'}`),\n    style: _normalizeStyle($props.reverse ? `width:${_ctx.width}px;height:5px;animation-duration:${$props.dur}s` : `width:5px;height:${_ctx.height}px;animation-duration:${$props.dur}s`)\n  }, [(_openBlock(), _createElementBlock(\"svg\", {\n    width: $props.reverse ? _ctx.width : 5,\n    height: $props.reverse ? 5 : _ctx.height\n  }, [_createElementVNode(\"polyline\", {\n    stroke: $data.mergedColor[0],\n    points: $props.reverse ? `0, 2.5 ${_ctx.width}, 2.5` : `2.5, 0 2.5, ${_ctx.height}`\n  }, null, 8 /* PROPS */, _hoisted_2), _createElementVNode(\"polyline\", {\n    class: \"bold-line\",\n    stroke: $data.mergedColor[1],\n    \"stroke-width\": \"3\",\n    \"stroke-dasharray\": \"20, 80\",\n    \"stroke-dashoffset\": \"-30\",\n    points: $props.reverse ? `0, 2.5 ${_ctx.width}, 2.5` : `2.5, 0 2.5, ${_ctx.height}`\n  }, null, 8 /* PROPS */, _hoisted_3)], 8 /* PROPS */, _hoisted_1))], 6 /* CLASS, STYLE */)], 512 /* NEED_PATCH */);\n}","map":{"version":3,"mappings":";;;;;uBACEA,oBAoBM;IApBDC,KAAK,EAAC,iBAAiB;IAAEC,GAAG,EAAEC;MACjCC,oBAkBM;IAjBHH,KAAK,+BAAeI,cAAO;IAC3BC,KAAK,kBAAED,cAAO,YAAYE,UAAK,oCAAoCF,UAAG,0BAA0BE,WAAM,yBAAyBF,UAAG;qBAEnIL,oBAaM;IAbAQ,KAAK,EAAEH,cAAO,GAAGE,UAAK;IAAOE,MAAM,EAAEJ,cAAO,OAAOE;MACvDH,oBAGE;IAFCM,MAAM,EAAEP,iBAAW;IACnBQ,MAAM,EAAEN,cAAO,aAAaE,UAAK,yBAAyBA,WAAM;uCAEnEH,oBAOE;IANAH,KAAK,EAAC,WAAW;IAChBS,MAAM,EAAEP,iBAAW;IACpB,cAAY,EAAC,GAAG;IAChB,kBAAgB,EAAC,QAAQ;IACzB,mBAAiB,EAAC,KAAK;IACtBQ,MAAM,EAAEN,cAAO,aAAaE,UAAK,yBAAyBA,WAAM","names":["_createElementBlock","class","ref","$data","_createElementVNode","$props","style","_ctx","width","height","stroke","points"],"sourceRoot":"","sources":["/Users/yanbinru/Desktop/代码/github/vue3-knowledge/node_modules/@jiaminghi/data-view/lib/components/decoration4/src/main.vue"],"sourcesContent":["<template>\n  <div class=\"dv-decoration-4\" :ref=\"ref\">\n    <div\n      :class=\"`container ${reverse ? 'reverse' : 'normal'}`\"\n      :style=\"reverse ? `width:${width}px;height:5px;animation-duration:${dur}s` : `width:5px;height:${height}px;animation-duration:${dur}s`\"\n    >\n      <svg :width=\"reverse ? width : 5\" :height=\"reverse ? 5 : height\">\n        <polyline\n          :stroke=\"mergedColor[0]\"\n          :points=\"reverse ? `0, 2.5 ${width}, 2.5` : `2.5, 0 2.5, ${height}`\"\n        />\n        <polyline\n          class=\"bold-line\"\n          :stroke=\"mergedColor[1]\"\n          stroke-width=\"3\"\n          stroke-dasharray=\"20, 80\"\n          stroke-dashoffset=\"-30\"\n          :points=\"reverse ? `0, 2.5 ${width}, 2.5` : `2.5, 0 2.5, ${height}`\"\n        />\n      </svg>\n    </div>\n  </div>\n</template>\n\n<script>\nimport autoResize from '../../../mixin/autoResize'\n\nimport { deepMerge } from '@jiaminghi/charts/lib/util/index'\n\nimport { deepClone } from '@jiaminghi/c-render/lib/plugin/util'\n\nexport default {\n  name: 'DvDecoration4',\n  mixins: [autoResize],\n  props: {\n    color: {\n      type: Array,\n      default: () => ([])\n    },\n    reverse: {\n      type: Boolean,\n      default: false\n    },\n    dur: {\n      type: Number,\n      default: 3\n    }\n  },\n  data () {\n    return {\n      ref: 'decoration-4',\n\n      defaultColor: ['rgba(255, 255, 255, 0.3)', 'rgba(255, 255, 255, 0.3)'],\n\n      mergedColor: []\n    }\n  },\n  watch: {\n    color () {\n      const { mergeColor } = this\n\n      mergeColor()\n    }\n  },\n  methods: {\n    mergeColor () {\n      const { color, defaultColor } = this\n\n      this.mergedColor = deepMerge(deepClone(defaultColor, true), color || [])\n    }\n  },\n  mounted () {\n    const { mergeColor } = this\n\n    mergeColor()\n  }\n}\n</script>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}