{"ast":null,"code":"import { defineComponent } from 'vue';\nimport registerMixin from '../../../mixins/register-component.mjs';\nimport CustomThreeLayer from './CustomThreeLayer.mjs';\nvar script = defineComponent({\n  name: \"ElAmapLayerThree\",\n  mixins: [registerMixin],\n  provide() {\n    return {\n      parentInstance: this\n    };\n  },\n  props: {\n    lights: {\n      type: Array,\n      default() {\n        return [];\n      }\n    },\n    hdr: {\n      type: Object\n    },\n    zooms: {\n      type: Array,\n      default() {\n        return [2, 20];\n      }\n    },\n    opacity: {\n      type: Number\n    },\n    alpha: {\n      type: Boolean,\n      default: false\n    },\n    antialias: {\n      type: Boolean,\n      default: false\n    },\n    customCoordsCenter: {\n      type: Array,\n      default() {\n        return null;\n      }\n    },\n    axesHelper: {\n      type: Boolean,\n      default: false\n    }\n  },\n  data() {\n    return {};\n  },\n  methods: {\n    __initComponent(options) {\n      return new Promise(resolve => {\n        this.$amapComponent = new CustomThreeLayer(this.$parentComponent, options, () => {\n          resolve();\n        });\n      });\n    },\n    destroyComponent() {\n      this.$amapComponent.destroy();\n      this.$amapComponent = null;\n      this.$parentComponent = null;\n    },\n    convertLngLat(lnglat) {\n      return this.$amapComponent.convertLngLat(lnglat);\n    },\n    addObject(object) {\n      this.$amapComponent.addObject(object);\n    },\n    removeObject(object) {\n      this.$amapComponent.removeObject(object);\n    },\n    addEnvMap(obj) {\n      this.$amapComponent.addEnvMap(obj);\n    },\n    $$getScene() {\n      return this.$amapComponent.getScene();\n    },\n    $$getRender() {\n      return this.$amapComponent.getRender();\n    },\n    $$refresh() {\n      this.$amapComponent.refreshMap();\n    }\n  }\n});\nexport { script as default };","map":{"version":3,"mappings":";;;AAUA,aAAeA,eAAgB;EAC7BC,IAAM;EACNC,QAAQ,CAACC;EACTC,OAAU;IACD;MACLC,cAAgB;IAAA;EAAA;EAGpBC,KAAO;IACLC,MAAQ;MACNC,IAAM;MACNC,OAAU;QACD;MAAA;IAAA;IAGXC,GAAK;MACHF,IAAM;IAAA;IAERG,KAAO;MACLH,IAAM;MACNC,OAAU;QACR,OAAO,CAAC,CAAG;MAAA;IAAA;IAGfG,OAAS;MACPJ,IAAM;IAAA;IAERK,KAAO;MACLL,IAAM;MACNC,OAAS;IAAA;IAEXK,SAAW;MACTN,IAAM;MACNC,OAAS;IAAA;IAEXM,kBAAoB;MAClBP,IAAM;MACNC,OAAU;QACD;MAAA;IAAA;IAGXO,UAAY;MACVR,IAAM;MACNC,OAAS;IAAA;EAAA;EAGbQ,IAAO;IACE;EAAA;EAGTC,OAAS;IACPC,gBAAgBC,OAAS;MAChB,WAAIC,OAAc,CAACC,OAAY;QACpC,KAAKC,iBAAiB,IAAIC,iBAAiB,IAAK,mBAAkBJ,SAAS,MAAM;UAC/EE;QAAA;MAAA;IAAA;IAING,gBAAmB;MACjB,KAAKF,cAAe;MACpB,KAAKA,cAAiB;MACtB,KAAKG,gBAAmB;IAAA;IAE1BC,cAAcC,MAAQ;MACb,YAAKL,eAAeI,aAAc;IAAA;IAE3CE,UAAUC,MAAQ;MAChB,KAAKP,eAAeM,SAAU;IAAA;IAEhCE,aAAaD,MAAQ;MACnB,KAAKP,eAAeQ,YAAa;IAAA;IAEnCC,UAAUC,GAAK;MACb,KAAKV,eAAeS,SAAU;IAAA;IAEhCE,UAAa;MACX,OAAO,KAAKX,cAAe;IAAA;IAE7BY,WAAc;MACZ,OAAO,KAAKZ,cAAe;IAAA;IAE7Ba,SAAY;MACV,KAAKb,cAAe;IAAA;EAAA;AAAA","names":["defineComponent","name","mixins","registerMixin","provide","parentInstance","props","lights","type","default","hdr","zooms","opacity","alpha","antialias","customCoordsCenter","axesHelper","data","methods","__initComponent","options","Promise","resolve","$amapComponent","CustomThreeLayer","destroyComponent","$parentComponent","convertLngLat","lnglat","addObject","object","removeObject","addEnvMap","obj","$$getScene","$$getRender","$$refresh"],"sources":["../../../../../../src/packages/three/ThreeLayer/ThreeLayer.vue"],"sourcesContent":["<template>\r\n  <slot />\r\n</template>\r\n<script lang=\"ts\">\r\nimport {defineComponent} from \"vue\";\r\nimport registerMixin from '../../../mixins/register-component';\r\nimport CustomThreeLayer from \"./CustomThreeLayer\";\r\nimport type {HDROptions, LightOption} from './Type'\r\nimport type {PropType} from \"vue\";\r\n\r\nexport default defineComponent({\r\n  name: 'ElAmapLayerThree',\r\n  mixins: [registerMixin],\r\n  provide() {\r\n    return {\r\n      parentInstance: this\r\n    };\r\n  },\r\n  props: {\r\n    lights: {\r\n      type: Array as PropType<LightOption[]>,\r\n      default() {\r\n        return [];\r\n      }\r\n    }, // 灯光数组\r\n    hdr: {\r\n      type: Object as PropType<HDROptions>\r\n    },\r\n    zooms: {\r\n      type: Array as PropType<number[]>,\r\n      default() {\r\n        return [2, 20];\r\n      }\r\n    }, // 支持的缩放级别范围，默认范围 [2, 20]\r\n    opacity: {\r\n      type: Number\r\n    }, // 透明度，默认 1\r\n    alpha: {\r\n      type: Boolean,\r\n      default: false\r\n    }, // canvas是否包含alpha (透明度)。默认为 false\r\n    antialias: {\r\n      type: Boolean,\r\n      default: false\r\n    },// 是否执行抗锯齿。默认为false\r\n    customCoordsCenter: {\r\n      type: Array as PropType<number[]>,\r\n      default() {\r\n        return null\r\n      }\r\n    },\r\n    axesHelper: {\r\n      type: Boolean,\r\n      default: false\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n    };\r\n  },\r\n  methods: {\r\n    __initComponent(options) {\r\n      return new Promise<void>((resolve) => {\r\n        this.$amapComponent = new CustomThreeLayer(this.$parentComponent, options, () => {\r\n          resolve()\r\n        });\r\n      })\r\n    },\r\n    destroyComponent() {\r\n      this.$amapComponent.destroy();\r\n      this.$amapComponent = null;\r\n      this.$parentComponent = null;\r\n    },\r\n    convertLngLat(lnglat) {\r\n      return this.$amapComponent.convertLngLat(lnglat);\r\n    },\r\n    addObject(object) {\r\n      this.$amapComponent.addObject(object);\r\n    },\r\n    removeObject(object) {\r\n      this.$amapComponent.removeObject(object);\r\n    },\r\n    addEnvMap(obj) {\r\n      this.$amapComponent.addEnvMap(obj);\r\n    },\r\n    $$getScene() {\r\n      return this.$amapComponent.getScene();\r\n    },\r\n    $$getRender() {\r\n      return this.$amapComponent.getRender();\r\n    },\r\n    $$refresh() {\r\n      this.$amapComponent.refreshMap();\r\n    }\r\n  }\r\n});\r\n</script>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}