{"ast":null,"code":"import { ComponentStructure } from \"./componentStructure\";\nimport { isHtmlTag, isTransition } from \"../util/tags\";\nimport { resolveComponent, TransitionGroup } from \"vue\";\nfunction getSlot(slots, key) {\n  const slotValue = slots[key];\n  return slotValue ? slotValue() : [];\n}\nfunction computeNodes({\n  $slots,\n  realList,\n  getKey\n}) {\n  const normalizedList = realList || [];\n  const [header, footer] = [\"header\", \"footer\"].map(name => getSlot($slots, name));\n  const {\n    item\n  } = $slots;\n  if (!item) {\n    throw new Error(\"draggable element must have an item slot\");\n  }\n  const defaultNodes = normalizedList.flatMap((element, index) => item({\n    element,\n    index\n  }).map(node => {\n    node.key = getKey(element);\n    node.props = {\n      ...(node.props || {}),\n      \"data-draggable\": true\n    };\n    return node;\n  }));\n  if (defaultNodes.length !== normalizedList.length) {\n    throw new Error(\"Item slot must have only one child\");\n  }\n  return {\n    header,\n    footer,\n    default: defaultNodes\n  };\n}\nfunction getRootInformation(tag) {\n  const transition = isTransition(tag);\n  const externalComponent = !isHtmlTag(tag) && !transition;\n  return {\n    transition,\n    externalComponent,\n    tag: externalComponent ? resolveComponent(tag) : transition ? TransitionGroup : tag\n  };\n}\nfunction computeComponentStructure({\n  $slots,\n  tag,\n  realList,\n  getKey\n}) {\n  const nodes = computeNodes({\n    $slots,\n    realList,\n    getKey\n  });\n  const root = getRootInformation(tag);\n  return new ComponentStructure({\n    nodes,\n    root,\n    realList\n  });\n}\nexport { computeComponentStructure };","map":{"version":3,"names":["ComponentStructure","isHtmlTag","isTransition","resolveComponent","TransitionGroup","getSlot","slots","key","slotValue","computeNodes","$slots","realList","getKey","normalizedList","header","footer","map","name","item","Error","defaultNodes","flatMap","element","index","node","props","length","default","getRootInformation","tag","transition","externalComponent","computeComponentStructure","nodes","root"],"sources":["/Users/yanbinru/Desktop/代码/github/vue3-knowledge/node_modules/vuedraggable/src/core/renderHelper.js"],"sourcesContent":["import { ComponentStructure } from \"./componentStructure\";\r\nimport { isHtmlTag, isTransition } from \"../util/tags\";\r\nimport { resolveComponent, TransitionGroup } from \"vue\";\r\n\r\nfunction getSlot(slots, key) {\r\n  const slotValue = slots[key];\r\n  return slotValue ? slotValue() : [];\r\n}\r\n\r\nfunction computeNodes({ $slots, realList, getKey }) {\r\n  const normalizedList = realList || [];\r\n  const [header, footer] = [\"header\", \"footer\"].map(name =>\r\n    getSlot($slots, name)\r\n  );\r\n  const { item } = $slots;\r\n  if (!item) {\r\n    throw new Error(\"draggable element must have an item slot\");\r\n  }\r\n  const defaultNodes = normalizedList.flatMap((element, index) =>\r\n    item({ element, index }).map(node => {\r\n      node.key = getKey(element);\r\n      node.props = { ...(node.props || {}), \"data-draggable\": true };\r\n      return node;\r\n    })\r\n  );\r\n  if (defaultNodes.length !== normalizedList.length) {\r\n    throw new Error(\"Item slot must have only one child\");\r\n  }\r\n  return {\r\n    header,\r\n    footer,\r\n    default: defaultNodes\r\n  };\r\n}\r\n\r\nfunction getRootInformation(tag) {\r\n  const transition = isTransition(tag);\r\n  const externalComponent = !isHtmlTag(tag) && !transition;\r\n  return {\r\n    transition,\r\n    externalComponent,\r\n    tag: externalComponent\r\n      ? resolveComponent(tag)\r\n      : transition\r\n      ? TransitionGroup\r\n      : tag\r\n  };\r\n}\r\n\r\nfunction computeComponentStructure({ $slots, tag, realList, getKey }) {\r\n  const nodes = computeNodes({ $slots, realList, getKey });\r\n  const root = getRootInformation(tag);\r\n  return new ComponentStructure({ nodes, root, realList });\r\n}\r\n\r\nexport { computeComponentStructure };\r\n"],"mappings":"AAAA,SAASA,kBAAkB,QAAQ,sBAAsB;AACzD,SAASC,SAAS,EAAEC,YAAY,QAAQ,cAAc;AACtD,SAASC,gBAAgB,EAAEC,eAAe,QAAQ,KAAK;AAEvD,SAASC,OAAO,CAACC,KAAK,EAAEC,GAAG,EAAE;EAC3B,MAAMC,SAAS,GAAGF,KAAK,CAACC,GAAG,CAAC;EAC5B,OAAOC,SAAS,GAAGA,SAAS,EAAE,GAAG,EAAE;AACrC;AAEA,SAASC,YAAY,CAAC;EAAEC,MAAM;EAAEC,QAAQ;EAAEC;AAAO,CAAC,EAAE;EAClD,MAAMC,cAAc,GAAGF,QAAQ,IAAI,EAAE;EACrC,MAAM,CAACG,MAAM,EAAEC,MAAM,CAAC,GAAG,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAACC,GAAG,CAACC,IAAI,IACpDZ,OAAO,CAACK,MAAM,EAAEO,IAAI,CAAC,CACtB;EACD,MAAM;IAAEC;EAAK,CAAC,GAAGR,MAAM;EACvB,IAAI,CAACQ,IAAI,EAAE;IACT,MAAM,IAAIC,KAAK,CAAC,0CAA0C,CAAC;EAC7D;EACA,MAAMC,YAAY,GAAGP,cAAc,CAACQ,OAAO,CAAC,CAACC,OAAO,EAAEC,KAAK,KACzDL,IAAI,CAAC;IAAEI,OAAO;IAAEC;EAAM,CAAC,CAAC,CAACP,GAAG,CAACQ,IAAI,IAAI;IACnCA,IAAI,CAACjB,GAAG,GAAGK,MAAM,CAACU,OAAO,CAAC;IAC1BE,IAAI,CAACC,KAAK,GAAG;MAAE,IAAID,IAAI,CAACC,KAAK,IAAI,CAAC,CAAC,CAAC;MAAE,gBAAgB,EAAE;IAAK,CAAC;IAC9D,OAAOD,IAAI;EACb,CAAC,CAAC,CACH;EACD,IAAIJ,YAAY,CAACM,MAAM,KAAKb,cAAc,CAACa,MAAM,EAAE;IACjD,MAAM,IAAIP,KAAK,CAAC,oCAAoC,CAAC;EACvD;EACA,OAAO;IACLL,MAAM;IACNC,MAAM;IACNY,OAAO,EAAEP;EACX,CAAC;AACH;AAEA,SAASQ,kBAAkB,CAACC,GAAG,EAAE;EAC/B,MAAMC,UAAU,GAAG5B,YAAY,CAAC2B,GAAG,CAAC;EACpC,MAAME,iBAAiB,GAAG,CAAC9B,SAAS,CAAC4B,GAAG,CAAC,IAAI,CAACC,UAAU;EACxD,OAAO;IACLA,UAAU;IACVC,iBAAiB;IACjBF,GAAG,EAAEE,iBAAiB,GAClB5B,gBAAgB,CAAC0B,GAAG,CAAC,GACrBC,UAAU,GACV1B,eAAe,GACfyB;EACN,CAAC;AACH;AAEA,SAASG,yBAAyB,CAAC;EAAEtB,MAAM;EAAEmB,GAAG;EAAElB,QAAQ;EAAEC;AAAO,CAAC,EAAE;EACpE,MAAMqB,KAAK,GAAGxB,YAAY,CAAC;IAAEC,MAAM;IAAEC,QAAQ;IAAEC;EAAO,CAAC,CAAC;EACxD,MAAMsB,IAAI,GAAGN,kBAAkB,CAACC,GAAG,CAAC;EACpC,OAAO,IAAI7B,kBAAkB,CAAC;IAAEiC,KAAK;IAAEC,IAAI;IAAEvB;EAAS,CAAC,CAAC;AAC1D;AAEA,SAASqB,yBAAyB"},"metadata":{},"sourceType":"module","externalDependencies":[]}