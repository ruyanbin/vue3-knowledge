{"ast":null,"code":"import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, renderList as _renderList, Fragment as _Fragment, normalizeClass as _normalizeClass, renderSlot as _renderSlot } from \"vue\";\nconst _hoisted_1 = [\"width\", \"height\"];\nconst _hoisted_2 = [\"fill\", \"points\"];\nconst _hoisted_3 = [\"fill\"];\nconst _hoisted_4 = [\"values\"];\nconst _hoisted_5 = [\"fill\"];\nconst _hoisted_6 = [\"values\"];\nconst _hoisted_7 = [\"fill\"];\nconst _hoisted_8 = [\"values\"];\nconst _hoisted_9 = {\n  class: \"border-box-content\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", {\n    class: \"dv-border-box-1\",\n    ref: $data.ref\n  }, [(_openBlock(), _createElementBlock(\"svg\", {\n    class: \"border\",\n    width: _ctx.width,\n    height: _ctx.height\n  }, [_createElementVNode(\"polygon\", {\n    fill: $props.backgroundColor,\n    points: `10, 27 10, ${_ctx.height - 27} 13, ${_ctx.height - 24} 13, ${_ctx.height - 21} 24, ${_ctx.height - 11}\n      38, ${_ctx.height - 11} 41, ${_ctx.height - 8} 73, ${_ctx.height - 8} 75, ${_ctx.height - 10} 81, ${_ctx.height - 10}\n      85, ${_ctx.height - 6} ${_ctx.width - 85}, ${_ctx.height - 6} ${_ctx.width - 81}, ${_ctx.height - 10} ${_ctx.width - 75}, ${_ctx.height - 10}\n      ${_ctx.width - 73}, ${_ctx.height - 8} ${_ctx.width - 41}, ${_ctx.height - 8} ${_ctx.width - 38}, ${_ctx.height - 11}\n      ${_ctx.width - 24}, ${_ctx.height - 11} ${_ctx.width - 13}, ${_ctx.height - 21} ${_ctx.width - 13}, ${_ctx.height - 24}\n      ${_ctx.width - 10}, ${_ctx.height - 27} ${_ctx.width - 10}, 27 ${_ctx.width - 13}, 25 ${_ctx.width - 13}, 21\n      ${_ctx.width - 24}, 11 ${_ctx.width - 38}, 11 ${_ctx.width - 41}, 8 ${_ctx.width - 73}, 8 ${_ctx.width - 75}, 10\n      ${_ctx.width - 81}, 10 ${_ctx.width - 85}, 6 85, 6 81, 10 75, 10 73, 8 41, 8 38, 11 24, 11 13, 21 13, 24`\n  }, null, 8 /* PROPS */, _hoisted_2)], 8 /* PROPS */, _hoisted_1)), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.border, item => {\n    return _openBlock(), _createElementBlock(\"svg\", {\n      width: \"150px\",\n      height: \"150px\",\n      key: item,\n      class: _normalizeClass(`${item} border`)\n    }, [_createElementVNode(\"polygon\", {\n      fill: $data.mergedColor[0],\n      points: \"6,66 6,18 12,12 18,12 24,6 27,6 30,9 36,9 39,6 84,6 81,9 75,9 73.2,7 40.8,7 37.8,10.2 24,10.2 12,21 12,24 9,27 9,51 7.8,54 7.8,63\"\n    }, [_createElementVNode(\"animate\", {\n      attributeName: \"fill\",\n      values: `${$data.mergedColor[0]};${$data.mergedColor[1]};${$data.mergedColor[0]}`,\n      dur: \"0.5s\",\n      begin: \"0s\",\n      repeatCount: \"indefinite\"\n    }, null, 8 /* PROPS */, _hoisted_4)], 8 /* PROPS */, _hoisted_3), _createElementVNode(\"polygon\", {\n      fill: $data.mergedColor[1],\n      points: \"27.599999999999998,4.8 38.4,4.8 35.4,7.8 30.599999999999998,7.8\"\n    }, [_createElementVNode(\"animate\", {\n      attributeName: \"fill\",\n      values: `${$data.mergedColor[1]};${$data.mergedColor[0]};${$data.mergedColor[1]}`,\n      dur: \"0.5s\",\n      begin: \"0s\",\n      repeatCount: \"indefinite\"\n    }, null, 8 /* PROPS */, _hoisted_6)], 8 /* PROPS */, _hoisted_5), _createElementVNode(\"polygon\", {\n      fill: $data.mergedColor[0],\n      points: \"9,54 9,63 7.199999999999999,66 7.199999999999999,75 7.8,78 7.8,110 8.4,110 8.4,66 9.6,66 9.6,54\"\n    }, [_createElementVNode(\"animate\", {\n      attributeName: \"fill\",\n      values: `${$data.mergedColor[0]};${$data.mergedColor[1]};transparent`,\n      dur: \"1s\",\n      begin: \"0s\",\n      repeatCount: \"indefinite\"\n    }, null, 8 /* PROPS */, _hoisted_8)], 8 /* PROPS */, _hoisted_7)], 2 /* CLASS */);\n  }), 128 /* KEYED_FRAGMENT */)), _createElementVNode(\"div\", _hoisted_9, [_renderSlot(_ctx.$slots, \"default\")])], 512 /* NEED_PATCH */);\n}","map":{"version":3,"mappings":";;;;;;;;;;EA0DSA,KAAK,EAAC;AAAoB;;uBAzDjCC,oBA4DM;IA5DDD,KAAK,EAAC,iBAAiB;IAAEE,GAAG,EAAEC;qBACjCF,oBASM;IATDD,KAAK,EAAC,QAAQ;IAAEI,KAAK,EAAEC,UAAK;IAAGC,MAAM,EAAED;MAC1CE,oBAOmG;IAPzFC,IAAI,EAAEC,sBAAe;IAAGC,MAAM,gBAAgBL,WAAM,aAAaA,WAAM,aAAaA,WAAM,aAAaA,WAAM;YAAmBA,WAAM,aAAaA,WAAM,YAAYA,WAAM,YAAYA,WAAM,aAAaA,WAAM;YAAmBA,WAAM,QAAQA,UAAK,UAAUA,WAAM,QAAQA,UAAK,UAAUA,WAAM,SAASA,UAAK,UAAUA,WAAM;QAAeA,UAAK,UAAUA,WAAM,QAAQA,UAAK,UAAUA,WAAM,QAAQA,UAAK,UAAUA,WAAM;QAAeA,UAAK,UAAUA,WAAM,SAASA,UAAK,UAAUA,WAAM,SAASA,UAAK,UAAUA,WAAM;QAAeA,UAAK,UAAUA,WAAM,SAASA,UAAK,aAAaA,UAAK,aAAaA,UAAK;QAAmBA,UAAK,aAAaA,UAAK,aAAaA,UAAK,YAAYA,UAAK,YAAYA,UAAK;QAAmBA,UAAK,aAAaA,UAAK;wFAUzuBJ,oBA2CMU,6BAvCWR,YAAM,EAAdS,IAAI;yBAJbX,oBA2CM;MA1CJG,KAAK,EAAC,OAAO;MACbE,MAAM,EAAC,OAAO;MACbO,GAAG,EAAED,IAAI;MAETZ,KAAK,qBAAKY,IAAI;QAEfL,oBAWU;MAVPC,IAAI,EAAEL,iBAAW;MAClBO,MAAM,EAAC;QAEPH,oBAME;MALAO,aAAa,EAAC,MAAM;MACnBC,MAAM,KAAKZ,iBAAW,OAAOA,iBAAW,OAAOA,iBAAW;MAC3Da,GAAG,EAAC,MAAM;MACVC,KAAK,EAAC,IAAI;MACVC,WAAW,EAAC;sEAGhBX,oBAWU;MAVPC,IAAI,EAAEL,iBAAW;MAClBO,MAAM,EAAC;QAEPH,oBAME;MALAO,aAAa,EAAC,MAAM;MACnBC,MAAM,KAAKZ,iBAAW,OAAOA,iBAAW,OAAOA,iBAAW;MAC3Da,GAAG,EAAC,MAAM;MACVC,KAAK,EAAC,IAAI;MACVC,WAAW,EAAC;sEAGhBX,oBAWU;MAVPC,IAAI,EAAEL,iBAAW;MAClBO,MAAM,EAAC;QAEPH,oBAME;MALAO,aAAa,EAAC,MAAM;MACnBC,MAAM,KAAKZ,iBAAW,OAAOA,iBAAW;MACzCa,GAAG,EAAC,IAAI;MACRC,KAAK,EAAC,IAAI;MACVC,WAAW,EAAC;;kCAKlBX,oBAEM,OAFNY,UAEM,GADJC,YAAaf","names":["class","_createElementBlock","ref","$data","width","_ctx","height","_createElementVNode","fill","$props","points","_Fragment","item","key","attributeName","values","dur","begin","repeatCount","_hoisted_9","_renderSlot"],"sourceRoot":"","sources":["/Users/yanbinru/Desktop/代码/github/vue3-knowledge/node_modules/@jiaminghi/data-view/lib/components/borderBox1/src/main.vue"],"sourcesContent":["<template>\n  <div class=\"dv-border-box-1\" :ref=\"ref\">\n    <svg class=\"border\" :width=\"width\" :height=\"height\">\n      <polygon :fill=\"backgroundColor\" :points=\"`10, 27 10, ${height - 27} 13, ${height - 24} 13, ${height - 21} 24, ${height - 11}\n      38, ${height - 11} 41, ${height - 8} 73, ${height - 8} 75, ${height - 10} 81, ${height - 10}\n      85, ${height - 6} ${width - 85}, ${height - 6} ${width - 81}, ${height - 10} ${width - 75}, ${height - 10}\n      ${width - 73}, ${height - 8} ${width - 41}, ${height - 8} ${width - 38}, ${height - 11}\n      ${width - 24}, ${height - 11} ${width - 13}, ${height - 21} ${width - 13}, ${height - 24}\n      ${width - 10}, ${height - 27} ${width - 10}, 27 ${width - 13}, 25 ${width - 13}, 21\n      ${width - 24}, 11 ${width - 38}, 11 ${width - 41}, 8 ${width - 73}, 8 ${width - 75}, 10\n      ${width - 81}, 10 ${width - 85}, 6 85, 6 81, 10 75, 10 73, 8 41, 8 38, 11 24, 11 13, 21 13, 24`\" />\n    </svg>\n\n    <svg\n      width=\"150px\"\n      height=\"150px\"\n      :key=\"item\"\n      v-for=\"item in border\"\n      :class=\"`${item} border`\"\n    >\n      <polygon\n        :fill=\"mergedColor[0]\"\n        points=\"6,66 6,18 12,12 18,12 24,6 27,6 30,9 36,9 39,6 84,6 81,9 75,9 73.2,7 40.8,7 37.8,10.2 24,10.2 12,21 12,24 9,27 9,51 7.8,54 7.8,63\"\n      >\n        <animate\n          attributeName=\"fill\"\n          :values=\"`${mergedColor[0]};${mergedColor[1]};${mergedColor[0]}`\"\n          dur=\"0.5s\"\n          begin=\"0s\"\n          repeatCount=\"indefinite\"\n        />\n      </polygon>\n      <polygon\n        :fill=\"mergedColor[1]\"\n        points=\"27.599999999999998,4.8 38.4,4.8 35.4,7.8 30.599999999999998,7.8\"\n      >\n        <animate\n          attributeName=\"fill\"\n          :values=\"`${mergedColor[1]};${mergedColor[0]};${mergedColor[1]}`\"\n          dur=\"0.5s\"\n          begin=\"0s\"\n          repeatCount=\"indefinite\"\n        />\n      </polygon>\n      <polygon\n        :fill=\"mergedColor[0]\"\n        points=\"9,54 9,63 7.199999999999999,66 7.199999999999999,75 7.8,78 7.8,110 8.4,110 8.4,66 9.6,66 9.6,54\"\n      >\n        <animate\n          attributeName=\"fill\"\n          :values=\"`${mergedColor[0]};${mergedColor[1]};transparent`\"\n          dur=\"1s\"\n          begin=\"0s\"\n          repeatCount=\"indefinite\"\n        />\n      </polygon>\n    </svg>\n\n    <div class=\"border-box-content\">\n      <slot></slot>\n    </div>\n  </div>\n</template>\n\n<script>\nimport autoResize from '../../../mixin/autoResize'\n\nimport { deepMerge } from '@jiaminghi/charts/lib/util/index'\n\nimport { deepClone } from '@jiaminghi/c-render/lib/plugin/util'\n\nexport default {\n  name: 'DvBorderBox1',\n  mixins: [autoResize],\n  props: {\n    color: {\n      type: Array,\n      default: () => ([])\n    },\n    backgroundColor: {\n      type: String,\n      default: 'transparent'\n    }\n  },\n  data () {\n    return {\n      ref: 'border-box-1',\n\n      border: ['left-top', 'right-top', 'left-bottom', 'right-bottom'],\n\n      defaultColor: ['#4fd2dd', '#235fa7'],\n\n      mergedColor: []\n    }\n  },\n  watch: {\n    color () {\n      const { mergeColor } = this\n\n      mergeColor()\n    }\n  },\n  methods: {\n    mergeColor () {\n      const { color, defaultColor } = this\n\n      this.mergedColor = deepMerge(deepClone(defaultColor, true), color || [])\n    }\n  },\n  mounted () {\n    const { mergeColor } = this\n\n    mergeColor()\n  }\n}\n</script>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}