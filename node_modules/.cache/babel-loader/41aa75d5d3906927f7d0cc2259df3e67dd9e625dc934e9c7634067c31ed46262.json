{"ast":null,"code":"import autoResize from '../../../mixin/autoResize';\nimport { getPolylineLength } from '@jiaminghi/charts/lib/util';\nimport { deepMerge } from '@jiaminghi/charts/lib/util/index';\nimport { deepClone } from '@jiaminghi/c-render/lib/plugin/util';\nexport default {\n  name: 'DvDecoration5',\n  mixins: [autoResize],\n  props: {\n    color: {\n      type: Array,\n      default: () => []\n    }\n  },\n  data() {\n    return {\n      ref: 'decoration-5',\n      line1Points: '',\n      line2Points: '',\n      line1Length: 0,\n      line2Length: 0,\n      defaultColor: ['#3f96a5', '#3f96a5'],\n      mergedColor: []\n    };\n  },\n  watch: {\n    color() {\n      const {\n        mergeColor\n      } = this;\n      mergeColor();\n    }\n  },\n  methods: {\n    afterAutoResizeMixinInit() {\n      const {\n        calcSVGData\n      } = this;\n      calcSVGData();\n    },\n    calcSVGData() {\n      const {\n        width,\n        height\n      } = this;\n      let line1Points = [[0, height * 0.2], [width * 0.18, height * 0.2], [width * 0.2, height * 0.4], [width * 0.25, height * 0.4], [width * 0.27, height * 0.6], [width * 0.72, height * 0.6], [width * 0.75, height * 0.4], [width * 0.8, height * 0.4], [width * 0.82, height * 0.2], [width, height * 0.2]];\n      let line2Points = [[width * 0.3, height * 0.8], [width * 0.7, height * 0.8]];\n      const line1Length = getPolylineLength(line1Points);\n      const line2Length = getPolylineLength(line2Points);\n      line1Points = line1Points.map(point => point.join(',')).join(' ');\n      line2Points = line2Points.map(point => point.join(',')).join(' ');\n      this.line1Points = line1Points;\n      this.line2Points = line2Points;\n      this.line1Length = line1Length;\n      this.line2Length = line2Length;\n    },\n    onResize() {\n      const {\n        calcSVGData\n      } = this;\n      calcSVGData();\n    },\n    mergeColor() {\n      const {\n        color,\n        defaultColor\n      } = this;\n      this.mergedColor = deepMerge(deepClone(defaultColor, true), color || []);\n    }\n  },\n  mounted() {\n    const {\n      mergeColor\n    } = this;\n    mergeColor();\n  }\n};","map":{"version":3,"mappings":"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","names":["autoResize","getPolylineLength","deepMerge","deepClone","name","mixins","props","color","type","Array","default","data","ref","line1Points","line2Points","line1Length","line2Length","defaultColor","mergedColor","watch","mergeColor","methods","afterAutoResizeMixinInit","calcSVGData","width","height","map","point","join","onResize","mounted"],"sourceRoot":"","sources":["/Users/yanbinru/Desktop/代码/github/vue3-knowledge/node_modules/@jiaminghi/data-view/lib/components/decoration5/src/main.vue"],"sourcesContent":["<template>\n  <div class=\"dv-decoration-5\" :ref=\"ref\">\n    <svg :width=\"width\" :height=\"height\">\n      <polyline\n        fill=\"transparent\"\n        :stroke=\"mergedColor[0]\"\n        stroke-width=\"3\"\n        :points=\"line1Points\"\n      >\n        <animate\n          attributeName=\"stroke-dasharray\"\n          attributeType=\"XML\"\n          :from=\"`0, ${line1Length / 2}, 0, ${line1Length / 2}`\"\n          :to=\"`0, 0, ${line1Length}, 0`\"\n          dur=\"1.2s\"\n          begin=\"0s\"\n          calcMode=\"spline\"\n          keyTimes=\"0;1\"\n          keySplines=\"0.4,1,0.49,0.98\"\n          repeatCount=\"indefinite\"\n        />\n      </polyline>\n      <polyline\n        fill=\"transparent\"\n        :stroke=\"mergedColor[1]\"\n        stroke-width=\"2\"\n        :points=\"line2Points\"\n      >\n        <animate\n          attributeName=\"stroke-dasharray\"\n          attributeType=\"XML\"\n          :from=\"`0, ${line2Length / 2}, 0, ${line2Length / 2}`\"\n          :to=\"`0, 0, ${line2Length}, 0`\"\n          dur=\"1.2s\"\n          begin=\"0s\"\n          calcMode=\"spline\"\n          keyTimes=\"0;1\"\n          keySplines=\".4,1,.49,.98\"\n          repeatCount=\"indefinite\"\n        />\n      </polyline>\n    </svg>\n  </div>\n</template>\n\n<script>\nimport autoResize from '../../../mixin/autoResize'\n\nimport { getPolylineLength } from '@jiaminghi/charts/lib/util'\n\nimport { deepMerge } from '@jiaminghi/charts/lib/util/index'\n\nimport { deepClone } from '@jiaminghi/c-render/lib/plugin/util'\n\nexport default {\n  name: 'DvDecoration5',\n  mixins: [autoResize],\n  props: {\n    color: {\n      type: Array,\n      default: () => ([])\n    }\n  },\n  data () {\n    return {\n      ref: 'decoration-5',\n\n      line1Points: '',\n      line2Points: '',\n\n      line1Length: 0,\n      line2Length: 0,\n\n      defaultColor: ['#3f96a5', '#3f96a5'],\n\n      mergedColor: []\n    }\n  },\n  watch: {\n    color () {\n      const { mergeColor } = this\n\n      mergeColor()\n    }\n  },\n  methods: {\n    afterAutoResizeMixinInit () {\n      const { calcSVGData } = this\n\n      calcSVGData()\n    },\n    calcSVGData () {\n      const { width, height } = this\n\n      let line1Points = [\n        [0, height * 0.2], [width * 0.18, height * 0.2], [width * 0.2, height * 0.4], [width * 0.25, height * 0.4],\n        [width * 0.27, height * 0.6], [width * 0.72, height * 0.6], [width * 0.75, height * 0.4],\n        [width * 0.8, height * 0.4], [width * 0.82, height * 0.2], [width, height * 0.2]\n      ]\n\n      let line2Points = [\n        [width * 0.3, height * 0.8], [width * 0.7, height * 0.8]\n      ]\n\n      const line1Length = getPolylineLength(line1Points)\n      const line2Length = getPolylineLength(line2Points)\n\n      line1Points = line1Points.map(point => point.join(',')).join(' ')\n      line2Points = line2Points.map(point => point.join(',')).join(' ')\n\n      this.line1Points = line1Points\n      this.line2Points = line2Points\n\n      this.line1Length = line1Length\n      this.line2Length = line2Length\n    },\n    onResize () {\n      const { calcSVGData } = this\n\n      calcSVGData()\n    },\n    mergeColor () {\n      const { color, defaultColor } = this\n\n      this.mergedColor = deepMerge(deepClone(defaultColor, true), color || [])\n    }\n  },\n  mounted () {\n    const { mergeColor } = this\n\n    mergeColor()\n  }\n}\n</script>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}