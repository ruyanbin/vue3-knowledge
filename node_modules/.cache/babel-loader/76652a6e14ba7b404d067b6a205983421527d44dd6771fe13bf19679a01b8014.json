{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { defineComponent } from 'vue';\nimport registerMixin from '../../../mixins/register-component.mjs';\nvar script = defineComponent({\n  name: \"ElAmapLoca\",\n  mixins: [registerMixin],\n  provide() {\n    return {\n      parentInstance: this\n    };\n  },\n  props: {\n    ambLight: {\n      type: Object\n    },\n    dirLight: {\n      type: Object\n    },\n    pointLight: {\n      type: Object\n    },\n    onClick: {\n      type: Function,\n      default: null\n    },\n    onMousemove: {\n      type: Function,\n      default: null\n    },\n    onRightclick: {\n      type: Function,\n      default: null\n    },\n    eventOptions: {\n      type: Object,\n      default: () => ({\n        hitFirst: true\n      })\n    }\n  },\n  emits: [\"mousemove\", \"click\", \"rightclick\"],\n  data() {\n    return {\n      isDragging: false,\n      isRotating: false,\n      hitFirst: true\n    };\n  },\n  unmounted() {\n    this.$amapComponent = null;\n    this.$parentComponent = null;\n  },\n  methods: {\n    __initComponent(options) {\n      this.$amapComponent = new Loca.Container({\n        map: this.$parentComponent\n      });\n      if (options.ambLight) {\n        this.$amapComponent.ambLight = options.ambLight;\n      }\n      if (options.dirLight) {\n        this.$amapComponent.dirLight = options.dirLight;\n      }\n      if (options.pointLight) {\n        this.$amapComponent.pointLight = options.pointLight;\n      }\n      this.hitFirst = options.eventOptions.hitFirst;\n      this.bindEvents();\n    },\n    bindEvents() {\n      if (this.parentInstance) {\n        const map = this.getMap();\n        const $props = this.$props;\n        if ($props.onClick !== null) {\n          map.on(\"click\", this.clickMap);\n        }\n        if ($props.onMousemove !== null) {\n          map.on(\"mousemove\", this.mouseMoveMap);\n          map.on(\"dragstart\", this.dragStart);\n          map.on(\"dragend\", this.dragEnd);\n          map.on(\"rotatestart\", this.rotateStart);\n          map.on(\"rotateend\", this.rotateEnd);\n          map.on(\"mouseout\", this.mouseoutMap);\n        }\n        if ($props.onRightclick !== null) {\n          map.on(\"rightclick\", this.rightclickMap);\n        }\n      }\n    },\n    clickMap(e) {\n      const features = this._getFeature(e);\n      this.$emit(\"click\", features, e);\n    },\n    rightclickMap(e) {\n      const features = this._getFeature(e);\n      this.$emit(\"rightclick\", features, e);\n    },\n    mouseMoveMap(e) {\n      if (this.isDragging || this.isRotating) {\n        return;\n      }\n      const features = this._getFeature(e);\n      this.$emit(\"mousemove\", features, e);\n    },\n    _getFeature(e) {\n      const features = [];\n      if (this.$amapComponent.layers) {\n        const layers = [];\n        this.$amapComponent.layers.forEach(v => {\n          layers.push(v);\n        });\n        layers.sort((a, b) => b.zIndex - a.zIndex);\n        const layerLen = layers.length;\n        for (let i = 0; i < layerLen; i++) {\n          const temp = layers[i].queryFeature(e.pixel.toArray());\n          if (temp) {\n            features.push(temp);\n            if (this.hitFirst) {\n              break;\n            }\n          }\n        }\n      }\n      return features;\n    },\n    dragStart() {\n      this.isDragging = true;\n    },\n    dragEnd() {\n      this.isDragging = false;\n    },\n    mouseoutMap() {\n      this.isDragging = false;\n      this.isRotating = false;\n    },\n    rotateStart() {\n      this.isRotating = true;\n    },\n    rotateEnd() {\n      this.isRotating = false;\n    },\n    unBindEvents() {\n      if (this.parentInstance) {\n        const map = this.getMap();\n        map.off(\"click\", this.clickMap);\n        map.off(\"rightclick\", this.rightclickMap);\n        map.off(\"mousemove\", this.mouseMoveMap);\n        map.off(\"dragstart\", this.dragStart);\n        map.off(\"dragend\", this.dragEnd);\n        map.off(\"rotatestart\", this.rotateStart);\n        map.off(\"rotateend\", this.rotateEnd);\n        map.off(\"mouseout\", this.mouseoutMap);\n      }\n    },\n    destroyComponent() {\n      this.unBindEvents();\n      this.$amapComponent.destroy();\n    },\n    getMap() {\n      return this.$parentComponent;\n    }\n  }\n});\nexport { script as default };","map":{"version":3,"mappings":"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","names":["defineComponent","name","mixins","registerMixin","provide","parentInstance","props","ambLight","type","dirLight","pointLight","onClick","default","onMousemove","onRightclick","eventOptions","hitFirst","emits","data","isDragging","isRotating","unmounted","$amapComponent","$parentComponent","methods","__initComponent","options","Loca","Container","map","bindEvents","$props","clickMap","e","_getFeature","features","rightclickMap","mouseMoveMap","layers","v","push","sort","a","b","zIndex","layerLen","i","temp","pixel","dragStart","dragEnd","mouseoutMap","rotateStart","rotateEnd","unBindEvents","destroyComponent","getMap"],"sources":["../../../../../../src/packages/loca/Loca/Loca.vue"],"sourcesContent":["<template>\r\n  <div><slot /></div>\r\n</template>\r\n<script lang=\"ts\">\r\nimport {defineComponent} from \"vue\";\r\nimport registerMixin from '../../../mixins/register-component';\r\nimport type { PropType} from \"vue\";\r\nimport type {EventOptions} from './Type'\r\n\r\nexport default defineComponent({\r\n  name: 'ElAmapLoca',\r\n  mixins: [registerMixin],\r\n  provide() {\r\n    return {\r\n      parentInstance: this\r\n    };\r\n  },\r\n  props: {\r\n    ambLight: {\r\n      type: Object\r\n    }, // 环境光\r\n    dirLight: {\r\n      type: Object\r\n    }, // 平行光\r\n    pointLight: {\r\n      type: Object\r\n    }, // 点光\r\n    onClick: {\r\n      type: Function,\r\n      default: null\r\n    },\r\n    onMousemove: {\r\n      type: Function,\r\n      default: null\r\n    },\r\n    onRightclick: {\r\n      type: Function,\r\n      default: null\r\n    },\r\n    eventOptions: {\r\n      type: Object as PropType<EventOptions>,\r\n      default: () => ({\r\n        hitFirst: true\r\n      })\r\n    } // 对于事件是否只触发第一个选中的数据\r\n  },\r\n  emits: ['mousemove', 'click', 'rightclick' ],\r\n  data() {\r\n    return {\r\n      isDragging: false,\r\n      isRotating: false,\r\n      hitFirst: true\r\n    };\r\n  },\r\n  unmounted() {\r\n    this.$amapComponent = null;\r\n    this.$parentComponent = null;\r\n  },\r\n  methods: {\r\n    __initComponent(options) {\r\n      this.$amapComponent = new Loca.Container({\r\n        map: this.$parentComponent\r\n      });\r\n      if (options.ambLight) {\r\n        this.$amapComponent.ambLight = options.ambLight;\r\n      }\r\n      if (options.dirLight) {\r\n        this.$amapComponent.dirLight = options.dirLight;\r\n      }\r\n      if (options.pointLight) {\r\n        this.$amapComponent.pointLight = options.pointLight;\r\n      }\r\n      this.hitFirst = options.eventOptions.hitFirst;\r\n      this.bindEvents();\r\n    },\r\n    bindEvents(){\r\n      if(this.parentInstance){\r\n        const map = this.getMap();\r\n        const $props = this.$props;\r\n        if($props.onClick !== null){\r\n          map.on('click', this.clickMap);\r\n        }\r\n        if($props.onMousemove !== null){\r\n          map.on('mousemove', this.mouseMoveMap);\r\n          map.on('dragstart', this.dragStart);\r\n          map.on('dragend', this.dragEnd);\r\n          map.on('rotatestart', this.rotateStart);\r\n          map.on('rotateend', this.rotateEnd);\r\n          map.on('mouseout', this.mouseoutMap)\r\n        }\r\n        if($props.onRightclick !== null){\r\n          map.on('rightclick', this.rightclickMap);\r\n        }\r\n      }\r\n    },\r\n    clickMap(e) {\r\n      const features = this._getFeature(e);\r\n      this.$emit('click', features, e);\r\n    },\r\n    rightclickMap(e) {\r\n      const features = this._getFeature(e);\r\n      this.$emit('rightclick', features, e);\r\n    },\r\n    mouseMoveMap(e) {\r\n      if(this.isDragging || this.isRotating){\r\n        return;\r\n      }\r\n      const features = this._getFeature(e);\r\n      this.$emit('mousemove', features, e);\r\n    },\r\n    _getFeature(e){\r\n      const features: any[] = [];\r\n      if(this.$amapComponent.layers){\r\n        const layers: any[] = [];\r\n        this.$amapComponent.layers.forEach(( v => {\r\n          layers.push(v);\r\n        }));\r\n        layers.sort((a,b) => b.zIndex - a.zIndex)\r\n        const layerLen = layers.length;\r\n        for(let i=0;i<layerLen;i++){\r\n          const temp = layers[i].queryFeature(e.pixel.toArray());\r\n          if(temp){\r\n            features.push(temp)\r\n            if(this.hitFirst){\r\n              break;\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      return features;\r\n    },\r\n    dragStart(){\r\n      this.isDragging = true\r\n    },\r\n    dragEnd(){\r\n      this.isDragging = false\r\n    },\r\n    mouseoutMap(){\r\n      this.isDragging = false;\r\n      this.isRotating = false;\r\n    },\r\n    rotateStart(){\r\n      this.isRotating = true;\r\n    },\r\n    rotateEnd(){\r\n      this.isRotating = false;\r\n    },\r\n    unBindEvents() {\r\n      if(this.parentInstance){\r\n        const map = this.getMap();\r\n        map.off('click', this.clickMap);\r\n        map.off('rightclick', this.rightclickMap);\r\n        map.off('mousemove', this.mouseMoveMap);\r\n        map.off('dragstart', this.dragStart);\r\n        map.off('dragend', this.dragEnd);\r\n        map.off('rotatestart', this.rotateStart);\r\n        map.off('rotateend', this.rotateEnd);\r\n        map.off('mouseout', this.mouseoutMap)\r\n      }\r\n    },\r\n    destroyComponent() {\r\n      this.unBindEvents();\r\n      this.$amapComponent.destroy();\r\n    },\r\n    getMap() {\r\n      return this.$parentComponent;\r\n    }\r\n  }\r\n});\r\n</script>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}