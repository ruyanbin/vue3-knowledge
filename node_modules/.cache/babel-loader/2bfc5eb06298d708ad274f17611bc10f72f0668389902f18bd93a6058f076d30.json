{"ast":null,"code":"import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = [\"width\", \"height\"];\nconst _hoisted_2 = [\"stroke\", \"points\"];\nconst _hoisted_3 = [\"stroke\", \"points\"];\nconst _hoisted_4 = [\"stroke\", \"points\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", {\n    class: \"dv-decoration-8\",\n    ref: $data.ref\n  }, [(_openBlock(), _createElementBlock(\"svg\", {\n    width: _ctx.width,\n    height: _ctx.height\n  }, [_createElementVNode(\"polyline\", {\n    stroke: $data.mergedColor[0],\n    \"stroke-width\": \"2\",\n    fill: \"transparent\",\n    points: `${$options.xPos(0)}, 0 ${$options.xPos(30)}, ${_ctx.height / 2}`\n  }, null, 8 /* PROPS */, _hoisted_2), _createElementVNode(\"polyline\", {\n    stroke: $data.mergedColor[0],\n    \"stroke-width\": \"2\",\n    fill: \"transparent\",\n    points: `${$options.xPos(20)}, 0 ${$options.xPos(50)}, ${_ctx.height / 2} ${$options.xPos(_ctx.width)}, ${_ctx.height / 2}`\n  }, null, 8 /* PROPS */, _hoisted_3), _createElementVNode(\"polyline\", {\n    stroke: $data.mergedColor[1],\n    fill: \"transparent\",\n    \"stroke-width\": \"3\",\n    points: `${$options.xPos(0)}, ${_ctx.height - 3}, ${$options.xPos(200)}, ${_ctx.height - 3}`\n  }, null, 8 /* PROPS */, _hoisted_4)], 8 /* PROPS */, _hoisted_1))], 512 /* NEED_PATCH */);\n}","map":{"version":3,"mappings":";;;;;;uBACEA,oBAuBM;IAvBDC,KAAK,EAAC,iBAAiB;IAAEC,GAAG,EAAEC;qBACjCH,oBAqBM;IArBAI,KAAK,EAAEC,UAAK;IAAGC,MAAM,EAAED;MAC3BE,oBAKE;IAJCC,MAAM,EAAEL,iBAAW;IACpB,cAAY,EAAC,GAAG;IAChBM,IAAI,EAAC,aAAa;IACjBC,MAAM,KAAKC,aAAI,UAAUA,aAAI,SAASN,WAAM;uCAG/CE,oBAKE;IAJCC,MAAM,EAAEL,iBAAW;IACpB,cAAY,EAAC,GAAG;IAChBM,IAAI,EAAC,aAAa;IACjBC,MAAM,KAAKC,aAAI,WAAWA,aAAI,SAASN,WAAM,QAAQM,aAAI,CAACN,UAAK,MAAMA,WAAM;uCAG9EE,oBAKE;IAJCC,MAAM,EAAEL,iBAAW;IACpBM,IAAI,EAAC,aAAa;IAClB,cAAY,EAAC,GAAG;IACfC,MAAM,KAAKC,aAAI,QAAQN,WAAM,SAASM,aAAI,UAAUN,WAAM","names":["_createElementBlock","class","ref","$data","width","_ctx","height","_createElementVNode","stroke","fill","points","$options"],"sourceRoot":"","sources":["/Users/yanbinru/Desktop/代码/github/vue3-knowledge/node_modules/@jiaminghi/data-view/lib/components/decoration8/src/main.vue"],"sourcesContent":["<template>\n  <div class=\"dv-decoration-8\" :ref=\"ref\">\n    <svg :width=\"width\" :height=\"height\">\n      <polyline\n        :stroke=\"mergedColor[0]\"\n        stroke-width=\"2\"\n        fill=\"transparent\"\n        :points=\"`${xPos(0)}, 0 ${xPos(30)}, ${height / 2}`\"\n      />\n\n      <polyline\n        :stroke=\"mergedColor[0]\"\n        stroke-width=\"2\"\n        fill=\"transparent\"\n        :points=\"`${xPos(20)}, 0 ${xPos(50)}, ${height / 2} ${xPos(width)}, ${height / 2}`\"\n      />\n\n      <polyline\n        :stroke=\"mergedColor[1]\"\n        fill=\"transparent\"\n        stroke-width=\"3\"\n        :points=\"`${xPos(0)}, ${height - 3}, ${xPos(200)}, ${height - 3}`\"\n      />\n    </svg>\n  </div>\n</template>\n\n<script>\nimport autoResize from '../../../mixin/autoResize'\n\nimport { deepMerge } from '@jiaminghi/charts/lib/util/index'\n\nimport { deepClone } from '@jiaminghi/c-render/lib/plugin/util'\n\nexport default {\n  name: 'DvDecoration8',\n  mixins: [autoResize],\n  props: {\n    color: {\n      type: Array,\n      default: () => ([])\n    },\n    reverse: {\n      type: Boolean,\n      default: false\n    }\n  },\n  data () {\n    return {\n      ref: 'decoration-8',\n\n      defaultColor: ['#3f96a5', '#3f96a5'],\n\n      mergedColor: []\n    }\n  },\n  watch: {\n    color () {\n      const { mergeColor } = this\n\n      mergeColor()\n    }\n  },\n  methods: {\n    xPos (pos) {\n      const { reverse, width } = this\n\n      if (!reverse) return pos\n\n      return width - pos\n    },\n    mergeColor () {\n      const { color, defaultColor } = this\n\n      this.mergedColor = deepMerge(deepClone(defaultColor, true), color || [])\n    }\n  },\n  mounted () {\n    const { mergeColor } = this\n\n    mergeColor()\n  }\n}\n</script>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}