{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { Group, DefaultLoadingManager, Matrix4 } from 'three';\nimport { CMPTLoaderBase } from '../base/CMPTLoaderBase.js';\nimport { B3DMLoader } from './B3DMLoader.js';\nimport { PNTSLoader } from './PNTSLoader.js';\nimport { I3DMLoader } from './I3DMLoader.js';\nexport class CMPTLoader extends CMPTLoaderBase {\n  constructor(manager = DefaultLoadingManager) {\n    super();\n    this.manager = manager;\n    this.adjustmentTransform = new Matrix4();\n  }\n  parse(buffer) {\n    const result = super.parse(buffer);\n    const manager = this.manager;\n    const adjustmentTransform = this.adjustmentTransform;\n    const promises = [];\n    for (const i in result.tiles) {\n      const {\n        type,\n        buffer\n      } = result.tiles[i];\n      switch (type) {\n        case 'b3dm':\n          {\n            const slicedBuffer = buffer.slice();\n            const loader = new B3DMLoader(manager);\n            loader.workingPath = this.workingPath;\n            loader.fetchOptions = this.fetchOptions;\n            loader.adjustmentTransform.copy(adjustmentTransform);\n            const promise = loader.parse(slicedBuffer.buffer);\n            promises.push(promise);\n            break;\n          }\n        case 'pnts':\n          {\n            const slicedBuffer = buffer.slice();\n            const loader = new PNTSLoader(manager);\n            loader.workingPath = this.workingPath;\n            loader.fetchOptions = this.fetchOptions;\n            const promise = loader.parse(slicedBuffer.buffer);\n            promises.push(promise);\n            break;\n          }\n        case 'i3dm':\n          {\n            const slicedBuffer = buffer.slice();\n            const loader = new I3DMLoader(manager);\n            loader.workingPath = this.workingPath;\n            loader.fetchOptions = this.fetchOptions;\n            loader.adjustmentTransform.copy(adjustmentTransform);\n            const promise = loader.parse(slicedBuffer.buffer);\n            promises.push(promise);\n            break;\n          }\n      }\n    }\n    return Promise.all(promises).then(results => {\n      const group = new Group();\n      results.forEach(result => {\n        group.add(result.scene);\n      });\n      return {\n        tiles: results,\n        scene: group\n      };\n    });\n  }\n}","map":{"version":3,"names":["Group","DefaultLoadingManager","Matrix4","CMPTLoaderBase","B3DMLoader","PNTSLoader","I3DMLoader","CMPTLoader","constructor","manager","adjustmentTransform","parse","buffer","result","promises","i","tiles","type","slicedBuffer","slice","loader","workingPath","fetchOptions","copy","promise","push","Promise","all","then","results","group","forEach","add","scene"],"sources":["/Users/yanbinru/Desktop/代码/github/vue3-knowledge/node_modules/3d-tiles-renderer/src/three/CMPTLoader.js"],"sourcesContent":["import { Group, DefaultLoadingManager, Matrix4 } from 'three';\nimport { CMPTLoaderBase } from '../base/CMPTLoaderBase.js';\nimport { B3DMLoader } from './B3DMLoader.js';\nimport { PNTSLoader } from './PNTSLoader.js';\nimport { I3DMLoader } from './I3DMLoader.js';\n\nexport class CMPTLoader extends CMPTLoaderBase {\n\n\tconstructor( manager = DefaultLoadingManager ) {\n\n\t\tsuper();\n\t\tthis.manager = manager;\n\t\tthis.adjustmentTransform = new Matrix4();\n\n\t}\n\n\tparse( buffer ) {\n\n\t\tconst result = super.parse( buffer );\n\t\tconst manager = this.manager;\n\t\tconst adjustmentTransform = this.adjustmentTransform;\n\t\tconst promises = [];\n\n\t\tfor ( const i in result.tiles ) {\n\n\t\t\tconst { type, buffer } = result.tiles[ i ];\n\t\t\tswitch ( type ) {\n\n\t\t\t\tcase 'b3dm': {\n\n\t\t\t\t\tconst slicedBuffer = buffer.slice();\n\t\t\t\t\tconst loader = new B3DMLoader( manager );\n\t\t\t\t\tloader.workingPath = this.workingPath;\n\t\t\t\t\tloader.fetchOptions = this.fetchOptions;\n\n\t\t\t\t\tloader.adjustmentTransform.copy( adjustmentTransform );\n\n\t\t\t\t\tconst promise = loader.parse( slicedBuffer.buffer );\n\t\t\t\t\tpromises.push( promise );\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t\tcase 'pnts': {\n\n\t\t\t\t\tconst slicedBuffer = buffer.slice();\n\t\t\t\t\tconst loader = new PNTSLoader( manager );\n\t\t\t\t\tloader.workingPath = this.workingPath;\n\t\t\t\t\tloader.fetchOptions = this.fetchOptions;\n\t\t\t\t\tconst promise = loader.parse( slicedBuffer.buffer );\n\t\t\t\t\tpromises.push( promise );\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t\tcase 'i3dm': {\n\n\t\t\t\t\tconst slicedBuffer = buffer.slice();\n\t\t\t\t\tconst loader = new I3DMLoader( manager );\n\t\t\t\t\tloader.workingPath = this.workingPath;\n\t\t\t\t\tloader.fetchOptions = this.fetchOptions;\n\n\t\t\t\t\tloader.adjustmentTransform.copy( adjustmentTransform );\n\n\t\t\t\t\tconst promise = loader.parse( slicedBuffer.buffer );\n\t\t\t\t\tpromises.push( promise );\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn Promise.all( promises ).then( results => {\n\n\t\t\tconst group = new Group();\n\t\t\tresults.forEach( result => {\n\n\t\t\t\tgroup.add( result.scene );\n\n\t\t\t} );\n\n\t\t\treturn {\n\n\t\t\t\ttiles: results,\n\t\t\t\tscene: group,\n\n\t\t\t};\n\n\t\t} );\n\n\t}\n\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}