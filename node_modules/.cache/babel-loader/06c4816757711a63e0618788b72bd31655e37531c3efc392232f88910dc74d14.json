{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, normalizeStyle as _normalizeStyle } from \"vue\";\nconst _hoisted_1 = {\n  class: \"dv-capsule-chart\"\n};\nconst _hoisted_2 = {\n  class: \"label-column\"\n};\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"div\", null, \" \", -1 /* HOISTED */);\nconst _hoisted_4 = {\n  class: \"capsule-container\"\n};\nconst _hoisted_5 = {\n  key: 0,\n  class: \"capsule-item-value\"\n};\nconst _hoisted_6 = {\n  class: \"unit-label\"\n};\nconst _hoisted_7 = {\n  key: 0,\n  class: \"unit-text\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [$data.mergedConfig ? (_openBlock(), _createElementBlock(_Fragment, {\n    key: 0\n  }, [_createElementVNode(\"div\", _hoisted_2, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.mergedConfig.data, item => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: item.name\n    }, _toDisplayString(item.name), 1 /* TEXT */);\n  }), 128 /* KEYED_FRAGMENT */)), _hoisted_3]), _createElementVNode(\"div\", _hoisted_4, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.capsuleLength, (capsule, index) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      class: \"capsule-item\",\n      key: index\n    }, [_createElementVNode(\"div\", {\n      class: \"capsule-item-column\",\n      style: _normalizeStyle(`width: ${capsule * 100}%; background-color: ${$data.mergedConfig.colors[index % $data.mergedConfig.colors.length]};`)\n    }, [$data.mergedConfig.showValue ? (_openBlock(), _createElementBlock(\"div\", _hoisted_5, _toDisplayString($data.capsuleValue[index]), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)], 4 /* STYLE */)]);\n  }), 128 /* KEYED_FRAGMENT */)), _createElementVNode(\"div\", _hoisted_6, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.labelData, (label, index) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: label + index\n    }, _toDisplayString(label), 1 /* TEXT */);\n  }), 128 /* KEYED_FRAGMENT */))])]), $data.mergedConfig.unit ? (_openBlock(), _createElementBlock(\"div\", _hoisted_7, _toDisplayString($data.mergedConfig.unit), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)], 64 /* STABLE_FRAGMENT */)) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"mappings":";;EACOA,KAAK,EAAC;AAAkB;;EAEpBA,KAAK,EAAC;AAAc;gCAEvBC,oBAAiB,aAAZ,GAAM;;EAGRD,KAAK,EAAC;AAAmB;;;EAQtBA,KAAK,EAAC;;;EAKPA,KAAK,EAAC;AAAY;;;EAQpBA,KAAK,EAAC;;;uBA5BfE,oBA8BM,OA9BNC,UA8BM,GA7BYC,kBAAY,kBAA5BF,oBA4BWG;IAAAC;EAAA,IA3BTL,oBAGM,OAHNM,UAGM,sBAFJL,oBAA6EG,6BAAzDD,kBAAY,CAACI,IAAI,EAAzBC,IAAI;yBAAhBP,oBAA6E;MAArCI,GAAG,EAAEG,IAAI,CAACC;wBAASD,IAAI,CAACC,IAAI;kCACpEC,UAAiB,IAGnBV,oBAmBM,OAnBNW,UAmBM,sBAlBJV,oBAUMG,6BAV+CD,mBAAa,GAAhCS,OAAO,EAAEC,KAAK;yBAAhDZ,oBAUM;MAVDF,KAAK,EAAC,cAAc;MAA4CM,GAAG,EAAEQ;QACxEb,oBAQM;MAPJD,KAAK,EAAC,qBAAqB;MAC1Be,KAAK,4BAAYF,OAAO,8BAA8BT,kBAAY,CAACY,MAAM,CAACF,KAAK,GAAGV,kBAAY,CAACY,MAAM,CAACC,MAAM;QAGrGb,kBAAY,CAACc,SAAS,kBAD9BhB,oBAGgC,OAHhCiB,UAGgC,mBAA5Bf,kBAAY,CAACU,KAAK;kCAI1Bb,oBAKM,OALNmB,UAKM,sBAJJlB,oBAGkBG,6BAFSD,eAAS,GAA1BiB,KAAK,EAAEP,KAAK;yBADtBZ,oBAGkB;MADfI,GAAG,EAAEe,KAAK,GAAGP;wBACZO,KAAK;sCAIgBjB,kBAAY,CAACkB,IAAI,kBAA9CpB,oBAA6E,OAA7EqB,UAA6E,mBAA1BnB,kBAAY,CAACkB,IAAI","names":["class","_createElementVNode","_createElementBlock","_hoisted_1","$data","_Fragment","key","_hoisted_2","data","item","name","_hoisted_3","_hoisted_4","capsule","index","style","colors","length","showValue","_hoisted_5","_hoisted_6","label","unit","_hoisted_7"],"sourceRoot":"","sources":["/Users/yanbinru/Desktop/代码/github/vue3-knowledge/node_modules/@jiaminghi/data-view/lib/components/capsuleChart/src/main.vue"],"sourcesContent":["<template>\n  <div class=\"dv-capsule-chart\">\n    <template v-if=\"mergedConfig\">\n      <div class=\"label-column\">\n        <div v-for=\"item in mergedConfig.data\" :key=\"item.name\">{{ item.name }}</div>\n        <div>&nbsp;</div>\n      </div>\n\n      <div class=\"capsule-container\">\n        <div class=\"capsule-item\" v-for=\"(capsule, index) in capsuleLength\" :key=\"index\">\n          <div\n            class=\"capsule-item-column\"\n            :style=\"`width: ${capsule * 100}%; background-color: ${mergedConfig.colors[index % mergedConfig.colors.length]};`\"\n          >\n            <div\n              v-if=\"mergedConfig.showValue\"\n              class=\"capsule-item-value\"\n            >{{ capsuleValue[index] }}</div>\n          </div>\n        </div>\n\n        <div class=\"unit-label\">\n          <div\n            v-for=\"(label, index) in labelData\"\n            :key=\"label + index\"\n          >{{ label }}</div>\n        </div>\n      </div>\n\n      <div class=\"unit-text\" v-if=\"mergedConfig.unit\">{{ mergedConfig.unit }}</div>\n    </template>\n  </div>\n</template>\n\n<script>\nimport { deepMerge } from '@jiaminghi/charts/lib/util/index'\n\nimport { deepClone } from '@jiaminghi/c-render/lib/plugin/util'\n\nexport default {\n  name: 'DvCapsuleChart',\n  props: {\n    config: {\n      type: Object,\n      default: () => ({})\n    }\n  },\n  data() {\n    return {\n      defaultConfig: {\n        /**\n         * @description Capsule chart data\n         * @type {Array<Object>}\n         * @default data = []\n         * @example data = [{ name: 'foo1', value: 100 }, { name: 'foo2', value: 100 }]\n         */\n        data: [],\n        /**\n         * @description Colors (hex|rgb|rgba|color keywords)\n         * @type {Array<String>}\n         * @default color = ['#37a2da', '#32c5e9', '#67e0e3', '#9fe6b8', '#ffdb5c', '#ff9f7f', '#fb7293']\n         * @example color = ['#000', 'rgb(0, 0, 0)', 'rgba(0, 0, 0, 1)', 'red']\n         */\n        colors: [\n          '#37a2da',\n          '#32c5e9',\n          '#67e0e3',\n          '#9fe6b8',\n          '#ffdb5c',\n          '#ff9f7f',\n          '#fb7293'\n        ],\n        /**\n         * @description Chart unit\n         * @type {String}\n         * @default unit = ''\n         */\n        unit: '',\n        /**\n         * @description Show item value\n         * @type {Boolean}\n         * @default showValue = false\n         */\n        showValue: false\n      },\n\n      mergedConfig: null,\n\n      capsuleLength: [],\n      capsuleValue: [],\n      labelData: [],\n      labelDataLength: []\n    }\n  },\n  watch: {\n    config() {\n      const { calcData } = this\n\n      calcData()\n    }\n  },\n  methods: {\n    calcData() {\n      const { mergeConfig, calcCapsuleLengthAndLabelData } = this\n\n      mergeConfig()\n\n      calcCapsuleLengthAndLabelData()\n    },\n    mergeConfig() {\n      let { config, defaultConfig } = this\n\n      this.mergedConfig = deepMerge(\n        deepClone(defaultConfig, true),\n        config || {}\n      )\n    },\n    calcCapsuleLengthAndLabelData() {\n      const { data } = this.mergedConfig\n\n      if (!data.length) return\n\n      const capsuleValue = data.map(({ value }) => value)\n\n      const maxValue = Math.max(...capsuleValue)\n\n      this.capsuleValue = capsuleValue\n\n      this.capsuleLength = capsuleValue.map(v => (maxValue ? v / maxValue : 0))\n\n      const oneFifth = maxValue / 5\n\n      const labelData = Array.from(\n        new Set(new Array(6).fill(0).map((v, i) => Math.ceil(i * oneFifth)))\n      )\n\n      this.labelData = labelData\n\n      this.labelDataLength = Array.from(labelData).map(v =>\n        maxValue ? v / maxValue : 0\n      )\n    }\n  },\n  mounted() {\n    const { calcData } = this\n\n    calcData()\n  }\n}\n</script>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}