{"ast":null,"code":"import { isArray, isObject, isString } from '@vue/shared';\nexport { isArray, isDate, isFunction, isObject, isPromise, isString, isSymbol } from '@vue/shared';\nimport { isNil } from 'lodash-unified';\nexport { isBoolean, isNumber } from '@vueuse/core';\nexport { isVNode } from 'vue';\nconst isUndefined = val => val === void 0;\nconst isEmpty = val => !val && val !== 0 || isArray(val) && val.length === 0 || isObject(val) && !Object.keys(val).length;\nconst isElement = e => {\n  if (typeof Element === \"undefined\") return false;\n  return e instanceof Element;\n};\nconst isPropAbsent = prop => {\n  return isNil(prop);\n};\nconst isStringNumber = val => {\n  if (!isString(val)) {\n    return false;\n  }\n  return !Number.isNaN(Number(val));\n};\nexport { isElement, isEmpty, isPropAbsent, isStringNumber, isUndefined };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}