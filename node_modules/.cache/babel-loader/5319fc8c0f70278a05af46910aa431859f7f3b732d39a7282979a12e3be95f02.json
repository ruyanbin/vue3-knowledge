{"ast":null,"code":"import { renderSlot } from 'vue';\nfunction render(_ctx, _cache, $props, $setup, $data, $options) {\n  return renderSlot(_ctx.$slots, \"default\");\n}\nexport { render };","map":{"version":3,"mappings":";;EACE,kBAAOA;AAAA","names":["_ctx"],"sources":["../../../../../../src/packages/three/ThreeLayer/ThreeLayer.vue?vue&type=template&id=91a659d6&lang.js"],"sourcesContent":["<template>\r\n  <slot />\r\n</template>\r\n<script lang=\"ts\">\r\nimport {defineComponent} from \"vue\";\r\nimport registerMixin from '../../../mixins/register-component';\r\nimport CustomThreeLayer from \"./CustomThreeLayer\";\r\nimport type {HDROptions, LightOption} from './Type'\r\nimport type {PropType} from \"vue\";\r\n\r\nexport default defineComponent({\r\n  name: 'ElAmapLayerThree',\r\n  mixins: [registerMixin],\r\n  provide() {\r\n    return {\r\n      parentInstance: this\r\n    };\r\n  },\r\n  props: {\r\n    lights: {\r\n      type: Array as PropType<LightOption[]>,\r\n      default() {\r\n        return [];\r\n      }\r\n    }, // 灯光数组\r\n    hdr: {\r\n      type: Object as PropType<HDROptions>\r\n    },\r\n    zooms: {\r\n      type: Array as PropType<number[]>,\r\n      default() {\r\n        return [2, 20];\r\n      }\r\n    }, // 支持的缩放级别范围，默认范围 [2, 20]\r\n    opacity: {\r\n      type: Number\r\n    }, // 透明度，默认 1\r\n    alpha: {\r\n      type: Boolean,\r\n      default: false\r\n    }, // canvas是否包含alpha (透明度)。默认为 false\r\n    antialias: {\r\n      type: Boolean,\r\n      default: false\r\n    },// 是否执行抗锯齿。默认为false\r\n    customCoordsCenter: {\r\n      type: Array as PropType<number[]>,\r\n      default() {\r\n        return null\r\n      }\r\n    },\r\n    axesHelper: {\r\n      type: Boolean,\r\n      default: false\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n    };\r\n  },\r\n  methods: {\r\n    __initComponent(options) {\r\n      return new Promise<void>((resolve) => {\r\n        this.$amapComponent = new CustomThreeLayer(this.$parentComponent, options, () => {\r\n          resolve()\r\n        });\r\n      })\r\n    },\r\n    destroyComponent() {\r\n      this.$amapComponent.destroy();\r\n      this.$amapComponent = null;\r\n      this.$parentComponent = null;\r\n    },\r\n    convertLngLat(lnglat) {\r\n      return this.$amapComponent.convertLngLat(lnglat);\r\n    },\r\n    addObject(object) {\r\n      this.$amapComponent.addObject(object);\r\n    },\r\n    removeObject(object) {\r\n      this.$amapComponent.removeObject(object);\r\n    },\r\n    addEnvMap(obj) {\r\n      this.$amapComponent.addEnvMap(obj);\r\n    },\r\n    $$getScene() {\r\n      return this.$amapComponent.getScene();\r\n    },\r\n    $$getRender() {\r\n      return this.$amapComponent.getRender();\r\n    },\r\n    $$refresh() {\r\n      this.$amapComponent.refreshMap();\r\n    }\r\n  }\r\n});\r\n</script>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}