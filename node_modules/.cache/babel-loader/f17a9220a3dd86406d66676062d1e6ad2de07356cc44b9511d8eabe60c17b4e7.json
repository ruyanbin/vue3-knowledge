{"ast":null,"code":"import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, toDisplayString as _toDisplayString, normalizeStyle as _normalizeStyle } from \"vue\";\nconst _hoisted_1 = [\"width\", \"height\"];\nconst _hoisted_2 = [\"id\"];\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"stop\", {\n  offset: \"0%\",\n  \"stop-color\": \"#fff\",\n  \"stop-opacity\": \"1\"\n}, null, -1 /* HOISTED */);\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"stop\", {\n  offset: \"100%\",\n  \"stop-color\": \"#fff\",\n  \"stop-opacity\": \"0\"\n}, null, -1 /* HOISTED */);\nconst _hoisted_5 = [_hoisted_3, _hoisted_4];\nconst _hoisted_6 = [\"id\"];\nconst _hoisted_7 = /*#__PURE__*/_createElementVNode(\"stop\", {\n  offset: \"0%\",\n  \"stop-color\": \"#fff\",\n  \"stop-opacity\": \"0\"\n}, null, -1 /* HOISTED */);\nconst _hoisted_8 = /*#__PURE__*/_createElementVNode(\"stop\", {\n  offset: \"100%\",\n  \"stop-color\": \"#fff\",\n  \"stop-opacity\": \"1\"\n}, null, -1 /* HOISTED */);\nconst _hoisted_9 = [_hoisted_7, _hoisted_8];\nconst _hoisted_10 = [\"id\", \"cx\", \"cy\"];\nconst _hoisted_11 = [\"values\", \"dur\"];\nconst _hoisted_12 = [\"dur\"];\nconst _hoisted_13 = [\"xlink:href\", \"width\", \"height\", \"x\", \"y\"];\nconst _hoisted_14 = [\"id\"];\nconst _hoisted_15 = [\"xlink:href\", \"fill\"];\nconst _hoisted_16 = [\"xlink:href\", \"fill\", \"mask\"];\nconst _hoisted_17 = [\"id\", \"d\"];\nconst _hoisted_18 = [\"xlink:href\", \"stroke-width\", \"stroke\"];\nconst _hoisted_19 = [\"xlink:href\", \"stroke-width\", \"stroke\", \"mask\"];\nconst _hoisted_20 = [\"from\", \"to\", \"dur\"];\nconst _hoisted_21 = [\"id\"];\nconst _hoisted_22 = [\"r\", \"fill\"];\nconst _hoisted_23 = [\"dur\", \"path\"];\nconst _hoisted_24 = [\"xlink:href\", \"width\", \"height\", \"x\", \"y\"];\nconst _hoisted_25 = [\"fill\", \"x\", \"y\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", {\n    class: \"dv-flyline-chart\",\n    ref: \"dv-flyline-chart\",\n    style: _normalizeStyle(`background-image: url(${$data.mergedConfig ? $data.mergedConfig.bgImgUrl : ''})`),\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.consoleClickPos && $options.consoleClickPos(...args))\n  }, [$data.mergedConfig ? (_openBlock(), _createElementBlock(\"svg\", {\n    key: 0,\n    width: _ctx.width,\n    height: _ctx.height\n  }, [_createElementVNode(\"defs\", null, [_createElementVNode(\"radialGradient\", {\n    id: $data.gradientId,\n    cx: \"50%\",\n    cy: \"50%\",\n    r: \"50%\"\n  }, _hoisted_5, 8 /* PROPS */, _hoisted_2), _createElementVNode(\"radialGradient\", {\n    id: $data.gradient2Id,\n    cx: \"50%\",\n    cy: \"50%\",\n    r: \"50%\"\n  }, _hoisted_9, 8 /* PROPS */, _hoisted_6), $data.paths[0] ? (_openBlock(), _createElementBlock(\"circle\", {\n    key: 0,\n    id: `circle${$data.paths[0].toString()}`,\n    cx: $data.paths[0][2][0],\n    cy: $data.paths[0][2][1]\n  }, [_createElementVNode(\"animate\", {\n    attributeName: \"r\",\n    values: `1;${$data.mergedConfig.halo.radius}`,\n    dur: $data.mergedConfig.halo.duration / 10 + 's',\n    repeatCount: \"indefinite\"\n  }, null, 8 /* PROPS */, _hoisted_11), _createElementVNode(\"animate\", {\n    attributeName: \"opacity\",\n    values: \"1;0\",\n    dur: $data.mergedConfig.halo.duration / 10 + 's',\n    repeatCount: \"indefinite\"\n  }, null, 8 /* PROPS */, _hoisted_12)], 8 /* PROPS */, _hoisted_10)) : _createCommentVNode(\"v-if\", true)]), $data.paths[0] ? (_openBlock(), _createElementBlock(\"image\", {\n    key: 0,\n    \"xlink:href\": $data.mergedConfig.centerPointImg.url,\n    width: $data.mergedConfig.centerPointImg.width,\n    height: $data.mergedConfig.centerPointImg.height,\n    x: $data.paths[0][2][0] - $data.mergedConfig.centerPointImg.width / 2,\n    y: $data.paths[0][2][1] - $data.mergedConfig.centerPointImg.height / 2\n  }, null, 8 /* PROPS */, _hoisted_13)) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"mask\", {\n    id: `maskhalo${$data.paths[0].toString()}`\n  }, [$data.paths[0] ? (_openBlock(), _createElementBlock(\"use\", {\n    key: 0,\n    \"xlink:href\": `#circle${$data.paths[0].toString()}`,\n    fill: `url(#${$data.gradient2Id})`\n  }, null, 8 /* PROPS */, _hoisted_15)) : _createCommentVNode(\"v-if\", true)], 8 /* PROPS */, _hoisted_14), $data.paths[0] && $data.mergedConfig.halo.show ? (_openBlock(), _createElementBlock(\"use\", {\n    key: 1,\n    \"xlink:href\": `#circle${$data.paths[0].toString()}`,\n    fill: $data.mergedConfig.halo.color,\n    mask: `url(#maskhalo${$data.paths[0].toString()})`\n  }, null, 8 /* PROPS */, _hoisted_16)) : _createCommentVNode(\"v-if\", true), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.paths, (path, i) => {\n    return _openBlock(), _createElementBlock(\"g\", {\n      key: i\n    }, [_createElementVNode(\"defs\", null, [_createElementVNode(\"path\", {\n      id: `path${path.toString()}`,\n      ref_for: true,\n      ref: `path${i}`,\n      d: `M${path[0].toString()} Q${path[1].toString()} ${path[2].toString()}`,\n      fill: \"transparent\"\n    }, null, 8 /* PROPS */, _hoisted_17)]), _createElementVNode(\"use\", {\n      \"xlink:href\": `#path${path.toString()}`,\n      \"stroke-width\": $data.mergedConfig.lineWidth,\n      stroke: $data.mergedConfig.orbitColor\n    }, null, 8 /* PROPS */, _hoisted_18), $data.lengths[i] ? (_openBlock(), _createElementBlock(\"use\", {\n      key: 0,\n      \"xlink:href\": `#path${path.toString()}`,\n      \"stroke-width\": $data.mergedConfig.lineWidth,\n      stroke: $data.mergedConfig.flylineColor,\n      mask: `url(#mask${$data.unique}${path.toString()})`\n    }, [_createElementVNode(\"animate\", {\n      attributeName: \"stroke-dasharray\",\n      from: `0, ${$data.lengths[i]}`,\n      to: `${$data.lengths[i]}, 0`,\n      dur: $data.times[i] || 0,\n      repeatCount: \"indefinite\"\n    }, null, 8 /* PROPS */, _hoisted_20)], 8 /* PROPS */, _hoisted_19)) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"mask\", {\n      id: `mask${$data.unique}${path.toString()}`\n    }, [_createElementVNode(\"circle\", {\n      cx: \"0\",\n      cy: \"0\",\n      r: $data.mergedConfig.flylineRadius,\n      fill: `url(#${$data.gradientId})`\n    }, [_createElementVNode(\"animateMotion\", {\n      dur: $data.times[i] || 0,\n      path: `M${path[0].toString()} Q${path[1].toString()} ${path[2].toString()}`,\n      rotate: \"auto\",\n      repeatCount: \"indefinite\"\n    }, null, 8 /* PROPS */, _hoisted_23)], 8 /* PROPS */, _hoisted_22)], 8 /* PROPS */, _hoisted_21), _createElementVNode(\"image\", {\n      \"xlink:href\": $data.mergedConfig.pointsImg.url,\n      width: $data.mergedConfig.pointsImg.width,\n      height: $data.mergedConfig.pointsImg.height,\n      x: path[0][0] - $data.mergedConfig.pointsImg.width / 2,\n      y: path[0][1] - $data.mergedConfig.pointsImg.height / 2\n    }, null, 8 /* PROPS */, _hoisted_24), _createElementVNode(\"text\", {\n      style: _normalizeStyle(`fontSize:${$data.mergedConfig.text.fontSize}px;`),\n      fill: $data.mergedConfig.text.color,\n      x: path[0][0] + $data.mergedConfig.text.offset[0],\n      y: path[0][1] + $data.mergedConfig.text.offset[1]\n    }, _toDisplayString($data.texts[i]), 13 /* TEXT, STYLE, PROPS */, _hoisted_25)]);\n  }), 128 /* KEYED_FRAGMENT */))], 8 /* PROPS */, _hoisted_1)) : _createCommentVNode(\"v-if\", true)], 4 /* STYLE */);\n}","map":{"version":3,"mappings":"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","names":["_createElementVNode","offset","_hoisted_3","_hoisted_4","_hoisted_7","_hoisted_8","_createElementBlock","class","ref","style","$data","bgImgUrl","onClick","$options","width","_ctx","height","id","cx","cy","r","toString","attributeName","values","halo","radius","dur","duration","repeatCount","centerPointImg","url","x","y","fill","show","color","mask","_Fragment","path","i","key","d","lineWidth","stroke","orbitColor","flylineColor","from","to","flylineRadius","rotate","pointsImg","text","fontSize"],"sourceRoot":"","sources":["/Users/yanbinru/Desktop/代码/github/vue3-knowledge/node_modules/@jiaminghi/data-view/lib/components/flylineChart/src/main.vue"],"sourcesContent":["<template>\n  <div\n    class=\"dv-flyline-chart\"\n    ref=\"dv-flyline-chart\"\n    :style=\"`background-image: url(${mergedConfig ? mergedConfig.bgImgUrl : ''})`\"\n    @click=\"consoleClickPos\"\n  >\n    <svg v-if=\"mergedConfig\" :width=\"width\" :height=\"height\">\n      <defs>\n        <radialGradient\n          :id=\"gradientId\"\n          cx=\"50%\" cy=\"50%\" r=\"50%\"\n        >\n          <stop\n            offset=\"0%\" stop-color=\"#fff\"\n            stop-opacity=\"1\"\n          />\n          <stop\n            offset=\"100%\" stop-color=\"#fff\"\n            stop-opacity=\"0\"\n          />\n        </radialGradient>\n\n        <radialGradient\n          :id=\"gradient2Id\"\n          cx=\"50%\" cy=\"50%\" r=\"50%\"\n        >\n          <stop\n            offset=\"0%\" stop-color=\"#fff\"\n            stop-opacity=\"0\"\n          />\n          <stop\n            offset=\"100%\" stop-color=\"#fff\"\n            stop-opacity=\"1\"\n          />\n        </radialGradient>\n\n        <circle\n          v-if=\"paths[0]\"\n          :id=\"`circle${paths[0].toString()}`\"\n          :cx=\"paths[0][2][0]\"\n          :cy=\"paths[0][2][1]\"\n        >\n          <animate\n            attributeName=\"r\"\n            :values=\"`1;${mergedConfig.halo.radius}`\"\n            :dur=\"mergedConfig.halo.duration / 10 + 's'\"\n            repeatCount=\"indefinite\"\n          />\n          <animate\n            attributeName=\"opacity\"\n            values=\"1;0\"\n            :dur=\"mergedConfig.halo.duration / 10 + 's'\"\n            repeatCount=\"indefinite\"\n          />\n        </circle>\n      </defs>\n\n      <image\n        v-if=\"paths[0]\"\n        :xlink:href=\"mergedConfig.centerPointImg.url\"\n        :width=\"mergedConfig.centerPointImg.width\"\n        :height=\"mergedConfig.centerPointImg.height\"\n        :x=\"paths[0][2][0] - mergedConfig.centerPointImg.width / 2\"\n        :y=\"paths[0][2][1] - mergedConfig.centerPointImg.height / 2\"\n      />\n\n      <mask :id=\"`maskhalo${paths[0].toString()}`\">\n        <use\n          v-if=\"paths[0]\"\n          :xlink:href=\"`#circle${paths[0].toString()}`\"\n          :fill=\"`url(#${gradient2Id})`\"\n        />\n      </mask>\n\n      <use\n        v-if=\"paths[0] && mergedConfig.halo.show\"\n        :xlink:href=\"`#circle${paths[0].toString()}`\"\n        :fill=\"mergedConfig.halo.color\"\n        :mask=\"`url(#maskhalo${paths[0].toString()})`\"\n      />\n\n      <g\n        v-for=\"(path, i) in paths\"\n        :key=\"i\"\n      >\n        <defs>\n          <path\n            :id=\"`path${path.toString()}`\"\n            :ref=\"`path${i}`\"\n            :d=\"`M${path[0].toString()} Q${path[1].toString()} ${path[2].toString()}`\"\n            fill=\"transparent\"\n          />\n        </defs>\n\n        <use\n          :xlink:href=\"`#path${path.toString()}`\"\n          :stroke-width=\"mergedConfig.lineWidth\"\n          :stroke=\"mergedConfig.orbitColor\"\n        />\n\n        <use\n          v-if=\"lengths[i]\"\n          :xlink:href=\"`#path${path.toString()}`\"\n          :stroke-width=\"mergedConfig.lineWidth\"\n          :stroke=\"mergedConfig.flylineColor\"\n          :mask=\"`url(#mask${unique}${path.toString()})`\"\n        >\n          <animate\n            attributeName=\"stroke-dasharray\"\n            :from=\"`0, ${lengths[i]}`\"\n            :to=\"`${lengths[i]}, 0`\"\n            :dur=\"times[i] || 0\"\n            repeatCount=\"indefinite\"\n          />\n        </use>\n\n        <mask :id=\"`mask${unique}${path.toString()}`\">\n          <circle cx=\"0\" cy=\"0\" :r=\"mergedConfig.flylineRadius\" :fill=\"`url(#${gradientId})`\">\n            <animateMotion\n              :dur=\"times[i] || 0\"\n              :path=\"`M${path[0].toString()} Q${path[1].toString()} ${path[2].toString()}`\"\n              rotate=\"auto\"\n              repeatCount=\"indefinite\"\n            />\n          </circle>\n        </mask>\n\n        <image\n          :xlink:href=\"mergedConfig.pointsImg.url\"\n          :width=\"mergedConfig.pointsImg.width\"\n          :height=\"mergedConfig.pointsImg.height\"\n          :x=\"path[0][0] - mergedConfig.pointsImg.width / 2\"\n          :y=\"path[0][1] - mergedConfig.pointsImg.height / 2\"\n        />\n\n        <text\n          :style=\"`fontSize:${mergedConfig.text.fontSize}px;`\"\n          :fill=\"mergedConfig.text.color\"\n          :x=\"path[0][0] + mergedConfig.text.offset[0]\"\n          :y=\"path[0][1] + mergedConfig.text.offset[1]\"\n        >\n          {{ texts[i] }}\n        </text>\n\n      </g>\n    </svg>\n  </div>\n</template>\n\n<script>\nimport { deepMerge } from '@jiaminghi/charts/lib/util/index'\n\nimport { deepClone } from '@jiaminghi/c-render/lib/plugin/util'\n\nimport { randomExtend, getPointDistance } from '../../../util/index'\n\nimport autoResize from '../../../mixin/autoResize'\n\nexport default {\n  name: 'DvFlylineChart',\n  mixins: [autoResize],\n  props: {\n    config: {\n      type: Object,\n      default: () => ({})\n    },\n    dev: {\n      type: Boolean,\n      default: false\n    }\n  },\n  data () {\n    const timestamp = Date.now()\n    return {\n      ref: 'dv-flyline-chart',\n      unique: Math.random(),\n      maskId: `flyline-mask-id-${timestamp}`,\n      maskCircleId: `mask-circle-id-${timestamp}`,\n      gradientId: `gradient-id-${timestamp}`,\n      gradient2Id: `gradient2-id-${timestamp}`,\n\n      defaultConfig: {\n        /**\n         * @description Flyline chart center point\n         * @type {Array<Number>}\n         * @default centerPoint = [0, 0]\n         */\n        centerPoint: [0, 0],\n        /**\n         * @description Flyline start points\n         * @type {Array<Array<Number>>}\n         * @default points = []\n         * @example points = [[10, 10], [100, 100]]\n         */\n        points: [],\n        /**\n         * @description Flyline width\n         * @type {Number}\n         * @default lineWidth = 1\n         */\n        lineWidth: 1,\n        /**\n         * @description Orbit color\n         * @type {String}\n         * @default orbitColor = 'rgba(103, 224, 227, .2)'\n         */\n        orbitColor: 'rgba(103, 224, 227, .2)',\n        /**\n         * @description Flyline color\n         * @type {String}\n         * @default orbitColor = '#ffde93'\n         */\n        flylineColor: '#ffde93',\n        /**\n         * @description K value\n         * @type {Number}\n         * @default k = -0.5\n         * @example k = -1 ~ 1\n         */\n        k: -0.5,\n        /**\n         * @description Flyline curvature\n         * @type {Number}\n         * @default curvature = 5\n         */\n        curvature: 5,\n        /**\n         * @description Flyline radius\n         * @type {Number}\n         * @default flylineRadius = 100\n         */\n        flylineRadius: 100,\n        /**\n         * @description Flyline animation duration\n         * @type {Array<Number>}\n         * @default duration = [20, 30]\n         */\n        duration: [20, 30],\n        /**\n         * @description Relative points position\n         * @type {Boolean}\n         * @default relative = true\n         */\n        relative: true,\n        /**\n         * @description Back ground image url\n         * @type {String}\n         * @default bgImgUrl = ''\n         * @example bgImgUrl = './img/bg.jpg'\n         */\n        bgImgUrl: '',\n        /**\n         * @description Text configuration\n         * @type {Object}\n         */\n        text: {\n          /**\n           * @description Text offset\n           * @type {Array<Number>}\n           * @default offset = [0, 15]\n           */\n          offset: [0, 15],\n          /**\n           * @description Text color\n           * @type {String}\n           * @default color = '#ffdb5c'\n           */\n          color: '#ffdb5c',\n          /**\n           * @description Text font size\n           * @type {Number}\n           * @default fontSize = 12\n           */\n          fontSize: 12\n        },\n        /**\n         * @description Halo configuration\n         * @type {Object}\n         */\n        halo: {\n          /**\n           * @description Weather to show halo\n           * @type {Boolean}\n           * @default show = true\n           * @example show = true | false\n           */\n          show: true,\n          /**\n           * @description Halo animation duration (10 = 1s)\n           * @type {Number}\n           * @default duration = 30\n           */\n          duration: 30,\n          /**\n           * @description Halo color\n           * @type {String}\n           * @default color = '#fb7293'\n           */\n          color: '#fb7293',\n          /**\n           * @description Halo max radius\n           * @type {Number}\n           * @default radius = 120\n           */\n          radius: 120\n        },\n        /**\n         * @description Center point img configuration\n         * @type {Object}\n         */\n        centerPointImg: {\n          /**\n           * @description Center point img width\n           * @type {Number}\n           * @default width = 40\n           */\n          width: 40,\n          /**\n           * @description Center point img height\n           * @type {Number}\n           * @default height = 40\n           */\n          height: 40,\n          /**\n           * @description Center point img url\n           * @type {String}\n           * @default url = ''\n           */\n          url: ''\n        },\n        /**\n         * @description Points img configuration\n         * @type {Object}\n         * @default radius = 120\n         */\n        pointsImg: {\n          /**\n           * @description Points img width\n           * @type {Number}\n           * @default width = 15\n           */\n          width: 15,\n          /**\n           * @description Points img height\n           * @type {Number}\n           * @default height = 15\n           */\n          height: 15,\n          /**\n           * @description Points img url\n           * @type {String}\n           * @default url = ''\n           */\n          url: ''\n        }\n      },\n\n      mergedConfig: null,\n\n      paths: [],\n      lengths: [],\n      times: [],\n      texts: []\n    }\n  },\n  watch: {\n    config () {\n      const { calcData } = this\n\n      calcData()\n    }\n  },\n  methods: {\n    afterAutoResizeMixinInit () {\n      const { calcData } = this\n\n      calcData()\n    },\n    onResize () {\n      const { calcData } = this\n\n      calcData()\n    },\n    async calcData () {\n      const { mergeConfig, createFlylinePaths, calcLineLengths } = this\n\n      mergeConfig()\n\n      createFlylinePaths()\n\n      await calcLineLengths()\n\n      const { calcTimes, calcTexts } = this\n\n      calcTimes()\n\n      calcTexts()\n    },\n    mergeConfig () {\n      let { config, defaultConfig } = this\n\n      const mergedConfig = deepMerge(deepClone(defaultConfig, true), config || {})\n\n      const { points } = mergedConfig\n\n      mergedConfig.points = points.map(item => {\n        if (item instanceof Array) {\n          return { position: item, text: '' }\n        }\n\n        return item\n      })\n\n      this.mergedConfig = mergedConfig\n    },\n    createFlylinePaths () {\n      const { getPath, mergedConfig, width, height } = this\n\n      let { centerPoint, points, relative } = mergedConfig\n\n      points = points.map(({ position }) => position)\n\n      if (relative) {\n        centerPoint = [width * centerPoint[0], height * centerPoint[1]]\n        points = points.map(([x, y]) => [width * x, height * y])\n      }\n\n      this.paths = points.map(point => getPath(centerPoint, point))\n    },\n    getPath (center, point) {\n      const { getControlPoint } = this\n\n      const controlPoint = getControlPoint(center, point)\n\n      return [point, controlPoint, center]\n    },\n    getControlPoint ([sx, sy], [ex, ey]) {\n      const { getKLinePointByx, mergedConfig } = this\n\n      const { curvature, k } = mergedConfig\n\n      const [mx, my] = [(sx + ex) / 2, (sy + ey) / 2]\n\n      const distance = getPointDistance([sx, sy], [ex, ey])\n\n      const targetLength = distance / curvature\n      const disDived = targetLength / 2\n\n      let [dx, dy] = [mx, my]\n\n      do {\n        dx += disDived\n        dy = getKLinePointByx(k, [mx, my], dx)[1]\n      } while (getPointDistance([mx, my], [dx, dy]) < targetLength)\n\n      return [dx, dy]\n    },\n    getKLinePointByx (k, [lx, ly], x) {\n      const y = ly - k * lx + k * x\n\n      return [x, y]\n    },\n    async calcLineLengths () {\n      const { $nextTick, paths, $refs } = this\n\n      await $nextTick()\n\n      this.lengths = paths.map((foo, i) => $refs[`path${i}`][0].getTotalLength())\n    },\n    calcTimes () {\n      const { duration, points } = this.mergedConfig\n\n      this.times = points.map(foo => randomExtend(...duration) / 10)\n    },\n    calcTexts () {\n      const { points } = this.mergedConfig\n\n      this.texts = points.map(({ text }) => text)\n    },\n    consoleClickPos ({ offsetX, offsetY }) {\n      const { width, height, dev } = this\n\n      if (!dev) return\n\n      const relativeX = (offsetX / width).toFixed(2)\n      const relativeY = (offsetY / height).toFixed(2)\n\n      console.warn(`dv-flyline-chart DEV: \\n Click Position is [${offsetX}, ${offsetY}] \\n Relative Position is [${relativeX}, ${relativeY}]`)\n    }\n  }\n}\n</script>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}