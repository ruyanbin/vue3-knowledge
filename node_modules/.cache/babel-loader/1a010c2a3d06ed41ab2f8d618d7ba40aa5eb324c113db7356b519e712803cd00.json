{"ast":null,"code":"import AMapLoader from '@amap/amap-jsapi-loader';\n//data\n\nexport default {\n  __name: 'search',\n  setup(__props, {\n    expose\n  }) {\n    const {\n      proxy\n    } = getCurrentInstance();\n    const address = ref('');\n    let geocoder = null;\n    let MyMap = null;\n    let map = null;\n    //methods\n    const select = () => {\n      //构造地点查询类\n      var placeSearch = new MyMap.PlaceSearch({\n        pageSize: 3,\n        // 单页显示结果条数\n        pageIndex: 1,\n        // 页码\n        city: '010',\n        // 兴趣点城市\n        citylimit: false,\n        //是否强制限制在设置的城市内搜索\n        map: map,\n        // 展现结果的地图实例\n        panel: 'list',\n        // 结果列表将在此容器中进行展示。\n        autoFitView: false // 是否自动调整地图视野使绘制的 Marker点都处于视口的可见范围\n      });\n      //关键字查询\n      placeSearch.search(proxy.address);\n    };\n    const getAddress = () => {\n      let cc = map.getCenter();\n      return new Promise((resolve, reject) => {\n        geocoder.getAddress([cc.lng, cc.lat], (status, result) => {\n          if (result.regeocode.formattedAddress) {\n            resolve(result.regeocode.formattedAddress);\n          } else {\n            resolve('');\n          }\n        });\n      });\n    };\n    //mapinit\n    window._AMapSecurityConfig = {\n      securityJsCode: '填写高德地图Web端(JS API)申请的密钥'\n    };\n    AMapLoader.load({\n      key: '填写高德地图Web端(JS API)申请的key',\n      // 申请好的Web端开发者Key\n      version: '2.0',\n      // 指定要加载的 JSAPI 的版本，缺省时默认为 1.4.15\n      plugins: ['AMap.AutoComplete', 'AMap.PlaceSearch', 'AMap.Geocoder'] // 需要使用的的插件列表，如比例尺'AMap.Scale'等\n    }).then(AMap => {\n      MyMap = AMap; //保存AMap\n\n      init();\n    }).catch(e => {\n      console.log(e);\n    });\n    const init = () => {\n      //绘制MyMap实例地图\n      map = new MyMap.Map('gd_map_d', {\n        zoom: 14,\n        //初始地图级别\n        center: [121.473432, 31.22919],\n        resizeEnable: true\n      });\n      geocoder = new MyMap.Geocoder({\n        city: '010' //城市设为北京，默认：“全国”\n      });\n\n      var auto = new MyMap.AutoComplete({\n        input: 'tipinput'\n      });\n    };\n    expose({\n      getAddress //将事件暴露出去\n    });\n\n    const __returned__ = {\n      proxy,\n      address,\n      get geocoder() {\n        return geocoder;\n      },\n      set geocoder(v) {\n        geocoder = v;\n      },\n      get MyMap() {\n        return MyMap;\n      },\n      set MyMap(v) {\n        MyMap = v;\n      },\n      get map() {\n        return map;\n      },\n      set map(v) {\n        map = v;\n      },\n      select,\n      getAddress,\n      init,\n      get AMapLoader() {\n        return AMapLoader;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"mappings":"AAcA,OAAOA,UAAU,MAAM,yBAAyB;AAChD;;;;;;;IACA,MAAM;MAAEC;IAAM,CAAC,GAAGC,kBAAkB,EAAE;IACtC,MAAMC,OAAO,GAAGC,GAAG,CAAC,EAAE,CAAC;IACvB,IAAIC,QAAQ,GAAG,IAAI;IACnB,IAAIC,KAAK,GAAG,IAAI;IAChB,IAAIC,GAAG,GAAG,IAAI;IACd;IACA,MAAMC,MAAM,GAAG,MAAM;MACpB;MACA,IAAIC,WAAW,GAAG,IAAIH,KAAK,CAACI,WAAW,CAAC;QACvCC,QAAQ,EAAE,CAAC;QAAE;QACbC,SAAS,EAAE,CAAC;QAAE;QACdC,IAAI,EAAE,KAAK;QAAE;QACbC,SAAS,EAAE,KAAK;QAAE;QAClBP,GAAG,EAAEA,GAAG;QAAE;QACVQ,KAAK,EAAE,MAAM;QAAE;QACfC,WAAW,EAAE,KAAK,CAAE;MACrB,CAAC,CAAC;MACF;MACAP,WAAW,CAACQ,MAAM,CAAChB,KAAK,CAACE,OAAO,CAAC;IAClC,CAAC;IACD,MAAMe,UAAU,GAAG,MAAM;MACxB,IAAIC,EAAE,GAAGZ,GAAG,CAACa,SAAS,EAAE;MACxB,OAAO,IAAIC,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;QACvClB,QAAQ,CAACa,UAAU,CAAC,CAACC,EAAE,CAACK,GAAG,EAAEL,EAAE,CAACM,GAAG,CAAC,EAAE,CAACC,MAAM,EAAEC,MAAM,KAAK;UACzD,IAAIA,MAAM,CAACC,SAAS,CAACC,gBAAgB,EAAE;YACtCP,OAAO,CAACK,MAAM,CAACC,SAAS,CAACC,gBAAgB,CAAC;UAC3C,CAAC,MAAM;YACNP,OAAO,CAAC,EAAE,CAAC;UACZ;QACD,CAAC,CAAC;MACH,CAAC,CAAC;IACH,CAAC;IACD;IACAQ,MAAM,CAACC,mBAAmB,GAAG;MAC5BC,cAAc,EAAE;IACjB,CAAC;IACDhC,UAAU,CAACiC,IAAI,CAAC;MACfC,GAAG,EAAE,0BAA0B;MAAE;MACjCC,OAAO,EAAE,KAAK;MAAE;MAChBC,OAAO,EAAE,CAAC,mBAAmB,EAAE,kBAAkB,EAAE,eAAe,CAAC,CAAE;IACtE,CAAC,CAAC,CACAC,IAAI,CAAEC,IAAI,IAAK;MACfhC,KAAK,GAAGgC,IAAI,CAAC,CAAC;;MAEdC,IAAI,EAAE;IACP,CAAC,CAAC,CACDC,KAAK,CAAEC,CAAC,IAAK;MACbC,OAAO,CAACC,GAAG,CAACF,CAAC,CAAC;IACf,CAAC,CAAC;IACH,MAAMF,IAAI,GAAG,MAAM;MAClB;MACAhC,GAAG,GAAG,IAAID,KAAK,CAACsC,GAAG,CAAC,UAAU,EAAE;QAC/BC,IAAI,EAAE,EAAE;QAAE;QACVC,MAAM,EAAE,CAAC,UAAU,EAAE,QAAQ,CAAC;QAC9BC,YAAY,EAAE;MACf,CAAC,CAAC;MACF1C,QAAQ,GAAG,IAAIC,KAAK,CAAC0C,QAAQ,CAAC;QAC7BnC,IAAI,EAAE,KAAK,CAAE;MACd,CAAC,CAAC;;MACF,IAAIoC,IAAI,GAAG,IAAI3C,KAAK,CAAC4C,YAAY,CAAC;QACjCC,KAAK,EAAE;MACR,CAAC,CAAC;IACH,CAAC;IACDC,MAAY,CAAC;MACZlC,UAAU,CAAE;IACb,CAAC,CAAC","names":["AMapLoader","proxy","getCurrentInstance","address","ref","geocoder","MyMap","map","select","placeSearch","PlaceSearch","pageSize","pageIndex","city","citylimit","panel","autoFitView","search","getAddress","cc","getCenter","Promise","resolve","reject","lng","lat","status","result","regeocode","formattedAddress","window","_AMapSecurityConfig","securityJsCode","load","key","version","plugins","then","AMap","init","catch","e","console","log","Map","zoom","center","resizeEnable","Geocoder","auto","AutoComplete","input","expose"],"sources":["/Users/yanbinru/Desktop/代码/github/vue3-knowledge/src/views/map/gaud/components/search.vue"],"sourcesContent":["<template>\n\t<div class=\"main\">\n\t\t<div class=\"form\">\n\t\t\t<!--搜索框-->\n\t\t\t<input type=\"text\" class=\"input\" v-model=\"address\" id=\"tipinput\" @keyup.enter=\"select\" />\n\t\t</div>\n\t\t<!--查询列表,高德地图api绑定id-->\n\t\t<div class=\"list\" id=\"list\"></div>\n\t\t<!--地图,需要设置宽高-->\n\t\t<div class=\"map\" id=\"gd_map_d\"></div>\n\t</div>\n</template>\n\n<script setup>\nimport AMapLoader from '@amap/amap-jsapi-loader';\n//data\nconst { proxy } = getCurrentInstance();\nconst address = ref('');\nlet geocoder = null;\nlet MyMap = null;\nlet map = null;\n//methods\nconst select = () => {\n\t//构造地点查询类\n\tvar placeSearch = new MyMap.PlaceSearch({\n\t\tpageSize: 3, // 单页显示结果条数\n\t\tpageIndex: 1, // 页码\n\t\tcity: '010', // 兴趣点城市\n\t\tcitylimit: false, //是否强制限制在设置的城市内搜索\n\t\tmap: map, // 展现结果的地图实例\n\t\tpanel: 'list', // 结果列表将在此容器中进行展示。\n\t\tautoFitView: false, // 是否自动调整地图视野使绘制的 Marker点都处于视口的可见范围\n\t});\n\t//关键字查询\n\tplaceSearch.search(proxy.address);\n};\nconst getAddress = () => {\n\tlet cc = map.getCenter();\n\treturn new Promise((resolve, reject) => {\n\t\tgeocoder.getAddress([cc.lng, cc.lat], (status, result) => {\n\t\t\tif (result.regeocode.formattedAddress) {\n\t\t\t\tresolve(result.regeocode.formattedAddress);\n\t\t\t} else {\n\t\t\t\tresolve('');\n\t\t\t}\n\t\t});\n\t});\n};\n//mapinit\nwindow._AMapSecurityConfig = {\n\tsecurityJsCode: '填写高德地图Web端(JS API)申请的密钥',\n};\nAMapLoader.load({\n\tkey: '填写高德地图Web端(JS API)申请的key', // 申请好的Web端开发者Key\n\tversion: '2.0', // 指定要加载的 JSAPI 的版本，缺省时默认为 1.4.15\n\tplugins: ['AMap.AutoComplete', 'AMap.PlaceSearch', 'AMap.Geocoder'], // 需要使用的的插件列表，如比例尺'AMap.Scale'等\n})\n\t.then((AMap) => {\n\t\tMyMap = AMap; //保存AMap\n\n\t\tinit();\n\t})\n\t.catch((e) => {\n\t\tconsole.log(e);\n\t});\nconst init = () => {\n\t//绘制MyMap实例地图\n\tmap = new MyMap.Map('gd_map_d', {\n\t\tzoom: 14, //初始地图级别\n\t\tcenter: [121.473432, 31.22919],\n\t\tresizeEnable: true,\n\t});\n\tgeocoder = new MyMap.Geocoder({\n\t\tcity: '010', //城市设为北京，默认：“全国”\n\t});\n\tvar auto = new MyMap.AutoComplete({\n\t\tinput: 'tipinput',\n\t});\n};\ndefineExpose({\n\tgetAddress, //将事件暴露出去\n});\n</script>\n<style scoped lang=\"scss\">\n.main {\n\twidth: 100%;\n\theight: 350px;\n\tposition: relative;\n\n\t.map {\n\t\twidth: 100%;\n\t\theight: 100%;\n\t}\n\n\t.form {\n\t\tposition: absolute;\n\t\tleft: 10px;\n\t\ttop: 10px;\n\t\tz-index: 999;\n\n\t\t.input {\n\t\t\twidth: 180px;\n\t\t\tline-height: 30px;\n\t\t\tpadding-left: 5px;\n\t\t\tbox-shadow: 0 2px 6px 0 rgb(114 124 245 / 50%);\n\t\t\toutline: none;\n\t\t\tborder-radius: 5px;\n\t\t\tborder: none;\n\t\t}\n\t}\n\n\t.list {\n\t\tposition: absolute;\n\t\ttop: 10px;\n\t\tright: 10px;\n\t\theight: 300px;\n\t\twidth: 240px;\n\t\tz-index: 999;\n\n\t\t.li {\n\t\t\tline-height: 25px;\n\t\t}\n\t}\n}\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}