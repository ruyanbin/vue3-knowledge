{"ast":null,"code":"export class LoaderBase {\n  constructor() {\n    this.fetchOptions = {};\n    this.workingPath = '';\n  }\n  load(url) {\n    return fetch(url, this.fetchOptions).then(res => {\n      if (!res.ok) {\n        throw new Error(`Failed to load file \"${url}\" with status ${res.status} : ${res.statusText}`);\n      }\n      return res.arrayBuffer();\n    }).then(buffer => {\n      if (this.workingPath === '') {\n        this.workingPath = this.workingPathForURL(url);\n      }\n      return this.parse(buffer);\n    });\n  }\n  resolveExternalURL(url) {\n    if (/^[^\\\\/]/.test(url)) {\n      return this.workingPath + '/' + url;\n    } else {\n      return url;\n    }\n  }\n  workingPathForURL(url) {\n    const splits = url.split(/[\\\\/]/g);\n    splits.pop();\n    const workingPath = splits.join('/');\n    return workingPath + '/';\n  }\n  parse(buffer) {\n    throw new Error('LoaderBase: Parse not implemented.');\n  }\n}","map":{"version":3,"names":["LoaderBase","constructor","fetchOptions","workingPath","load","url","fetch","then","res","ok","Error","status","statusText","arrayBuffer","buffer","workingPathForURL","parse","resolveExternalURL","test","splits","split","pop","join"],"sources":["/Users/yanbinru/Desktop/代码/github/vue3-knowledge/node_modules/3d-tiles-renderer/src/base/LoaderBase.js"],"sourcesContent":["export class LoaderBase {\n\n\tconstructor() {\n\n\t\tthis.fetchOptions = {};\n\t\tthis.workingPath = '';\n\n\t}\n\n\tload( url ) {\n\n\t\treturn fetch( url, this.fetchOptions )\n\t\t\t.then( res => {\n\n\t\t\t\tif ( ! res.ok ) {\n\n\t\t\t\t\tthrow new Error( `Failed to load file \"${ url }\" with status ${ res.status } : ${ res.statusText }` );\n\n\t\t\t\t}\n\t\t\t\treturn res.arrayBuffer();\n\n\t\t\t} )\n\t\t\t.then( buffer => {\n\n\t\t\t\tif ( this.workingPath === '' ) {\n\n\t\t\t\t\tthis.workingPath = this.workingPathForURL( url );\n\n\t\t\t\t}\n\n\t\t\t\treturn this.parse( buffer );\n\n\t\t\t} );\n\n\t}\n\n\tresolveExternalURL( url ) {\n\n\t\tif ( /^[^\\\\/]/.test( url ) ) {\n\n\t\t\treturn this.workingPath + '/' + url;\n\n\t\t} else {\n\n\t\t\treturn url;\n\n\t\t}\n\n\t}\n\n\tworkingPathForURL( url ) {\n\n\t\tconst splits = url.split( /[\\\\/]/g );\n\t\tsplits.pop();\n\t\tconst workingPath = splits.join( '/' );\n\t\treturn workingPath + '/';\n\n\t}\n\n\tparse( buffer ) {\n\n\t\tthrow new Error( 'LoaderBase: Parse not implemented.' );\n\n\t}\n\n}\n"],"mappings":"AAAA,OAAO,MAAMA,UAAU,CAAC;EAEvBC,WAAW,GAAG;IAEb,IAAI,CAACC,YAAY,GAAG,CAAC,CAAC;IACtB,IAAI,CAACC,WAAW,GAAG,EAAE;EAEtB;EAEAC,IAAI,CAAEC,GAAG,EAAG;IAEX,OAAOC,KAAK,CAAED,GAAG,EAAE,IAAI,CAACH,YAAY,CAAE,CACpCK,IAAI,CAAEC,GAAG,IAAI;MAEb,IAAK,CAAEA,GAAG,CAACC,EAAE,EAAG;QAEf,MAAM,IAAIC,KAAK,CAAG,wBAAwBL,GAAK,iBAAiBG,GAAG,CAACG,MAAQ,MAAMH,GAAG,CAACI,UAAY,EAAC,CAAE;MAEtG;MACA,OAAOJ,GAAG,CAACK,WAAW,EAAE;IAEzB,CAAC,CAAE,CACFN,IAAI,CAAEO,MAAM,IAAI;MAEhB,IAAK,IAAI,CAACX,WAAW,KAAK,EAAE,EAAG;QAE9B,IAAI,CAACA,WAAW,GAAG,IAAI,CAACY,iBAAiB,CAAEV,GAAG,CAAE;MAEjD;MAEA,OAAO,IAAI,CAACW,KAAK,CAAEF,MAAM,CAAE;IAE5B,CAAC,CAAE;EAEL;EAEAG,kBAAkB,CAAEZ,GAAG,EAAG;IAEzB,IAAK,SAAS,CAACa,IAAI,CAAEb,GAAG,CAAE,EAAG;MAE5B,OAAO,IAAI,CAACF,WAAW,GAAG,GAAG,GAAGE,GAAG;IAEpC,CAAC,MAAM;MAEN,OAAOA,GAAG;IAEX;EAED;EAEAU,iBAAiB,CAAEV,GAAG,EAAG;IAExB,MAAMc,MAAM,GAAGd,GAAG,CAACe,KAAK,CAAE,QAAQ,CAAE;IACpCD,MAAM,CAACE,GAAG,EAAE;IACZ,MAAMlB,WAAW,GAAGgB,MAAM,CAACG,IAAI,CAAE,GAAG,CAAE;IACtC,OAAOnB,WAAW,GAAG,GAAG;EAEzB;EAEAa,KAAK,CAAEF,MAAM,EAAG;IAEf,MAAM,IAAIJ,KAAK,CAAE,oCAAoC,CAAE;EAExD;AAED"},"metadata":{},"sourceType":"module","externalDependencies":[]}