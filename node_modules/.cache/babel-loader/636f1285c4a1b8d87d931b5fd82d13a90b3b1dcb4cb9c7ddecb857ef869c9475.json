{"ast":null,"code":"import { openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-c82fb3ba\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  id: \"container\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1);\n}","map":{"version":3,"mappings":";;;EACMA,EAAE,EAAC;AAAW;;uBAAnBC,oBAA0B,OAA1BC,UAA0B","names":["id","_createElementBlock","_hoisted_1"],"sourceRoot":"","sources":["/Users/yanbinru/Desktop/代码/github/vue3-knowledge/src/views/map/gaud/components/Dome.vue"],"sourcesContent":["<template>\n\t<div id=\"container\"></div>\n</template>\n\n<script setup>\nimport AMapLoader from '@amap/amap-jsapi-loader';\nimport { reactive } from 'vue-demi';\n\nconst state = reactive({\n\tpath: [],\n\tcurrent_position: [],\n});\n\n//进行地图初始化\nfunction initMap() {\n\tAMapLoader.load({\n\t\tkey: '0c93577f3a72d04f9bd2130824983cb2', // 申请好的Web端开发者Key，首次调用 load 时必填\n\t\tversion: '2.0', // 指定要加载的 JSAPI 的版本，缺省时默认为 1.4.15\n\t})\n\t\t.then((AMap) => {\n\t\t\tconst traffic = new AMap.TileLayer.Traffic({\n\t\t\t\tautoRefresh: true, //是否自动刷新，默认为false\n\t\t\t\tinterval: 180, //刷新间隔，默认180s\n\t\t\t});\n\t\t\tconst map = new AMap.Map('container', {\n\t\t\t\t//设置地图容器id\n\t\t\t\tlayers: [traffic],\n\t\t\t\tviewMode: '2d', //是否为3D地图模式\n\t\t\t\tzoom: 10, //初始化地图级别\n\t\t\t\tcenter: [120.374926, 30.310678], //初始化地图中心点位置\n\t\t\t});\n\t\t\t//添加插件\n\t\t\tAMap.plugin(['AMap.ToolBar', 'AMap.Scale', 'AMap.HawkEye'], function () {\n\t\t\t\t//异步同时加载多个插件\n\t\t\t\tmap.addControl(new AMap.HawkEye()); //显示缩略图\n\t\t\t\tmap.addControl(new AMap.Scale()); //显示当前地图中心的比例尺\n\t\t\t});\n\t\t\t// 单击\n\t\t\tmap.on('click', (e) => {\n\t\t\t\t// console.log(e);\n\t\t\t\tstate.current_position = [e.lnglat.KL, e.lnglat.kT];\n\t\t\t\tstate.path.push([e.lnglat.KL, e.lnglat.kT]);\n\t\t\t\taddMarker();\n\n\t\t\t\taddPolyLine();\n\t\t\t\t// 地图按照适合展示图层内数据的缩放等级展示\n\t\t\t\t// map.setFitView();\n\t\t\t});\n\n\t\t\t// 实例化点标记\n\t\t\tfunction addMarker() {\n\t\t\t\tconst marker = new AMap.Marker({\n\t\t\t\t\ticon: '//a.amap.com/jsapi_demos/static/demo-center/icons/poi-marker-default.png',\n\t\t\t\t\tposition: state.current_position,\n\t\t\t\t\toffset: new AMap.Pixel(-26, -54),\n\t\t\t\t});\n\t\t\t\tmarker.setMap(map);\n\t\t\t}\n\n\t\t\t// 折线\n\t\t\tfunction addPolyLine() {\n\t\t\t\tconst polyline = new AMap.Polyline({\n\t\t\t\t\tpath: state.path,\n\t\t\t\t\tisOutline: true,\n\t\t\t\t\toutlineColor: '#ffeeff',\n\t\t\t\t\tborderWeight: 1,\n\t\t\t\t\tstrokeColor: '#3366FF',\n\t\t\t\t\tstrokeOpacity: 0.6,\n\t\t\t\t\tstrokeWeight: 5,\n\t\t\t\t\t// 折线样式还支持 'dashed'\n\t\t\t\t\tstrokeStyle: 'solid',\n\t\t\t\t\t// strokeStyle是dashed时有效\n\t\t\t\t\t// strokeDasharray: [10, 5],\n\t\t\t\t\tlineJoin: 'round',\n\t\t\t\t\tlineCap: 'round',\n\t\t\t\t\tzIndex: 50,\n\t\t\t\t});\n\t\t\t\tmap.add([polyline]);\n\t\t\t}\n\t\t})\n\t\t.catch((e) => {\n\t\t\tconsole.log(e);\n\t\t});\n}\nonMounted(() => {\n\tinitMap();\n});\n</script>\n\n<style scoped>\n#container {\n\tpadding: 0px;\n\tmargin: 0px;\n\twidth: 100%;\n\theight: calc(100vh - 50px);\n}\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}