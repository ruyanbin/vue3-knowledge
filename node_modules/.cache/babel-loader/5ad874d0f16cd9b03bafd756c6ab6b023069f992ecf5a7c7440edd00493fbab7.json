{"ast":null,"code":"import { debounce, observerDomResize } from '../util/index';\nexport default {\n  data() {\n    return {\n      dom: '',\n      width: 0,\n      height: 0,\n      debounceInitWHFun: '',\n      domObserver: ''\n    };\n  },\n  methods: {\n    async autoResizeMixinInit() {\n      const {\n        initWH,\n        getDebounceInitWHFun,\n        bindDomResizeCallback,\n        afterAutoResizeMixinInit\n      } = this;\n      await initWH(false);\n      getDebounceInitWHFun();\n      bindDomResizeCallback();\n      if (typeof afterAutoResizeMixinInit === 'function') afterAutoResizeMixinInit();\n    },\n    initWH(resize = true) {\n      const {\n        $nextTick,\n        $refs,\n        ref,\n        onResize\n      } = this;\n      return new Promise(resolve => {\n        $nextTick(e => {\n          const dom = this.dom = $refs[ref];\n          this.width = dom.clientWidth;\n          this.height = dom.clientHeight;\n          if (typeof onResize === 'function' && resize) onResize();\n          resolve();\n        });\n      });\n    },\n    getDebounceInitWHFun() {\n      const {\n        initWH\n      } = this;\n      this.debounceInitWHFun = debounce(100, initWH);\n    },\n    bindDomResizeCallback() {\n      const {\n        dom,\n        debounceInitWHFun\n      } = this;\n      this.domObserver = observerDomResize(dom, debounceInitWHFun);\n      window.addEventListener('resize', debounceInitWHFun);\n    },\n    unbindDomResizeCallback() {\n      let {\n        domObserver,\n        debounceInitWHFun\n      } = this;\n      domObserver.disconnect();\n      domObserver.takeRecords();\n      domObserver = null;\n      window.removeEventListener('resize', debounceInitWHFun);\n    }\n  },\n  mounted() {\n    const {\n      autoResizeMixinInit\n    } = this;\n    autoResizeMixinInit();\n  },\n  beforeDestroy() {\n    const {\n      unbindDomResizeCallback\n    } = this;\n    unbindDomResizeCallback();\n  }\n};","map":{"version":3,"names":["debounce","observerDomResize","data","dom","width","height","debounceInitWHFun","domObserver","methods","autoResizeMixinInit","initWH","getDebounceInitWHFun","bindDomResizeCallback","afterAutoResizeMixinInit","resize","$nextTick","$refs","ref","onResize","Promise","resolve","e","clientWidth","clientHeight","window","addEventListener","unbindDomResizeCallback","disconnect","takeRecords","removeEventListener","mounted","beforeDestroy"],"sources":["/Users/yanbinru/Desktop/代码/github/vue3-knowledge/node_modules/@jiaminghi/data-view/lib/mixin/autoResize.js"],"sourcesContent":["import { debounce, observerDomResize } from '../util/index'\n\nexport default {\n  data () {\n    return {\n      dom: '',\n\n      width: 0,\n      height: 0,\n\n      debounceInitWHFun: '',\n\n      domObserver: ''\n    }\n  },\n  methods: {\n    async autoResizeMixinInit () {\n      const { initWH, getDebounceInitWHFun, bindDomResizeCallback, afterAutoResizeMixinInit } = this\n\n      await initWH(false)\n\n      getDebounceInitWHFun()\n\n      bindDomResizeCallback()\n\n      if (typeof afterAutoResizeMixinInit === 'function') afterAutoResizeMixinInit()\n    },\n    initWH (resize = true) {\n      const { $nextTick, $refs, ref, onResize } = this\n\n      return new Promise(resolve => {\n        $nextTick(e => {\n          const dom = this.dom = $refs[ref]\n\n          this.width = dom.clientWidth\n          this.height = dom.clientHeight\n\n          if (typeof onResize === 'function' && resize) onResize()\n\n          resolve()\n        })\n      })\n    },\n    getDebounceInitWHFun () {\n      const { initWH } = this\n\n      this.debounceInitWHFun = debounce(100, initWH)\n    },\n    bindDomResizeCallback () {\n      const { dom, debounceInitWHFun } = this\n\n      this.domObserver = observerDomResize(dom, debounceInitWHFun)\n\n      window.addEventListener('resize', debounceInitWHFun)\n    },\n    unbindDomResizeCallback () {\n      let { domObserver, debounceInitWHFun } = this\n\n      domObserver.disconnect()\n      domObserver.takeRecords()\n      domObserver = null\n\n      window.removeEventListener('resize', debounceInitWHFun)\n    }\n  },\n  mounted () {\n    const { autoResizeMixinInit } = this\n\n    autoResizeMixinInit()\n  },\n  beforeDestroy () {\n    const { unbindDomResizeCallback } = this\n\n    unbindDomResizeCallback()\n  }\n}\n"],"mappings":"AAAA,SAASA,QAAQ,EAAEC,iBAAiB,QAAQ,eAAe;AAE3D,eAAe;EACbC,IAAI,GAAI;IACN,OAAO;MACLC,GAAG,EAAE,EAAE;MAEPC,KAAK,EAAE,CAAC;MACRC,MAAM,EAAE,CAAC;MAETC,iBAAiB,EAAE,EAAE;MAErBC,WAAW,EAAE;IACf,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,mBAAmB,GAAI;MAC3B,MAAM;QAAEC,MAAM;QAAEC,oBAAoB;QAAEC,qBAAqB;QAAEC;MAAyB,CAAC,GAAG,IAAI;MAE9F,MAAMH,MAAM,CAAC,KAAK,CAAC;MAEnBC,oBAAoB,EAAE;MAEtBC,qBAAqB,EAAE;MAEvB,IAAI,OAAOC,wBAAwB,KAAK,UAAU,EAAEA,wBAAwB,EAAE;IAChF,CAAC;IACDH,MAAM,CAAEI,MAAM,GAAG,IAAI,EAAE;MACrB,MAAM;QAAEC,SAAS;QAAEC,KAAK;QAAEC,GAAG;QAAEC;MAAS,CAAC,GAAG,IAAI;MAEhD,OAAO,IAAIC,OAAO,CAACC,OAAO,IAAI;QAC5BL,SAAS,CAACM,CAAC,IAAI;UACb,MAAMlB,GAAG,GAAG,IAAI,CAACA,GAAG,GAAGa,KAAK,CAACC,GAAG,CAAC;UAEjC,IAAI,CAACb,KAAK,GAAGD,GAAG,CAACmB,WAAW;UAC5B,IAAI,CAACjB,MAAM,GAAGF,GAAG,CAACoB,YAAY;UAE9B,IAAI,OAAOL,QAAQ,KAAK,UAAU,IAAIJ,MAAM,EAAEI,QAAQ,EAAE;UAExDE,OAAO,EAAE;QACX,CAAC,CAAC;MACJ,CAAC,CAAC;IACJ,CAAC;IACDT,oBAAoB,GAAI;MACtB,MAAM;QAAED;MAAO,CAAC,GAAG,IAAI;MAEvB,IAAI,CAACJ,iBAAiB,GAAGN,QAAQ,CAAC,GAAG,EAAEU,MAAM,CAAC;IAChD,CAAC;IACDE,qBAAqB,GAAI;MACvB,MAAM;QAAET,GAAG;QAAEG;MAAkB,CAAC,GAAG,IAAI;MAEvC,IAAI,CAACC,WAAW,GAAGN,iBAAiB,CAACE,GAAG,EAAEG,iBAAiB,CAAC;MAE5DkB,MAAM,CAACC,gBAAgB,CAAC,QAAQ,EAAEnB,iBAAiB,CAAC;IACtD,CAAC;IACDoB,uBAAuB,GAAI;MACzB,IAAI;QAAEnB,WAAW;QAAED;MAAkB,CAAC,GAAG,IAAI;MAE7CC,WAAW,CAACoB,UAAU,EAAE;MACxBpB,WAAW,CAACqB,WAAW,EAAE;MACzBrB,WAAW,GAAG,IAAI;MAElBiB,MAAM,CAACK,mBAAmB,CAAC,QAAQ,EAAEvB,iBAAiB,CAAC;IACzD;EACF,CAAC;EACDwB,OAAO,GAAI;IACT,MAAM;MAAErB;IAAoB,CAAC,GAAG,IAAI;IAEpCA,mBAAmB,EAAE;EACvB,CAAC;EACDsB,aAAa,GAAI;IACf,MAAM;MAAEL;IAAwB,CAAC,GAAG,IAAI;IAExCA,uBAAuB,EAAE;EAC3B;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}