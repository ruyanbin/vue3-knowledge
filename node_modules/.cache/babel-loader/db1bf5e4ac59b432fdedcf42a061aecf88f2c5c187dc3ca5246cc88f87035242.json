{"ast":null,"code":"import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, renderList as _renderList, Fragment as _Fragment, normalizeClass as _normalizeClass, renderSlot as _renderSlot, normalizeStyle as _normalizeStyle } from \"vue\";\nconst _hoisted_1 = [\"width\", \"height\"];\nconst _hoisted_2 = [\"fill\", \"points\"];\nconst _hoisted_3 = [\"fill\"];\nconst _hoisted_4 = {\n  class: \"border-box-content\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", {\n    class: \"dv-border-box-10\",\n    ref: $data.ref,\n    style: _normalizeStyle(`box-shadow: inset 0 0 25px 3px ${$data.mergedColor[0]}`)\n  }, [(_openBlock(), _createElementBlock(\"svg\", {\n    class: \"dv-border-svg-container\",\n    width: _ctx.width,\n    height: _ctx.height\n  }, [_createElementVNode(\"polygon\", {\n    fill: $props.backgroundColor,\n    points: `\n        4, 0 ${_ctx.width - 4}, 0 ${_ctx.width}, 4 ${_ctx.width}, ${_ctx.height - 4} ${_ctx.width - 4}, ${_ctx.height}\n        4, ${_ctx.height} 0, ${_ctx.height - 4} 0, 4\n      `\n  }, null, 8 /* PROPS */, _hoisted_2)], 8 /* PROPS */, _hoisted_1)), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.border, item => {\n    return _openBlock(), _createElementBlock(\"svg\", {\n      width: \"150px\",\n      height: \"150px\",\n      key: item,\n      class: _normalizeClass(`${item} dv-border-svg-container`)\n    }, [_createElementVNode(\"polygon\", {\n      fill: $data.mergedColor[1],\n      points: \"40, 0 5, 0 0, 5 0, 16 3, 19 3, 7 7, 3 35, 3\"\n    }, null, 8 /* PROPS */, _hoisted_3)], 2 /* CLASS */);\n  }), 128 /* KEYED_FRAGMENT */)), _createElementVNode(\"div\", _hoisted_4, [_renderSlot(_ctx.$slots, \"default\")])], 4 /* STYLE */);\n}","map":{"version":3,"mappings":";;;;;EAsBSA,KAAK,EAAC;AAAoB;;uBArBjCC,oBAwBM;IAxBDD,KAAK,EAAC,kBAAkB;IAAEE,GAAG,EAAEC,SAAG;IAAGC,KAAK,oDAAoCD,iBAAW;qBAC5FF,oBAKM;IALDD,KAAK,EAAC,yBAAyB;IAAEK,KAAK,EAAEC,UAAK;IAAGC,MAAM,EAAED;MAC3DE,oBAGK;IAHKC,IAAI,EAAEC,sBAAe;IAAGC,MAAM;eAAmBL,UAAK,WAAWA,UAAK,OAAOA,UAAK,KAAKA,WAAM,QAAQA,UAAK,SAASA,WAAM;aAAeA,WAAM,OAAOA,WAAM;;wFAMvKL,oBAWMW,6BAPWT,YAAM,EAAdU,IAAI;yBAJbZ,oBAWM;MAVJI,KAAK,EAAC,OAAO;MACbE,MAAM,EAAC,OAAO;MACbO,GAAG,EAAED,IAAI;MAETb,KAAK,qBAAKa,IAAI;QAEfL,oBAGE;MAFCC,IAAI,EAAEN,iBAAW;MAClBQ,MAAM,EAAC;;kCAIXH,oBAEM,OAFNO,UAEM,GADJC,YAAaV","names":["class","_createElementBlock","ref","$data","style","width","_ctx","height","_createElementVNode","fill","$props","points","_Fragment","item","key","_hoisted_4","_renderSlot"],"sourceRoot":"","sources":["/Users/yanbinru/Desktop/代码/github/vue3-knowledge/node_modules/@jiaminghi/data-view/lib/components/borderBox10/src/main.vue"],"sourcesContent":["<template>\n  <div class=\"dv-border-box-10\" :ref=\"ref\" :style=\"`box-shadow: inset 0 0 25px 3px ${mergedColor[0]}`\">\n    <svg class=\"dv-border-svg-container\" :width=\"width\" :height=\"height\">\n      <polygon :fill=\"backgroundColor\" :points=\"`\n        4, 0 ${width - 4}, 0 ${width}, 4 ${width}, ${height - 4} ${width - 4}, ${height}\n        4, ${height} 0, ${height - 4} 0, 4\n      `\" />\n    </svg>\n\n    <svg\n      width=\"150px\"\n      height=\"150px\"\n      :key=\"item\"\n      v-for=\"item in border\"\n      :class=\"`${item} dv-border-svg-container`\"\n    >\n      <polygon\n        :fill=\"mergedColor[1]\"\n        points=\"40, 0 5, 0 0, 5 0, 16 3, 19 3, 7 7, 3 35, 3\"\n      />\n    </svg>\n\n    <div class=\"border-box-content\">\n      <slot></slot>\n    </div>\n  </div>\n</template>\n\n<script>\nimport autoResize from '../../../mixin/autoResize'\n\nimport { deepMerge } from '@jiaminghi/charts/lib/util/index'\n\nimport { deepClone } from '@jiaminghi/c-render/lib/plugin/util'\n\nexport default {\n  name: 'DvBorderBox10',\n  mixins: [autoResize],\n  props: {\n    color: {\n      type: Array,\n      default: () => ([])\n    },\n    backgroundColor: {\n      type: String,\n      default: 'transparent'\n    }\n  },\n  data () {\n    return {\n      ref: 'border-box-10',\n\n      border: ['left-top', 'right-top', 'left-bottom', 'right-bottom'],\n\n      defaultColor: ['#1d48c4', '#d3e1f8'],\n\n      mergedColor: []\n    }\n  },\n  watch: {\n    color () {\n      const { mergeColor } = this\n\n      mergeColor()\n    }\n  },\n  methods: {\n    mergeColor () {\n      const { color, defaultColor } = this\n\n      this.mergedColor = deepMerge(deepClone(defaultColor, true), color || [])\n    }\n  },\n  mounted () {\n    const { mergeColor } = this\n\n    mergeColor()\n  }\n}\n</script>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}