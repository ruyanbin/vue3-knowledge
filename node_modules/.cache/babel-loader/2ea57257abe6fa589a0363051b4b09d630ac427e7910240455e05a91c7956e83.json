{"ast":null,"code":"import { defineComponent } from 'vue';\nimport registerMixin from '../../../mixins/register-component.mjs';\nimport locaMixin from '../../../mixins/loca-component.mjs';\nvar script = defineComponent({\n  name: \"ElAmapLocaHexagon\",\n  mixins: [registerMixin, locaMixin],\n  props: {\n    cullface: {\n      type: String\n    },\n    acceptLight: {\n      type: Boolean,\n      default: true\n    },\n    shininess: {\n      type: Number\n    },\n    hasSide: {\n      type: Boolean,\n      default: true\n    },\n    depth: {\n      type: Boolean,\n      default: true\n    }\n  },\n  data() {\n    return {};\n  },\n  methods: {\n    __initComponent(options) {\n      this.$amapComponent = new Loca.HexagonLayer(options);\n      this.setSource();\n      this.setStyle();\n      this.$parentComponent.add(this.$amapComponent);\n      this.initComplete();\n    },\n    setStyle() {\n      const defaultStyleValue = {\n        topColor: \"#fff\",\n        sideTopColor: \"#fff\",\n        sideBottomColor: \"#fff\",\n        altitude: 0,\n        height: 0,\n        radius: 1e3,\n        gap: 0,\n        unit: \"meter\"\n      };\n      const style = Object.assign({}, defaultStyleValue, this[\"defaultStyleValue\"]);\n      const defaultLayerStyle = {\n        topColor: (index, feature) => {\n          feature.properties = feature.properties || {};\n          return feature.properties.topColor === void 0 ? style.topColor : feature.properties.topColor;\n        },\n        sideTopColor: (index, feature) => {\n          feature.properties = feature.properties || {};\n          return feature.properties.sideTopColor === void 0 ? style.sideTopColor : feature.properties.sideTopColor;\n        },\n        sideBottomColor: (index, feature) => {\n          feature.properties = feature.properties || {};\n          return feature.properties.sideBottomColor === void 0 ? style.sideBottomColor : feature.properties.sideBottomColor;\n        },\n        altitude: (index, feature) => {\n          feature.properties = feature.properties || {};\n          return feature.properties.altitude === void 0 ? style.altitude : feature.properties.altitude;\n        },\n        height: (index, feature) => {\n          feature.properties = feature.properties || {};\n          return feature.properties.height === void 0 ? style.height : feature.properties.height;\n        },\n        radius: style.radius,\n        gap: style.gap,\n        unit: style.unit\n      };\n      const layerStyle = Object.assign({}, defaultLayerStyle, this[\"layerStyle\"]);\n      this.$amapComponent.setStyle(layerStyle);\n    }\n  },\n  render() {\n    return null;\n  }\n});\nexport { script as default };","map":{"version":3,"mappings":";;;AAKA,aAAeA,eAAgB;EAC7BC,IAAM;EACNC,QAAQ,CAACC,aAAe;EACxBC,KAAO;IACLC,QAAU;MACRC,IAAM;IAAA;IAERC,WAAa;MACXD,IAAM;MACNE,OAAS;IAAA;IAEXC,SAAW;MACTH,IAAM;IAAA;IAERI,OAAS;MACPJ,IAAM;MACNE,OAAS;IAAA;IAEXG,KAAO;MACLL,IAAM;MACNE,OAAS;IAAA;EAAA;EAGbI,IAAO;IACE;EAAA;EAGTC,OAAS;IACPC,gBAAgBC,OAAS;MAClB,sBAAiB,IAAIC,KAAKC,YAAa;MACvC;MACA;MACA,sBAAiBC,IAAI,IAAK;MAC1B;IAAA;IAEPC,QAAW;MACT,MAAMC,iBAAoB;QACxBC,QAAU;QACVC,YAAc;QACdC,eAAiB;QACjBC,QAAU;QACVC,MAAQ;QACRC,MAAQ;QACRC,GAAK;QACLC,IAAM;MAAA;MAER,MAAMC,KAAQ,UAAOC,MAAO,KAAIV,mBAAmB,IAAK;MACxD,MAAMW,iBAAoB;QACxBV,UAAU,CAACW,OAAOC,OAAY;UACpBA,qBAAaA,QAAQC,UAAc;UAC3C,OAAOD,QAAQC,UAAW,cAAa,SAAYL,KAAM,YAAWI,QAAQC,UAAW;QAAA;QAEzFZ,cAAc,CAACU,OAAOC,OAAY;UACxBA,qBAAaA,QAAQC,UAAc;UAC3C,OAAOD,QAAQC,UAAW,kBAAiB,SAAYL,KAAM,gBAAeI,QAAQC,UAAW;QAAA;QAEjGX,iBAAiB,CAACS,OAAOC,OAAY;UAC3BA,qBAAaA,QAAQC,UAAc;UAC3C,OAAOD,QAAQC,UAAW,qBAAoB,SAAYL,KAAM,mBAAkBI,QAAQC,UAAW;QAAA;QAEvGV,UAAU,CAACQ,OAAOC,OAAY;UACpBA,qBAAaA,QAAQC,UAAc;UAC3C,OAAOD,QAAQC,UAAW,cAAa,SAAYL,KAAM,YAAWI,QAAQC,UAAW;QAAA;QAEzFT,QAAQ,CAACO,OAAOC,OAAY;UAClBA,qBAAaA,QAAQC,UAAc;UAC3C,OAAOD,QAAQC,UAAW,YAAW,SAAYL,KAAM,UAASI,QAAQC,UAAW;QAAA;QAErFR,QAAQG,KAAM;QACdF,KAAKE,KAAM;QACXD,MAAMC,KAAM;MAAA;MAEd,MAAMM,UAAa,UAAOL,MAAO,KAAIC,mBAAmB,IAAK;MAC7D,KAAKK,eAAejB,QAAS;IAAA;EAAA;EAGjCkB,MAAQ;IACC;EAAA;AAAA","names":["defineComponent","name","mixins","registerMixin","props","cullface","type","acceptLight","default","shininess","hasSide","depth","data","methods","__initComponent","options","Loca","HexagonLayer","add","setStyle","defaultStyleValue","topColor","sideTopColor","sideBottomColor","altitude","height","radius","gap","unit","style","assign","defaultLayerStyle","index","feature","properties","layerStyle","$amapComponent","render"],"sources":["../../../../../../src/packages/loca/HexagonLayer/HexagonLayer.vue"],"sourcesContent":["<script lang=\"ts\">\r\nimport {defineComponent} from \"vue\";\r\nimport registerMixin from '../../../mixins/register-component';\r\nimport locaMixin from '../../../mixins/loca-component';\r\n\r\nexport default defineComponent({\r\n  name: 'ElAmapLocaHexagon',\r\n  mixins: [registerMixin, locaMixin],\r\n  props: {\r\n    cullface: {\r\n      type: String\r\n    }, // 剔除背面/前面的面（选择剔除将会提升性能），可选：back/front/none，back是剔除背面的面，front是剔除前面的面，none是不进行剔除。\r\n    acceptLight: {\r\n      type: Boolean,\r\n      default: true\r\n    }, // 面是否接受光照，光照信息在 loca 对象中配置\r\n    shininess: {\r\n      type: Number\r\n    }, // 立体网格的粗糙度，值越高，说明表面越粗糙。\r\n    hasSide: {\r\n      type: Boolean,\r\n      default: true\r\n    }, // 当面有厚度的时候，有没有侧面和底面\r\n    depth: {\r\n      type: Boolean,\r\n      default: true\r\n    }// 是否开启深度检测，开启后可能会影响zIndex\r\n  },\r\n  data() {\r\n    return {\r\n    };\r\n  },\r\n  methods: {\r\n    __initComponent(options) {\r\n      this.$amapComponent = new Loca.HexagonLayer(options);\r\n      this.setSource();\r\n      this.setStyle();\r\n      this.$parentComponent.add(this.$amapComponent);\r\n      this.initComplete();\r\n    },\r\n    setStyle() {\r\n      const defaultStyleValue = {\r\n        topColor: '#fff',\r\n        sideTopColor: '#fff',\r\n        sideBottomColor: '#fff',\r\n        altitude: 0,\r\n        height: 0,\r\n        radius: 1000,\r\n        gap: 0,\r\n        unit: 'meter'\r\n      };\r\n      const style = Object.assign({}, defaultStyleValue, this['defaultStyleValue']);\r\n      const defaultLayerStyle = {\r\n        topColor: (index, feature) => {\r\n          feature.properties = feature.properties || {};\r\n          return feature.properties.topColor === undefined ? style.topColor : feature.properties.topColor;\r\n        },\r\n        sideTopColor: (index, feature) => {\r\n          feature.properties = feature.properties || {};\r\n          return feature.properties.sideTopColor === undefined ? style.sideTopColor : feature.properties.sideTopColor;\r\n        },\r\n        sideBottomColor: (index, feature) => {\r\n          feature.properties = feature.properties || {};\r\n          return feature.properties.sideBottomColor === undefined ? style.sideBottomColor : feature.properties.sideBottomColor;\r\n        },\r\n        altitude: (index, feature) => {\r\n          feature.properties = feature.properties || {};\r\n          return feature.properties.altitude === undefined ? style.altitude : feature.properties.altitude;\r\n        },\r\n        height: (index, feature) => {\r\n          feature.properties = feature.properties || {};\r\n          return feature.properties.height === undefined ? style.height : feature.properties.height;\r\n        },\r\n        radius: style.radius,\r\n        gap: style.gap,\r\n        unit: style.unit\r\n      };\r\n      const layerStyle = Object.assign({}, defaultLayerStyle, this['layerStyle']);\r\n      this.$amapComponent.setStyle(layerStyle);\r\n    }\r\n  },\r\n  render(){\r\n    return null;\r\n  }\r\n});\r\n</script>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}