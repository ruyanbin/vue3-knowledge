{"ast":null,"code":"import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, renderSlot as _renderSlot, normalizeStyle as _normalizeStyle } from \"vue\";\nconst _hoisted_1 = [\"width\", \"height\"];\nconst _hoisted_2 = [\"stroke\"];\nconst _hoisted_3 = [\"stroke\", \"points\"];\nconst _hoisted_4 = [\"stroke\", \"points\"];\nconst _hoisted_5 = [\"stroke\", \"points\"];\nconst _hoisted_6 = [\"stroke\"];\nconst _hoisted_7 = [\"stroke\", \"points\"];\nconst _hoisted_8 = [\"stroke\", \"points\"];\nconst _hoisted_9 = [\"stroke\", \"points\"];\nconst _hoisted_10 = {\n  class: \"border-box-content\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", {\n    class: \"dv-border-box-7\",\n    style: _normalizeStyle(`box-shadow: inset 0 0 40px ${$data.mergedColor[0]}; border: 1px solid ${$data.mergedColor[0]}; background-color: ${$props.backgroundColor}`),\n    ref: $data.ref\n  }, [(_openBlock(), _createElementBlock(\"svg\", {\n    class: \"dv-border-svg-container\",\n    width: _ctx.width,\n    height: _ctx.height\n  }, [_createElementVNode(\"polyline\", {\n    class: \"dv-bb7-line-width-2\",\n    stroke: $data.mergedColor[0],\n    points: `0, 25 0, 0 25, 0`\n  }, null, 8 /* PROPS */, _hoisted_2), _createElementVNode(\"polyline\", {\n    class: \"dv-bb7-line-width-2\",\n    stroke: $data.mergedColor[0],\n    points: `${_ctx.width - 25}, 0 ${_ctx.width}, 0 ${_ctx.width}, 25`\n  }, null, 8 /* PROPS */, _hoisted_3), _createElementVNode(\"polyline\", {\n    class: \"dv-bb7-line-width-2\",\n    stroke: $data.mergedColor[0],\n    points: `${_ctx.width - 25}, ${_ctx.height} ${_ctx.width}, ${_ctx.height} ${_ctx.width}, ${_ctx.height - 25}`\n  }, null, 8 /* PROPS */, _hoisted_4), _createElementVNode(\"polyline\", {\n    class: \"dv-bb7-line-width-2\",\n    stroke: $data.mergedColor[0],\n    points: `0, ${_ctx.height - 25} 0, ${_ctx.height} 25, ${_ctx.height}`\n  }, null, 8 /* PROPS */, _hoisted_5), _createElementVNode(\"polyline\", {\n    class: \"dv-bb7-line-width-5\",\n    stroke: $data.mergedColor[1],\n    points: `0, 10 0, 0 10, 0`\n  }, null, 8 /* PROPS */, _hoisted_6), _createElementVNode(\"polyline\", {\n    class: \"dv-bb7-line-width-5\",\n    stroke: $data.mergedColor[1],\n    points: `${_ctx.width - 10}, 0 ${_ctx.width}, 0 ${_ctx.width}, 10`\n  }, null, 8 /* PROPS */, _hoisted_7), _createElementVNode(\"polyline\", {\n    class: \"dv-bb7-line-width-5\",\n    stroke: $data.mergedColor[1],\n    points: `${_ctx.width - 10}, ${_ctx.height} ${_ctx.width}, ${_ctx.height} ${_ctx.width}, ${_ctx.height - 10}`\n  }, null, 8 /* PROPS */, _hoisted_8), _createElementVNode(\"polyline\", {\n    class: \"dv-bb7-line-width-5\",\n    stroke: $data.mergedColor[1],\n    points: `0, ${_ctx.height - 10} 0, ${_ctx.height} 10, ${_ctx.height}`\n  }, null, 8 /* PROPS */, _hoisted_9)], 8 /* PROPS */, _hoisted_1)), _createElementVNode(\"div\", _hoisted_10, [_renderSlot(_ctx.$slots, \"default\")])], 4 /* STYLE */);\n}","map":{"version":3,"mappings":";;;;;;;;;;;EAmBSA,KAAK,EAAC;AAAoB;;uBAjBjCC,oBAoBM;IAnBJD,KAAK,EAAC,iBAAiB;IACtBE,KAAK,gDAAgCC,iBAAW,0BAA0BA,iBAAW,0BAA0BC,sBAAe;IAC9HC,GAAG,EAAEF;qBAENF,oBAUM;IAVDD,KAAK,EAAC,yBAAyB;IAAEM,KAAK,EAAEC,UAAK;IAAGC,MAAM,EAAED;MAC3DE,oBAA8F;IAApFT,KAAK,EAAC,qBAAqB;IAAEU,MAAM,EAAEP,iBAAW;IAAMQ,MAAM,EAAE;uCACxEF,oBAAuH;IAA7GT,KAAK,EAAC,qBAAqB;IAAEU,MAAM,EAAEP,iBAAW;IAAMQ,MAAM,KAAKJ,UAAK,YAAYA,UAAK,OAAOA,UAAK;uCAC7GE,oBAAmJ;IAAzIT,KAAK,EAAC,qBAAqB;IAAEU,MAAM,EAAEP,iBAAW;IAAMQ,MAAM,KAAKJ,UAAK,UAAUA,WAAM,IAAIA,UAAK,KAAKA,WAAM,IAAIA,UAAK,KAAKA,WAAM;uCACxIE,oBAA0H;IAAhHT,KAAK,EAAC,qBAAqB;IAAEU,MAAM,EAAEP,iBAAW;IAAMQ,MAAM,QAAQJ,WAAM,YAAYA,WAAM,QAAQA,WAAM;uCAEpHE,oBAA8F;IAApFT,KAAK,EAAC,qBAAqB;IAAEU,MAAM,EAAEP,iBAAW;IAAMQ,MAAM,EAAE;uCACxEF,oBAAuH;IAA7GT,KAAK,EAAC,qBAAqB;IAAEU,MAAM,EAAEP,iBAAW;IAAMQ,MAAM,KAAKJ,UAAK,YAAYA,UAAK,OAAOA,UAAK;uCAC7GE,oBAAmJ;IAAzIT,KAAK,EAAC,qBAAqB;IAAEU,MAAM,EAAEP,iBAAW;IAAMQ,MAAM,KAAKJ,UAAK,UAAUA,WAAM,IAAIA,UAAK,KAAKA,WAAM,IAAIA,UAAK,KAAKA,WAAM;uCACxIE,oBAA0H;IAAhHT,KAAK,EAAC,qBAAqB;IAAEU,MAAM,EAAEP,iBAAW;IAAMQ,MAAM,QAAQJ,WAAM,YAAYA,WAAM,QAAQA,WAAM;qEAGtHE,oBAEM,OAFNG,WAEM,GADJC,YAAaN","names":["class","_createElementBlock","style","$data","$props","ref","width","_ctx","height","_createElementVNode","stroke","points","_hoisted_10","_renderSlot"],"sourceRoot":"","sources":["/Users/yanbinru/Desktop/代码/github/vue3-knowledge/node_modules/@jiaminghi/data-view/lib/components/borderBox7/src/main.vue"],"sourcesContent":["\n<template>\n  <div\n    class=\"dv-border-box-7\"\n    :style=\"`box-shadow: inset 0 0 40px ${mergedColor[0]}; border: 1px solid ${mergedColor[0]}; background-color: ${backgroundColor}`\"\n    :ref=\"ref\"\n  >\n    <svg class=\"dv-border-svg-container\" :width=\"width\" :height=\"height\">\n      <polyline class=\"dv-bb7-line-width-2\" :stroke=\"mergedColor[0]\" :points=\"`0, 25 0, 0 25, 0`\" />\n      <polyline class=\"dv-bb7-line-width-2\" :stroke=\"mergedColor[0]\" :points=\"`${width - 25}, 0 ${width}, 0 ${width}, 25`\" />\n      <polyline class=\"dv-bb7-line-width-2\" :stroke=\"mergedColor[0]\" :points=\"`${width - 25}, ${height} ${width}, ${height} ${width}, ${height - 25}`\" />\n      <polyline class=\"dv-bb7-line-width-2\" :stroke=\"mergedColor[0]\" :points=\"`0, ${height - 25} 0, ${height} 25, ${height}`\" />\n\n      <polyline class=\"dv-bb7-line-width-5\" :stroke=\"mergedColor[1]\" :points=\"`0, 10 0, 0 10, 0`\" />\n      <polyline class=\"dv-bb7-line-width-5\" :stroke=\"mergedColor[1]\" :points=\"`${width - 10}, 0 ${width}, 0 ${width}, 10`\" />\n      <polyline class=\"dv-bb7-line-width-5\" :stroke=\"mergedColor[1]\" :points=\"`${width - 10}, ${height} ${width}, ${height} ${width}, ${height - 10}`\" />\n      <polyline class=\"dv-bb7-line-width-5\" :stroke=\"mergedColor[1]\" :points=\"`0, ${height - 10} 0, ${height} 10, ${height}`\" />\n    </svg>\n\n    <div class=\"border-box-content\">\n      <slot></slot>\n    </div>\n  </div>\n</template>\n\n<script>\nimport autoResize from '../../../mixin/autoResize'\n\nimport { deepMerge } from '@jiaminghi/charts/lib/util/index'\n\nimport { deepClone } from '@jiaminghi/c-render/lib/plugin/util'\n\nexport default {\n  name: 'DvBorderBox7',\n  mixins: [autoResize],\n  props: {\n    color: {\n      type: Array,\n      default: () => ([])\n    },\n    backgroundColor: {\n      type: String,\n      default: 'transparent'\n    }\n  },\n  data () {\n    return {\n      ref: 'border-box-7',\n\n      defaultColor: ['rgba(128,128,128,0.3)', 'rgba(128,128,128,0.5)'],\n\n      mergedColor: []\n    }\n  },\n  watch: {\n    color () {\n      const { mergeColor } = this\n\n      mergeColor()\n    }\n  },\n  methods: {\n    mergeColor () {\n      const { color, defaultColor } = this\n\n      this.mergedColor = deepMerge(deepClone(defaultColor, true), color || [])\n    }\n  },\n  mounted () {\n    const { mergeColor } = this\n\n    mergeColor()\n  }\n}\n</script>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}