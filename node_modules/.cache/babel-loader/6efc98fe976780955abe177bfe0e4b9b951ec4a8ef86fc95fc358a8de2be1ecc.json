{"ast":null,"code":"class VideoLayer {\n  constructor(options, video) {\n    this.canPlay = false;\n    this.frame = -1;\n    const canvas = document.createElement(\"canvas\");\n    this.video = video;\n    video.src = options.url;\n    video.autoplay = true;\n    video.loop = options.loop;\n    const layerOptions = {\n      ...options,\n      canvas\n    };\n    this.canvas = canvas;\n    this.context = canvas.getContext(\"2d\");\n    this.layer = new AMap.CanvasLayer(layerOptions);\n    this.initVideoEvents();\n    this.load();\n  }\n  getLayer() {\n    return this.layer;\n  }\n  initVideoEvents() {\n    var _a;\n    (_a = this.video) == null ? void 0 : _a.addEventListener(\"canplaythrough\", () => {\n      var _a2, _b;\n      if (this.canvas) {\n        this.canvas.width = (_a2 = this.video) == null ? void 0 : _a2.videoWidth;\n        this.canvas.height = (_b = this.video) == null ? void 0 : _b.videoHeight;\n      }\n      this.canPlay = true;\n      this.play();\n    });\n  }\n  load() {\n    var _a;\n    (_a = this.video) == null ? void 0 : _a.load();\n  }\n  play() {\n    var _a;\n    if (this.canPlay) {\n      (_a = this.video) == null ? void 0 : _a.play();\n      this.stopRender();\n      this.render();\n    }\n  }\n  pause() {\n    var _a;\n    this.stopRender();\n    (_a = this.video) == null ? void 0 : _a.pause();\n  }\n  stopRender() {\n    if (this.frame) {\n      cancelAnimationFrame(this.frame);\n    }\n  }\n  render() {\n    var _a, _b, _c, _d, _e, _f, _g, _h;\n    this.frame = window.requestAnimationFrame(() => {\n      this.render();\n    });\n    if ((_a = this.video) == null ? void 0 : _a.paused) {\n      (_b = this.video) == null ? void 0 : _b.play();\n    } else {\n      (_e = this.context) == null ? void 0 : _e.clearRect(0, 0, (_c = this.canvas) == null ? void 0 : _c.width, (_d = this.canvas) == null ? void 0 : _d.height);\n      (_h = this.context) == null ? void 0 : _h.drawImage(this.video, 0, 0, (_f = this.canvas) == null ? void 0 : _f.width, (_g = this.canvas) == null ? void 0 : _g.height);\n      this.layer.reFresh();\n    }\n  }\n  destroy() {\n    this.stopRender();\n    if (this.video) {\n      this.video.pause();\n    }\n    this.video = null;\n  }\n  setUrl(url) {\n    this.stopRender();\n    this.canPlay = false;\n    if (this.video) {\n      this.video.src = url;\n      this.load();\n    }\n  }\n  setZooms(zooms) {\n    this.getLayer().setZoom(zooms);\n  }\n  setOpacity(opacity) {\n    this.getLayer().setOpacity(opacity);\n  }\n  setBounds(bounds) {\n    this.getLayer().setBounds(bounds);\n  }\n  setzIndex(zIndex) {\n    this.getLayer().setzIndex(zIndex);\n  }\n  show() {\n    this.getLayer().show();\n  }\n  hide() {\n    this.getLayer().hide();\n  }\n}\nexport { VideoLayer as default };","map":{"version":3,"mappings":"AAQA,MAAiBA;EASfC,YAAYC,SAAsBC,KAAyB;IAHjD;IACF;IAGA,eAASC,SAASC,aAAc;IACtC,KAAKF,KAAQ;IACbA,MAAMG,MAAMJ,OAAQ;IACpBC,MAAMI,QAAW;IACjBJ,MAAMK,OAAON,OAAQ;IACrB,MAAMO,YAAe;MAChB;MACHC;IAAA;IAEF,KAAKA,MAAS;IACT,eAAUA,OAAOC,UAAW;IAC5B,aAAQ,IAAIC,KAAKC,WAAY;IAC7B;IACA;EAAA;EAGPC,QAAW;IACT,OAAO,IAAK;EAAA;EAGdC,eAAkB;IAtCpB;IAuCI,WAAKZ,KAAL,wBAAYa,gBAAiB,mBAAkB,MAAM;MAvCzD;MAwCM,IAAI,KAAKN,MAAQ;QACf,KAAKA,MAAO,SAAQ,CAAKO,qBAAL,IAAY;QAChC,KAAKP,MAAO,UAAS,CAAKQ,oBAAL,IAAY;MAAA;MAEnC,KAAKC,OAAU;MACV;IAAA;EAAA;EAITC,IAAO;IAjDT;IAkDI,WAAKjB,UAAL,IAAY;EAAA;EAGdkB,IAAO;IArDT;IAsDI,IAAI,KAAKF,OAAS;MAChB,WAAKhB,UAAL,IAAY;MACP;MACA;IAAA;EAAA;EAITmB,KAAQ;IA7DV;IA8DS;IACL,WAAKnB,UAAL,IAAY;EAAA;EAGdoB,UAAa;IACX,IAAI,KAAKC,KAAO;MACdC,qBAAqB,IAAK;IAAA;EAAA;EAI9BC,MAAS;IAxEX;IAyES,aAAQC,MAAO,uBAAsB,MAAM;MACzC;IAAA;IAEH,eAAKxB,KAAL,wBAAYyB,MAAQ;MACtB,WAAKzB,UAAL,IAAY;IAAA,CACP;MACA,uBAAL,IAAc,yBAAU,CAAG,KAAG,CAAK0B,qBAAL,IAAa,sBAAiB,CAAKC,qBAAL,IAAa;MACzE,WAAKC,OAAL,wBAAcC,SAAU,MAAK7B,KAAc,KAAG,CAAG,aAAKO,MAAL,wBAAauB,KAAiB,aAAKvB,WAAL,IAAa;MAC5F,KAAKwB,KAAM;IAAA;EAAA;EAIfC,OAAU;IACH;IACL,IAAI,KAAKhC,KAAO;MACd,KAAKA,KAAM;IAAA;IAEb,KAAKA,KAAQ;EAAA;EAGfiC,OAAOC,GAAa;IACb;IACL,KAAKlB,OAAU;IACf,IAAI,KAAKhB,KAAO;MACd,KAAKA,MAAMG,GAAM;MACZ;IAAA;EAAA;EAITgC,SAASC,KAAO;IACd,KAAKzB,WAAW0B,OAAQ;EAAA;EAG1BC,WAAWC,OAAS;IAClB,KAAK5B,WAAW2B,UAAW;EAAA;EAG7BE,UAAUC,MAAQ;IAChB,KAAK9B,WAAW6B,SAAU;EAAA;EAG5BE,UAAUC,MAAQ;IAChB,KAAKhC,WAAW+B,SAAU;EAAA;EAG5BE,IAAO;IACL,KAAKjC,QAAW;EAAA;EAGlBkC,IAAO;IACL,KAAKlC,QAAW;EAAA;AAAA","names":["VideoLayer","constructor","options","video","document","createElement","src","autoplay","loop","layerOptions","canvas","getContext","AMap","CanvasLayer","getLayer","initVideoEvents","addEventListener","_a2","_b","canPlay","load","play","pause","stopRender","frame","cancelAnimationFrame","render","window","paused","_c","_d","context","drawImage","width","layer","destroy","setUrl","url","setZooms","zooms","setZoom","setOpacity","opacity","setBounds","bounds","setzIndex","zIndex","show","hide"],"sources":["../../../../../../../src/packages/layer/data/Video/VideoLayer.ts"],"sourcesContent":["interface VideoOption {\r\n  url: string\r\n  zooms: number[]\r\n  bounds: any\r\n  opacity: number\r\n  loop: boolean\r\n}\r\n\r\nclass VideoLayer {\r\n\r\n  canvas: HTMLCanvasElement | null;\r\n  context: CanvasRenderingContext2D | null;\r\n  video: HTMLVideoElement | null;\r\n  layer: any;\r\n  canPlay = false;\r\n  frame = -1;\r\n\r\n  constructor(options: VideoOption, video: HTMLVideoElement) {\r\n    const canvas = document.createElement('canvas');\r\n    this.video = video;\r\n    video.src = options.url;\r\n    video.autoplay = true;\r\n    video.loop = options.loop;\r\n    const layerOptions = {\r\n      ...options,\r\n      canvas\r\n    }\r\n    this.canvas = canvas;\r\n    this.context = canvas.getContext('2d') as CanvasRenderingContext2D;\r\n    this.layer = new AMap.CanvasLayer(layerOptions);\r\n    this.initVideoEvents();\r\n    this.load();\r\n  }\r\n\r\n  getLayer() {\r\n    return this.layer;\r\n  }\r\n\r\n  initVideoEvents() {\r\n    this.video?.addEventListener('canplaythrough', () => {\r\n      if (this.canvas) {\r\n        this.canvas.width = this.video?.videoWidth as number;\r\n        this.canvas.height = this.video?.videoHeight as number;\r\n      }\r\n      this.canPlay = true;\r\n      this.play();\r\n    })\r\n  }\r\n\r\n  load() {\r\n    this.video?.load()\r\n  }\r\n\r\n  play() {\r\n    if (this.canPlay) {\r\n      this.video?.play();\r\n      this.stopRender()\r\n      this.render()\r\n    }\r\n  }\r\n\r\n  pause() {\r\n    this.stopRender();\r\n    this.video?.pause();\r\n  }\r\n\r\n  stopRender() {\r\n    if (this.frame) {\r\n      cancelAnimationFrame(this.frame);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    this.frame = window.requestAnimationFrame(() => {\r\n      this.render()\r\n    })\r\n    if (this.video?.paused) {\r\n      this.video?.play();\r\n    } else {\r\n      this.context?.clearRect(0, 0, this.canvas?.width as number, this.canvas?.height as number)\r\n      this.context?.drawImage(this.video as any, 0, 0, this.canvas?.width as number, this.canvas?.height as number)  //绘制视频\r\n      this.layer.reFresh();\r\n    }\r\n  }\r\n\r\n  destroy() {\r\n    this.stopRender();\r\n    if (this.video) {\r\n      this.video.pause();\r\n    }\r\n    this.video = null;\r\n  }\r\n\r\n  setUrl(url: string) {\r\n    this.stopRender();\r\n    this.canPlay = false;\r\n    if (this.video) {\r\n      this.video.src = url;\r\n      this.load()\r\n    }\r\n  }\r\n\r\n  setZooms(zooms) {\r\n    this.getLayer().setZoom(zooms);\r\n  }\r\n\r\n  setOpacity(opacity) {\r\n    this.getLayer().setOpacity(opacity);\r\n  }\r\n\r\n  setBounds(bounds) {\r\n    this.getLayer().setBounds(bounds);\r\n  }\r\n\r\n  setzIndex(zIndex) {\r\n    this.getLayer().setzIndex(zIndex);\r\n  }\r\n\r\n  show() {\r\n    this.getLayer().show();\r\n  }\r\n\r\n  hide() {\r\n    this.getLayer().hide();\r\n  }\r\n}\r\n\r\nexport default VideoLayer\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}