{"ast":null,"code":"import autoResize from '../../../mixin/autoResize';\nimport { uuid } from '../../../util/index';\nimport { deepMerge } from '@jiaminghi/charts/lib/util/index';\nimport { deepClone } from '@jiaminghi/c-render/lib/plugin/util';\nexport default {\n  name: 'DvBorderBox8',\n  mixins: [autoResize],\n  props: {\n    color: {\n      type: Array,\n      default: () => []\n    },\n    dur: {\n      type: Number,\n      default: 3\n    },\n    backgroundColor: {\n      type: String,\n      default: 'transparent'\n    },\n    reverse: {\n      type: Boolean,\n      default: false\n    }\n  },\n  data() {\n    const id = uuid();\n    return {\n      ref: 'border-box-8',\n      path: `border-box-8-path-${id}`,\n      gradient: `border-box-8-gradient-${id}`,\n      mask: `border-box-8-mask-${id}`,\n      defaultColor: ['#235fa7', '#4fd2dd'],\n      mergedColor: []\n    };\n  },\n  computed: {\n    length() {\n      const {\n        width,\n        height\n      } = this;\n      return (width + height - 5) * 2;\n    },\n    pathD() {\n      const {\n        reverse,\n        width,\n        height\n      } = this;\n      if (reverse) return `M 2.5, 2.5 L 2.5, ${height - 2.5} L ${width - 2.5}, ${height - 2.5} L ${width - 2.5}, 2.5 L 2.5, 2.5`;\n      return `M2.5, 2.5 L${width - 2.5}, 2.5 L${width - 2.5}, ${height - 2.5} L2.5, ${height - 2.5} L2.5, 2.5`;\n    }\n  },\n  watch: {\n    color() {\n      const {\n        mergeColor\n      } = this;\n      mergeColor();\n    }\n  },\n  methods: {\n    mergeColor() {\n      const {\n        color,\n        defaultColor\n      } = this;\n      this.mergedColor = deepMerge(deepClone(defaultColor, true), color || []);\n    }\n  },\n  mounted() {\n    const {\n      mergeColor\n    } = this;\n    mergeColor();\n  }\n};","map":{"version":3,"mappings":"AAkEA,OAAOA,UAAS,MAAO,2BAA0B;AACjD,SAASC,IAAG,QAAS,qBAAoB;AAEzC,SAASC,SAAQ,QAAS,kCAAiC;AAE3D,SAASC,SAAQ,QAAS,qCAAoC;AAE9D,eAAe;EACbC,IAAI,EAAE,cAAc;EACpBC,MAAM,EAAE,CAACL,UAAU,CAAC;EACpBM,KAAK,EAAE;IACLC,KAAK,EAAE;MACLC,IAAI,EAAEC,KAAK;MACXC,OAAO,EAAE,MAAO;IAClB,CAAC;IACDC,GAAG,EAAE;MACHH,IAAI,EAAEI,MAAM;MACZF,OAAO,EAAE;IACX,CAAC;IACDG,eAAe,EAAE;MACfL,IAAI,EAAEM,MAAM;MACZJ,OAAO,EAAE;IACX,CAAC;IACDK,OAAO,EAAE;MACPP,IAAI,EAAEQ,OAAO;MACbN,OAAO,EAAE;IACX;EACF,CAAC;EACDO,IAAG,GAAK;IACN,MAAMC,EAAC,GAAIjB,IAAI,EAAC;IAChB,OAAO;MACLkB,GAAG,EAAE,cAAc;MACnBC,IAAI,EAAG,qBAAoBF,EAAG,EAAC;MAC/BG,QAAQ,EAAG,yBAAwBH,EAAG,EAAC;MACvCI,IAAI,EAAG,qBAAoBJ,EAAG,EAAC;MAE/BK,YAAY,EAAE,CAAC,SAAS,EAAE,SAAS,CAAC;MAEpCC,WAAW,EAAE;IACf;EACF,CAAC;EACDC,QAAQ,EAAE;IACRC,MAAK,GAAK;MACR,MAAM;QAAEC,KAAK;QAAEC;MAAO,IAAI,IAAG;MAE7B,OAAO,CAACD,KAAI,GAAIC,MAAK,GAAI,CAAC,IAAI;IAChC,CAAC;IACDC,KAAI,GAAK;MACP,MAAM;QAAEd,OAAO;QAAEY,KAAK;QAAEC;MAAO,IAAI,IAAG;MAEtC,IAAIb,OAAO,EAAE,OAAQ,qBAAoBa,MAAK,GAAI,GAAG,MAAMD,KAAI,GAAI,GAAI,KAAIC,MAAK,GAAI,GAAG,MAAMD,KAAI,GAAI,GAAI,kBAAgB;MAEzH,OAAQ,cAAaA,KAAI,GAAI,GAAI,UAASA,KAAI,GAAI,GAAI,KAAIC,MAAK,GAAI,GAAG,UAAUA,MAAK,GAAI,GAAG,YAAW;IACzG;EACF,CAAC;EACDE,KAAK,EAAE;IACLvB,KAAI,GAAK;MACP,MAAM;QAAEwB;MAAW,IAAI,IAAG;MAE1BA,UAAU,EAAC;IACb;EACF,CAAC;EACDC,OAAO,EAAE;IACPD,UAAS,GAAK;MACZ,MAAM;QAAExB,KAAK;QAAEgB;MAAa,IAAI,IAAG;MAEnC,IAAI,CAACC,WAAU,GAAItB,SAAS,CAACC,SAAS,CAACoB,YAAY,EAAE,IAAI,CAAC,EAAEhB,KAAI,IAAK,EAAE;IACzE;EACF,CAAC;EACD0B,OAAM,GAAK;IACT,MAAM;MAAEF;IAAW,IAAI,IAAG;IAE1BA,UAAU,EAAC;EACb;AACF","names":["autoResize","uuid","deepMerge","deepClone","name","mixins","props","color","type","Array","default","dur","Number","backgroundColor","String","reverse","Boolean","data","id","ref","path","gradient","mask","defaultColor","mergedColor","computed","length","width","height","pathD","watch","mergeColor","methods","mounted"],"sourceRoot":"","sources":["/Users/yanbinru/Desktop/代码/github/vue3-knowledge/node_modules/@jiaminghi/data-view/lib/components/borderBox8/src/main.vue"],"sourcesContent":["<template>\n  <div class=\"dv-border-box-8\" :ref=\"ref\">\n    <svg class=\"dv-border-svg-container\" :width=\"width\" :height=\"height\">\n      <defs>\n        <path\n          :id=\"path\"\n          :d=\"pathD\"\n          fill=\"transparent\"\n        />\n        <radialGradient\n          :id=\"gradient\"\n          cx=\"50%\" cy=\"50%\" r=\"50%\"\n        >\n          <stop\n            offset=\"0%\" stop-color=\"#fff\"\n            stop-opacity=\"1\"\n          />\n          <stop\n            offset=\"100%\" stop-color=\"#fff\"\n            stop-opacity=\"0\"\n          />\n        </radialGradient>\n\n        <mask :id=\"mask\">\n          <circle cx=\"0\" cy=\"0\" r=\"150\" :fill=\"`url(#${gradient})`\">\n            <animateMotion\n              :dur=\"`${dur}s`\"\n              :path=\"pathD\"\n              rotate=\"auto\"\n              repeatCount=\"indefinite\"\n            />\n          </circle>\n        </mask>\n      </defs>\n\n      <polygon :fill=\"backgroundColor\" :points=\"`5, 5 ${width - 5}, 5 ${width - 5} ${height - 5} 5, ${height - 5}`\" />\n\n      <use\n        :stroke=\"mergedColor[0]\"\n        stroke-width=\"1\"\n        :xlink:href=\"`#${path}`\"\n      />\n\n      <use\n        :stroke=\"mergedColor[1]\"\n        stroke-width=\"3\"\n        :xlink:href=\"`#${path}`\"\n        :mask=\"`url(#${mask})`\"\n      >\n        <animate\n          attributeName=\"stroke-dasharray\"\n          :from=\"`0, ${length}`\"\n          :to=\"`${length}, 0`\"\n          :dur=\"`${dur}s`\"\n          repeatCount=\"indefinite\"\n        />\n      </use>\n    </svg>\n\n    <div class=\"border-box-content\">\n      <slot></slot>\n    </div>\n  </div>\n</template>\n\n<script>\nimport autoResize from '../../../mixin/autoResize'\nimport { uuid } from '../../../util/index'\n\nimport { deepMerge } from '@jiaminghi/charts/lib/util/index'\n\nimport { deepClone } from '@jiaminghi/c-render/lib/plugin/util'\n\nexport default {\n  name: 'DvBorderBox8',\n  mixins: [autoResize],\n  props: {\n    color: {\n      type: Array,\n      default: () => ([])\n    },\n    dur: {\n      type: Number,\n      default: 3\n    },\n    backgroundColor: {\n      type: String,\n      default: 'transparent'\n    },\n    reverse: {\n      type: Boolean,\n      default: false\n    }\n  },\n  data () {\n    const id = uuid()\n    return {\n      ref: 'border-box-8',\n      path: `border-box-8-path-${id}`,\n      gradient: `border-box-8-gradient-${id}`,\n      mask: `border-box-8-mask-${id}`,\n\n      defaultColor: ['#235fa7', '#4fd2dd'],\n\n      mergedColor: []\n    }\n  },\n  computed: {\n    length () {\n      const { width, height } = this\n\n      return (width + height - 5) * 2\n    },\n    pathD () {\n      const { reverse, width, height } = this\n\n      if (reverse) return `M 2.5, 2.5 L 2.5, ${height - 2.5} L ${width - 2.5}, ${height - 2.5} L ${width - 2.5}, 2.5 L 2.5, 2.5`\n\n      return `M2.5, 2.5 L${width - 2.5}, 2.5 L${width - 2.5}, ${height - 2.5} L2.5, ${height - 2.5} L2.5, 2.5`\n    }\n  },\n  watch: {\n    color () {\n      const { mergeColor } = this\n\n      mergeColor()\n    }\n  },\n  methods: {\n    mergeColor () {\n      const { color, defaultColor } = this\n\n      this.mergedColor = deepMerge(deepClone(defaultColor, true), color || [])\n    }\n  },\n  mounted () {\n    const { mergeColor } = this\n\n    mergeColor()\n  }\n}\n</script>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}