{"ast":null,"code":"import { uuid } from '../../../util/index';\nimport autoResize from '../../../mixin/autoResize';\nimport Charts from '@jiaminghi/charts';\nexport default {\n  name: 'DvCharts',\n  mixins: [autoResize],\n  props: {\n    option: {\n      type: Object,\n      default: () => ({})\n    }\n  },\n  data() {\n    const id = uuid();\n    return {\n      ref: `charts-container-${id}`,\n      chartRef: `chart-${id}`,\n      chart: null\n    };\n  },\n  watch: {\n    option() {\n      let {\n        chart,\n        option\n      } = this;\n      if (!chart) return;\n      if (!option) option = {};\n      chart.setOption(option, true);\n    }\n  },\n  methods: {\n    afterAutoResizeMixinInit() {\n      const {\n        initChart\n      } = this;\n      initChart();\n    },\n    initChart() {\n      const {\n        $refs,\n        chartRef,\n        option\n      } = this;\n      const chart = this.chart = new Charts($refs[chartRef]);\n      if (!option) return;\n      chart.setOption(option);\n    },\n    onResize() {\n      const {\n        chart\n      } = this;\n      if (!chart) return;\n      chart.resize();\n    }\n  }\n};","map":{"version":3,"mappings":"AAOA,SAASA,IAAG,QAAS,qBAAoB;AAEzC,OAAOC,UAAS,MAAO,2BAA0B;AAEjD,OAAOC,MAAK,MAAO,mBAAkB;AAErC,eAAe;EACbC,IAAI,EAAE,UAAU;EAChBC,MAAM,EAAE,CAACH,UAAU,CAAC;EACpBI,KAAK,EAAE;IACLC,MAAM,EAAE;MACNC,IAAI,EAAEC,MAAM;MACZC,OAAO,EAAE,OAAO,CAAC,CAAC;IACpB;EACF,CAAC;EACDC,IAAG,GAAK;IACN,MAAMC,EAAC,GAAIX,IAAI,EAAC;IAChB,OAAO;MACLY,GAAG,EAAG,oBAAmBD,EAAG,EAAC;MAC7BE,QAAQ,EAAG,SAAQF,EAAG,EAAC;MAEvBG,KAAK,EAAE;IACT;EACF,CAAC;EACDC,KAAK,EAAE;IACLT,MAAK,GAAK;MACR,IAAI;QAAEQ,KAAK;QAAER;MAAO,IAAI,IAAG;MAE3B,IAAI,CAACQ,KAAK,EAAE;MAEZ,IAAI,CAACR,MAAM,EAAEA,MAAK,GAAI,CAAC;MAEvBQ,KAAK,CAACE,SAAS,CAACV,MAAM,EAAE,IAAI;IAC9B;EACF,CAAC;EACDW,OAAO,EAAE;IACPC,wBAAuB,GAAK;MAC1B,MAAM;QAAEC;MAAU,IAAI,IAAG;MAEzBA,SAAS,EAAC;IACZ,CAAC;IACDA,SAAQ,GAAK;MACX,MAAM;QAAEC,KAAK;QAAEP,QAAQ;QAAEP;MAAO,IAAI,IAAG;MAEvC,MAAMQ,KAAI,GAAI,IAAI,CAACA,KAAI,GAAI,IAAIZ,MAAM,CAACkB,KAAK,CAACP,QAAQ,CAAC;MAErD,IAAI,CAACP,MAAM,EAAE;MAEbQ,KAAK,CAACE,SAAS,CAACV,MAAM;IACxB,CAAC;IACDe,QAAO,GAAK;MACV,MAAM;QAAEP;MAAM,IAAI,IAAG;MAErB,IAAI,CAACA,KAAK,EAAE;MAEZA,KAAK,CAACQ,MAAM,EAAC;IACf;EACF;AACF","names":["uuid","autoResize","Charts","name","mixins","props","option","type","Object","default","data","id","ref","chartRef","chart","watch","setOption","methods","afterAutoResizeMixinInit","initChart","$refs","onResize","resize"],"sourceRoot":"","sources":["/Users/yanbinru/Desktop/代码/github/vue3-knowledge/node_modules/@jiaminghi/data-view/lib/components/charts/src/main.vue"],"sourcesContent":["<template>\n  <div class=\"dv-charts-container\" :ref=\"ref\">\n    <div class=\"charts-canvas-container\" :ref=\"chartRef\" />\n  </div>\n</template>\n\n<script>\nimport { uuid } from '../../../util/index'\n\nimport autoResize from '../../../mixin/autoResize'\n\nimport Charts from '@jiaminghi/charts'\n\nexport default {\n  name: 'DvCharts',\n  mixins: [autoResize],\n  props: {\n    option: {\n      type: Object,\n      default: () => ({})\n    }\n  },\n  data () {\n    const id = uuid()\n    return {\n      ref: `charts-container-${id}`,\n      chartRef: `chart-${id}`,\n\n      chart: null\n    }\n  },\n  watch: {\n    option () {\n      let { chart, option } = this\n\n      if (!chart) return\n\n      if (!option) option = {}\n\n      chart.setOption(option, true)\n    }\n  },\n  methods: {\n    afterAutoResizeMixinInit () {\n      const { initChart } = this\n\n      initChart()\n    },\n    initChart () {\n      const { $refs, chartRef, option } = this\n\n      const chart = this.chart = new Charts($refs[chartRef])\n\n      if (!option) return\n\n      chart.setOption(option)\n    },\n    onResize () {\n      const { chart } = this\n\n      if (!chart) return\n\n      chart.resize()\n    }\n  }\n}\n</script>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}