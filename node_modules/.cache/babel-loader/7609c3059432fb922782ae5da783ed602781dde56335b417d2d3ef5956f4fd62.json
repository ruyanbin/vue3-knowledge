{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport AMapLoader from '@amap/amap-jsapi-loader';\nimport { reactive } from 'vue-demi';\nexport default {\n  __name: 'Dome',\n  setup(__props, {\n    expose\n  }) {\n    expose();\n    const state = reactive({\n      path: [],\n      current_position: []\n    });\n\n    //进行地图初始化\n    function initMap() {\n      AMapLoader.load({\n        key: '0c93577f3a72d04f9bd2130824983cb2',\n        // 申请好的Web端开发者Key，首次调用 load 时必填\n        version: '2.0' // 指定要加载的 JSAPI 的版本，缺省时默认为 1.4.15\n      }).then(AMap => {\n        const traffic = new AMap.TileLayer.Traffic({\n          autoRefresh: true,\n          //是否自动刷新，默认为false\n          interval: 180 //刷新间隔，默认180s\n        });\n\n        const map = new AMap.Map('container', {\n          //设置地图容器id\n          layers: [traffic],\n          viewMode: '2d',\n          //是否为3D地图模式\n          zoom: 10,\n          //初始化地图级别\n          center: [120.374926, 30.310678] //初始化地图中心点位置\n        });\n        //添加插件\n        AMap.plugin(['AMap.ToolBar', 'AMap.Scale', 'AMap.HawkEye'], function () {\n          //异步同时加载多个插件\n          map.addControl(new AMap.HawkEye()); //显示缩略图\n          map.addControl(new AMap.Scale()); //显示当前地图中心的比例尺\n        });\n        // 单击\n        map.on('click', e => {\n          // console.log(e);\n          state.current_position = [e.lnglat.KL, e.lnglat.kT];\n          state.path.push([e.lnglat.KL, e.lnglat.kT]);\n          addMarker();\n          addPolyLine();\n          // 地图按照适合展示图层内数据的缩放等级展示\n          // map.setFitView();\n        });\n\n        // 实例化点标记\n        function addMarker() {\n          const marker = new AMap.Marker({\n            icon: '//a.amap.com/jsapi_demos/static/demo-center/icons/poi-marker-default.png',\n            position: state.current_position,\n            offset: new AMap.Pixel(-26, -54)\n          });\n          marker.setMap(map);\n        }\n\n        // 折线\n        function addPolyLine() {\n          const polyline = new AMap.Polyline({\n            path: state.path,\n            isOutline: true,\n            outlineColor: '#ffeeff',\n            borderWeight: 1,\n            strokeColor: '#3366FF',\n            strokeOpacity: 0.6,\n            strokeWeight: 5,\n            // 折线样式还支持 'dashed'\n            strokeStyle: 'solid',\n            // strokeStyle是dashed时有效\n            // strokeDasharray: [10, 5],\n            lineJoin: 'round',\n            lineCap: 'round',\n            zIndex: 50\n          });\n          map.add([polyline]);\n        }\n      }).catch(e => {\n        console.log(e);\n      });\n    }\n    initMap();\n    const __returned__ = {\n      state,\n      initMap,\n      get AMapLoader() {\n        return AMapLoader;\n      },\n      get reactive() {\n        return reactive;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"mappings":"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","names":["AMapLoader","reactive","state","path","current_position","initMap","load","key","version","then","AMap","traffic","TileLayer","Traffic","autoRefresh","interval","map","Map","layers","viewMode","zoom","center","plugin","addControl","HawkEye","Scale","on","e","lnglat","KL","kT","push","addMarker","addPolyLine","marker","Marker","icon","position","offset","Pixel","setMap","polyline","Polyline","isOutline","outlineColor","borderWeight","strokeColor","strokeOpacity","strokeWeight","strokeStyle","lineJoin","lineCap","zIndex","add","catch","console","log"],"sources":["/Users/yanbinru/Desktop/代码/github/vue3-knowledge/src/views/map/gaud/components/Dome.vue"],"sourcesContent":["<template>\n\t<div id=\"container\"></div>\n</template>\n\n<script setup>\nimport AMapLoader from '@amap/amap-jsapi-loader';\nimport { reactive } from 'vue-demi';\n\nconst state = reactive({\n\tpath: [],\n\tcurrent_position: [],\n});\n\n//进行地图初始化\nfunction initMap() {\n\tAMapLoader.load({\n\t\tkey: '0c93577f3a72d04f9bd2130824983cb2', // 申请好的Web端开发者Key，首次调用 load 时必填\n\t\tversion: '2.0', // 指定要加载的 JSAPI 的版本，缺省时默认为 1.4.15\n\t})\n\t\t.then((AMap) => {\n\t\t\tconst traffic = new AMap.TileLayer.Traffic({\n\t\t\t\tautoRefresh: true, //是否自动刷新，默认为false\n\t\t\t\tinterval: 180, //刷新间隔，默认180s\n\t\t\t});\n\t\t\tconst map = new AMap.Map('container', {\n\t\t\t\t//设置地图容器id\n\t\t\t\tlayers: [traffic],\n\t\t\t\tviewMode: '2d', //是否为3D地图模式\n\t\t\t\tzoom: 10, //初始化地图级别\n\t\t\t\tcenter: [120.374926, 30.310678], //初始化地图中心点位置\n\t\t\t});\n\t\t\t//添加插件\n\t\t\tAMap.plugin(['AMap.ToolBar', 'AMap.Scale', 'AMap.HawkEye'], function () {\n\t\t\t\t//异步同时加载多个插件\n\t\t\t\tmap.addControl(new AMap.HawkEye()); //显示缩略图\n\t\t\t\tmap.addControl(new AMap.Scale()); //显示当前地图中心的比例尺\n\t\t\t});\n\t\t\t// 单击\n\t\t\tmap.on('click', (e) => {\n\t\t\t\t// console.log(e);\n\t\t\t\tstate.current_position = [e.lnglat.KL, e.lnglat.kT];\n\t\t\t\tstate.path.push([e.lnglat.KL, e.lnglat.kT]);\n\t\t\t\taddMarker();\n\n\t\t\t\taddPolyLine();\n\t\t\t\t// 地图按照适合展示图层内数据的缩放等级展示\n\t\t\t\t// map.setFitView();\n\t\t\t});\n\n\t\t\t// 实例化点标记\n\t\t\tfunction addMarker() {\n\t\t\t\tconst marker = new AMap.Marker({\n\t\t\t\t\ticon: '//a.amap.com/jsapi_demos/static/demo-center/icons/poi-marker-default.png',\n\t\t\t\t\tposition: state.current_position,\n\t\t\t\t\toffset: new AMap.Pixel(-26, -54),\n\t\t\t\t});\n\t\t\t\tmarker.setMap(map);\n\t\t\t}\n\n\t\t\t// 折线\n\t\t\tfunction addPolyLine() {\n\t\t\t\tconst polyline = new AMap.Polyline({\n\t\t\t\t\tpath: state.path,\n\t\t\t\t\tisOutline: true,\n\t\t\t\t\toutlineColor: '#ffeeff',\n\t\t\t\t\tborderWeight: 1,\n\t\t\t\t\tstrokeColor: '#3366FF',\n\t\t\t\t\tstrokeOpacity: 0.6,\n\t\t\t\t\tstrokeWeight: 5,\n\t\t\t\t\t// 折线样式还支持 'dashed'\n\t\t\t\t\tstrokeStyle: 'solid',\n\t\t\t\t\t// strokeStyle是dashed时有效\n\t\t\t\t\t// strokeDasharray: [10, 5],\n\t\t\t\t\tlineJoin: 'round',\n\t\t\t\t\tlineCap: 'round',\n\t\t\t\t\tzIndex: 50,\n\t\t\t\t});\n\t\t\t\tmap.add([polyline]);\n\t\t\t}\n\t\t})\n\t\t.catch((e) => {\n\t\t\tconsole.log(e);\n\t\t});\n}\ninitMap();\n</script>\n\n<style scoped>\n#container {\n\tpadding: 0px;\n\tmargin: 0px;\n\twidth: 100%;\n\theight: calc(100vh - 50px);\n}\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}