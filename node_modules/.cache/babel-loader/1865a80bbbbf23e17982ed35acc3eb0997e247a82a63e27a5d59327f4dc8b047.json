{"ast":null,"code":"import { CubeTexture, DataTexture, FileLoader, FloatType, HalfFloatType, LinearEncoding, LinearFilter, Loader } from 'three';\nimport { RGBELoader } from '../loaders/RGBELoader.js';\nclass HDRCubeTextureLoader extends Loader {\n  constructor(manager) {\n    super(manager);\n    this.hdrLoader = new RGBELoader();\n    this.type = HalfFloatType;\n  }\n  load(urls, onLoad, onProgress, onError) {\n    if (!Array.isArray(urls)) {\n      console.warn('THREE.HDRCubeTextureLoader signature has changed. Use .setDataType() instead.');\n      this.setDataType(urls);\n      urls = onLoad;\n      onLoad = onProgress;\n      onProgress = onError;\n      onError = arguments[4];\n    }\n    const texture = new CubeTexture();\n    texture.type = this.type;\n    switch (texture.type) {\n      case FloatType:\n        texture.encoding = LinearEncoding;\n        texture.minFilter = LinearFilter;\n        texture.magFilter = LinearFilter;\n        texture.generateMipmaps = false;\n        break;\n      case HalfFloatType:\n        texture.encoding = LinearEncoding;\n        texture.minFilter = LinearFilter;\n        texture.magFilter = LinearFilter;\n        texture.generateMipmaps = false;\n        break;\n    }\n    const scope = this;\n    let loaded = 0;\n    function loadHDRData(i, onLoad, onProgress, onError) {\n      new FileLoader(scope.manager).setPath(scope.path).setResponseType('arraybuffer').setWithCredentials(scope.withCredentials).load(urls[i], function (buffer) {\n        loaded++;\n        const texData = scope.hdrLoader.parse(buffer);\n        if (!texData) return;\n        if (texData.data !== undefined) {\n          const dataTexture = new DataTexture(texData.data, texData.width, texData.height);\n          dataTexture.type = texture.type;\n          dataTexture.encoding = texture.encoding;\n          dataTexture.format = texture.format;\n          dataTexture.minFilter = texture.minFilter;\n          dataTexture.magFilter = texture.magFilter;\n          dataTexture.generateMipmaps = texture.generateMipmaps;\n          texture.images[i] = dataTexture;\n        }\n        if (loaded === 6) {\n          texture.needsUpdate = true;\n          if (onLoad) onLoad(texture);\n        }\n      }, onProgress, onError);\n    }\n    for (let i = 0; i < urls.length; i++) {\n      loadHDRData(i, onLoad, onProgress, onError);\n    }\n    return texture;\n  }\n  setDataType(value) {\n    this.type = value;\n    this.hdrLoader.setDataType(value);\n    return this;\n  }\n}\nexport { HDRCubeTextureLoader };","map":{"version":3,"names":["CubeTexture","DataTexture","FileLoader","FloatType","HalfFloatType","LinearEncoding","LinearFilter","Loader","RGBELoader","HDRCubeTextureLoader","constructor","manager","hdrLoader","type","load","urls","onLoad","onProgress","onError","Array","isArray","console","warn","setDataType","arguments","texture","encoding","minFilter","magFilter","generateMipmaps","scope","loaded","loadHDRData","i","setPath","path","setResponseType","setWithCredentials","withCredentials","buffer","texData","parse","data","undefined","dataTexture","width","height","format","images","needsUpdate","length","value"],"sources":["/Users/yanbinru/Desktop/代码/github/vue3-knowledge/node_modules/three/examples/jsm/loaders/HDRCubeTextureLoader.js"],"sourcesContent":["import {\n\tCubeTexture,\n\tDataTexture,\n\tFileLoader,\n\tFloatType,\n\tHalfFloatType,\n\tLinearEncoding,\n\tLinearFilter,\n\tLoader\n} from 'three';\nimport { RGBELoader } from '../loaders/RGBELoader.js';\n\nclass HDRCubeTextureLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t\tthis.hdrLoader = new RGBELoader();\n\t\tthis.type = HalfFloatType;\n\n\t}\n\n\tload( urls, onLoad, onProgress, onError ) {\n\n\t\tif ( ! Array.isArray( urls ) ) {\n\n\t\t\tconsole.warn( 'THREE.HDRCubeTextureLoader signature has changed. Use .setDataType() instead.' );\n\n\t\t\tthis.setDataType( urls );\n\n\t\t\turls = onLoad;\n\t\t\tonLoad = onProgress;\n\t\t\tonProgress = onError;\n\t\t\tonError = arguments[ 4 ];\n\n\t\t}\n\n\t\tconst texture = new CubeTexture();\n\n\t\ttexture.type = this.type;\n\n\t\tswitch ( texture.type ) {\n\n\t\t\tcase FloatType:\n\n\t\t\t\ttexture.encoding = LinearEncoding;\n\t\t\t\ttexture.minFilter = LinearFilter;\n\t\t\t\ttexture.magFilter = LinearFilter;\n\t\t\t\ttexture.generateMipmaps = false;\n\t\t\t\tbreak;\n\n\t\t\tcase HalfFloatType:\n\n\t\t\t\ttexture.encoding = LinearEncoding;\n\t\t\t\ttexture.minFilter = LinearFilter;\n\t\t\t\ttexture.magFilter = LinearFilter;\n\t\t\t\ttexture.generateMipmaps = false;\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\tconst scope = this;\n\n\t\tlet loaded = 0;\n\n\t\tfunction loadHDRData( i, onLoad, onProgress, onError ) {\n\n\t\t\tnew FileLoader( scope.manager )\n\t\t\t\t.setPath( scope.path )\n\t\t\t\t.setResponseType( 'arraybuffer' )\n\t\t\t\t.setWithCredentials( scope.withCredentials )\n\t\t\t\t.load( urls[ i ], function ( buffer ) {\n\n\t\t\t\t\tloaded ++;\n\n\t\t\t\t\tconst texData = scope.hdrLoader.parse( buffer );\n\n\t\t\t\t\tif ( ! texData ) return;\n\n\t\t\t\t\tif ( texData.data !== undefined ) {\n\n\t\t\t\t\t\tconst dataTexture = new DataTexture( texData.data, texData.width, texData.height );\n\n\t\t\t\t\t\tdataTexture.type = texture.type;\n\t\t\t\t\t\tdataTexture.encoding = texture.encoding;\n\t\t\t\t\t\tdataTexture.format = texture.format;\n\t\t\t\t\t\tdataTexture.minFilter = texture.minFilter;\n\t\t\t\t\t\tdataTexture.magFilter = texture.magFilter;\n\t\t\t\t\t\tdataTexture.generateMipmaps = texture.generateMipmaps;\n\n\t\t\t\t\t\ttexture.images[ i ] = dataTexture;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( loaded === 6 ) {\n\n\t\t\t\t\t\ttexture.needsUpdate = true;\n\t\t\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t\t\t}\n\n\t\t\t\t}, onProgress, onError );\n\n\t\t}\n\n\t\tfor ( let i = 0; i < urls.length; i ++ ) {\n\n\t\t\tloadHDRData( i, onLoad, onProgress, onError );\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n\tsetDataType( value ) {\n\n\t\tthis.type = value;\n\t\tthis.hdrLoader.setDataType( value );\n\n\t\treturn this;\n\n\t}\n\n}\n\nexport { HDRCubeTextureLoader };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}