{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createElementVNode as _createElementVNode, normalizeClass as _normalizeClass, renderSlot as _renderSlot } from \"vue\";\nconst _hoisted_1 = {\n  class: \"dv-border-box-1\"\n};\nconst _hoisted_2 = [\"fill\"];\nconst _hoisted_3 = [\"values\"];\nconst _hoisted_4 = [\"fill\"];\nconst _hoisted_5 = [\"values\"];\nconst _hoisted_6 = [\"fill\"];\nconst _hoisted_7 = [\"values\"];\nconst _hoisted_8 = {\n  class: \"border-box-content\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.border, item => {\n    return _openBlock(), _createElementBlock(\"svg\", {\n      width: \"150px\",\n      height: \"150px\",\n      key: item,\n      class: _normalizeClass(`${item} border`)\n    }, [_createElementVNode(\"polygon\", {\n      fill: $data.mergedColor[0],\n      points: \"6,66 6,18 12,12 18,12 24,6 27,6 30,9 36,9 39,6 84,6 81,9 75,9 73.2,7 40.8,7 37.8,10.2 24,10.2 12,21 12,24 9,27 9,51 7.8,54 7.8,63\"\n    }, [_createElementVNode(\"animate\", {\n      attributeName: \"fill\",\n      values: `${$data.mergedColor[0]};${$data.mergedColor[1]};${$data.mergedColor[0]}`,\n      dur: \"0.5s\",\n      begin: \"0s\",\n      repeatCount: \"indefinite\"\n    }, null, 8 /* PROPS */, _hoisted_3)], 8 /* PROPS */, _hoisted_2), _createElementVNode(\"polygon\", {\n      fill: $data.mergedColor[1],\n      points: \"27.599999999999998,4.8 38.4,4.8 35.4,7.8 30.599999999999998,7.8\"\n    }, [_createElementVNode(\"animate\", {\n      attributeName: \"fill\",\n      values: `${$data.mergedColor[1]};${$data.mergedColor[0]};${$data.mergedColor[1]}`,\n      dur: \"0.5s\",\n      begin: \"0s\",\n      repeatCount: \"indefinite\"\n    }, null, 8 /* PROPS */, _hoisted_5)], 8 /* PROPS */, _hoisted_4), _createElementVNode(\"polygon\", {\n      fill: $data.mergedColor[0],\n      points: \"9,54 9,63 7.199999999999999,66 7.199999999999999,75 7.8,78 7.8,110 8.4,110 8.4,66 9.6,66 9.6,54\"\n    }, [_createElementVNode(\"animate\", {\n      attributeName: \"fill\",\n      values: `${$data.mergedColor[0]};${$data.mergedColor[1]};transparent`,\n      dur: \"1s\",\n      begin: \"0s\",\n      repeatCount: \"indefinite\"\n    }, null, 8 /* PROPS */, _hoisted_7)], 8 /* PROPS */, _hoisted_6)], 2 /* CLASS */);\n  }), 128 /* KEYED_FRAGMENT */)), _createElementVNode(\"div\", _hoisted_8, [_renderSlot(_ctx.$slots, \"default\")])]);\n}","map":{"version":3,"mappings":";;EACOA,KAAK,EAAC;AAAiB;;;;;;;;EA8CrBA,KAAK,EAAC;AAAoB;;uBA9CjCC,oBAiDM,OAjDNC,UAiDM,sBAhDJD,oBA2CME,6BAvCWC,YAAM,EAAdC,IAAI;yBAJbJ,oBA2CM;MA1CJK,KAAK,EAAC,OAAO;MACbC,MAAM,EAAC,OAAO;MACbC,GAAG,EAAEH,IAAI;MAETL,KAAK,qBAAKK,IAAI;QAEfI,oBAWU;MAVPC,IAAI,EAAEN,iBAAW;MAClBO,MAAM,EAAC;QAEPF,oBAME;MALAG,aAAa,EAAC,MAAM;MACnBC,MAAM,KAAKT,iBAAW,OAAOA,iBAAW,OAAOA,iBAAW;MAC3DU,GAAG,EAAC,MAAM;MACVC,KAAK,EAAC,IAAI;MACVC,WAAW,EAAC;sEAGhBP,oBAWU;MAVPC,IAAI,EAAEN,iBAAW;MAClBO,MAAM,EAAC;QAEPF,oBAME;MALAG,aAAa,EAAC,MAAM;MACnBC,MAAM,KAAKT,iBAAW,OAAOA,iBAAW,OAAOA,iBAAW;MAC3DU,GAAG,EAAC,MAAM;MACVC,KAAK,EAAC,IAAI;MACVC,WAAW,EAAC;sEAGhBP,oBAWU;MAVPC,IAAI,EAAEN,iBAAW;MAClBO,MAAM,EAAC;QAEPF,oBAME;MALAG,aAAa,EAAC,MAAM;MACnBC,MAAM,KAAKT,iBAAW,OAAOA,iBAAW;MACzCU,GAAG,EAAC,IAAI;MACRC,KAAK,EAAC,IAAI;MACVC,WAAW,EAAC;;kCAKlBP,oBAEM,OAFNQ,UAEM,GADJC,YAAaC","names":["class","_createElementBlock","_hoisted_1","_Fragment","$data","item","width","height","key","_createElementVNode","fill","points","attributeName","values","dur","begin","repeatCount","_hoisted_8","_renderSlot","_ctx"],"sourceRoot":"","sources":["/Users/yanbinru/Desktop/代码/github/vue3-knowledge/node_modules/@jiaminghi/data-view/lib/components/borderBox1/src/main.vue"],"sourcesContent":["<template>\n  <div class=\"dv-border-box-1\">\n    <svg\n      width=\"150px\"\n      height=\"150px\"\n      :key=\"item\"\n      v-for=\"item in border\"\n      :class=\"`${item} border`\"\n    >\n      <polygon\n        :fill=\"mergedColor[0]\"\n        points=\"6,66 6,18 12,12 18,12 24,6 27,6 30,9 36,9 39,6 84,6 81,9 75,9 73.2,7 40.8,7 37.8,10.2 24,10.2 12,21 12,24 9,27 9,51 7.8,54 7.8,63\"\n      >\n        <animate\n          attributeName=\"fill\"\n          :values=\"`${mergedColor[0]};${mergedColor[1]};${mergedColor[0]}`\"\n          dur=\"0.5s\"\n          begin=\"0s\"\n          repeatCount=\"indefinite\"\n        />\n      </polygon>\n      <polygon\n        :fill=\"mergedColor[1]\"\n        points=\"27.599999999999998,4.8 38.4,4.8 35.4,7.8 30.599999999999998,7.8\"\n      >\n        <animate\n          attributeName=\"fill\"\n          :values=\"`${mergedColor[1]};${mergedColor[0]};${mergedColor[1]}`\"\n          dur=\"0.5s\"\n          begin=\"0s\"\n          repeatCount=\"indefinite\"\n        />\n      </polygon>\n      <polygon\n        :fill=\"mergedColor[0]\"\n        points=\"9,54 9,63 7.199999999999999,66 7.199999999999999,75 7.8,78 7.8,110 8.4,110 8.4,66 9.6,66 9.6,54\"\n      >\n        <animate\n          attributeName=\"fill\"\n          :values=\"`${mergedColor[0]};${mergedColor[1]};transparent`\"\n          dur=\"1s\"\n          begin=\"0s\"\n          repeatCount=\"indefinite\"\n        />\n      </polygon>\n    </svg>\n\n    <div class=\"border-box-content\">\n      <slot></slot>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { deepMerge } from '@jiaminghi/charts/lib/util/index'\n\nimport { deepClone } from '@jiaminghi/c-render/lib/plugin/util'\n\nexport default {\n  name: 'DvBorderBox1',\n  props: {\n    color: {\n      type: Array,\n      default: () => ([])\n    }\n  },\n  data () {\n    return {\n      border: ['left-top', 'right-top', 'left-bottom', 'right-bottom'],\n\n      defaultColor: ['#4fd2dd', '#235fa7'],\n\n      mergedColor: []\n    }\n  },\n  watch: {\n    color () {\n      const { mergeColor } = this\n\n      mergeColor()\n    }\n  },\n  methods: {\n    mergeColor () {\n      const { color, defaultColor } = this\n\n      this.mergedColor = deepMerge(deepClone(defaultColor, true), color || [])\n    }\n  },\n  mounted () {\n    const { mergeColor } = this\n\n    mergeColor()\n  }\n}\n</script>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}