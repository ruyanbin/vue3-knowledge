{"ast":null,"code":"/*!\n  * core-base v9.2.2\n  * (c) 2022 kazuya kawaguchi\n  * Released under the MIT License.\n  */\n'use strict';\n\nrequire(\"core-js/modules/es.array.push.js\");\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar messageCompiler = require('@intlify/message-compiler');\nvar shared = require('@intlify/shared');\nvar devtoolsIf = require('@intlify/devtools-if');\nconst pathStateMachine = [];\npathStateMachine[0 /* BEFORE_PATH */] = {\n  [\"w\" /* WORKSPACE */]: [0 /* BEFORE_PATH */],\n  [\"i\" /* IDENT */]: [3 /* IN_IDENT */, 0 /* APPEND */],\n  [\"[\" /* LEFT_BRACKET */]: [4 /* IN_SUB_PATH */],\n  [\"o\" /* END_OF_FAIL */]: [7 /* AFTER_PATH */]\n};\n\npathStateMachine[1 /* IN_PATH */] = {\n  [\"w\" /* WORKSPACE */]: [1 /* IN_PATH */],\n  [\".\" /* DOT */]: [2 /* BEFORE_IDENT */],\n  [\"[\" /* LEFT_BRACKET */]: [4 /* IN_SUB_PATH */],\n  [\"o\" /* END_OF_FAIL */]: [7 /* AFTER_PATH */]\n};\n\npathStateMachine[2 /* BEFORE_IDENT */] = {\n  [\"w\" /* WORKSPACE */]: [2 /* BEFORE_IDENT */],\n  [\"i\" /* IDENT */]: [3 /* IN_IDENT */, 0 /* APPEND */],\n  [\"0\" /* ZERO */]: [3 /* IN_IDENT */, 0 /* APPEND */]\n};\n\npathStateMachine[3 /* IN_IDENT */] = {\n  [\"i\" /* IDENT */]: [3 /* IN_IDENT */, 0 /* APPEND */],\n  [\"0\" /* ZERO */]: [3 /* IN_IDENT */, 0 /* APPEND */],\n  [\"w\" /* WORKSPACE */]: [1 /* IN_PATH */, 1 /* PUSH */],\n  [\".\" /* DOT */]: [2 /* BEFORE_IDENT */, 1 /* PUSH */],\n  [\"[\" /* LEFT_BRACKET */]: [4 /* IN_SUB_PATH */, 1 /* PUSH */],\n  [\"o\" /* END_OF_FAIL */]: [7 /* AFTER_PATH */, 1 /* PUSH */]\n};\n\npathStateMachine[4 /* IN_SUB_PATH */] = {\n  [\"'\" /* SINGLE_QUOTE */]: [5 /* IN_SINGLE_QUOTE */, 0 /* APPEND */],\n  [\"\\\"\" /* DOUBLE_QUOTE */]: [6 /* IN_DOUBLE_QUOTE */, 0 /* APPEND */],\n  [\"[\" /* LEFT_BRACKET */]: [4 /* IN_SUB_PATH */, 2 /* INC_SUB_PATH_DEPTH */],\n\n  [\"]\" /* RIGHT_BRACKET */]: [1 /* IN_PATH */, 3 /* PUSH_SUB_PATH */],\n  [\"o\" /* END_OF_FAIL */]: 8 /* ERROR */,\n  [\"l\" /* ELSE */]: [4 /* IN_SUB_PATH */, 0 /* APPEND */]\n};\n\npathStateMachine[5 /* IN_SINGLE_QUOTE */] = {\n  [\"'\" /* SINGLE_QUOTE */]: [4 /* IN_SUB_PATH */, 0 /* APPEND */],\n  [\"o\" /* END_OF_FAIL */]: 8 /* ERROR */,\n  [\"l\" /* ELSE */]: [5 /* IN_SINGLE_QUOTE */, 0 /* APPEND */]\n};\n\npathStateMachine[6 /* IN_DOUBLE_QUOTE */] = {\n  [\"\\\"\" /* DOUBLE_QUOTE */]: [4 /* IN_SUB_PATH */, 0 /* APPEND */],\n  [\"o\" /* END_OF_FAIL */]: 8 /* ERROR */,\n  [\"l\" /* ELSE */]: [6 /* IN_DOUBLE_QUOTE */, 0 /* APPEND */]\n};\n/**\r\n * Check if an expression is a literal value.\r\n */\nconst literalValueRE = /^\\s?(?:true|false|-?[\\d.]+|'[^']*'|\"[^\"]*\")\\s?$/;\nfunction isLiteral(exp) {\n  return literalValueRE.test(exp);\n}\n/**\r\n * Strip quotes from a string\r\n */\nfunction stripQuotes(str) {\n  const a = str.charCodeAt(0);\n  const b = str.charCodeAt(str.length - 1);\n  return a === b && (a === 0x22 || a === 0x27) ? str.slice(1, -1) : str;\n}\n/**\r\n * Determine the type of a character in a keypath.\r\n */\nfunction getPathCharType(ch) {\n  if (ch === undefined || ch === null) {\n    return \"o\" /* END_OF_FAIL */;\n  }\n\n  const code = ch.charCodeAt(0);\n  switch (code) {\n    case 0x5b: // [\n    case 0x5d: // ]\n    case 0x2e: // .\n    case 0x22: // \"\n    case 0x27:\n      // '\n      return ch;\n    case 0x5f: // _\n    case 0x24: // $\n    case 0x2d:\n      // -\n      return \"i\" /* IDENT */;\n    case 0x09: // Tab (HT)\n    case 0x0a: // Newline (LF)\n    case 0x0d: // Return (CR)\n    case 0xa0: // No-break space (NBSP)\n    case 0xfeff: // Byte Order Mark (BOM)\n    case 0x2028: // Line Separator (LS)\n    case 0x2029:\n      // Paragraph Separator (PS)\n      return \"w\" /* WORKSPACE */;\n  }\n\n  return \"i\" /* IDENT */;\n}\n/**\r\n * Format a subPath, return its plain form if it is\r\n * a literal string or number. Otherwise prepend the\r\n * dynamic indicator (*).\r\n */\nfunction formatSubPath(path) {\n  const trimmed = path.trim();\n  // invalid leading 0\n  if (path.charAt(0) === '0' && isNaN(parseInt(path))) {\n    return false;\n  }\n  return isLiteral(trimmed) ? stripQuotes(trimmed) : \"*\" /* ASTARISK */ + trimmed;\n}\n/**\r\n * Parse a string path into an array of segments\r\n */\nfunction parse(path) {\n  const keys = [];\n  let index = -1;\n  let mode = 0 /* BEFORE_PATH */;\n  let subPathDepth = 0;\n  let c;\n  let key; // eslint-disable-line\n  let newChar;\n  let type;\n  let transition;\n  let action;\n  let typeMap;\n  const actions = [];\n  actions[0 /* APPEND */] = () => {\n    if (key === undefined) {\n      key = newChar;\n    } else {\n      key += newChar;\n    }\n  };\n  actions[1 /* PUSH */] = () => {\n    if (key !== undefined) {\n      keys.push(key);\n      key = undefined;\n    }\n  };\n  actions[2 /* INC_SUB_PATH_DEPTH */] = () => {\n    actions[0 /* APPEND */]();\n    subPathDepth++;\n  };\n  actions[3 /* PUSH_SUB_PATH */] = () => {\n    if (subPathDepth > 0) {\n      subPathDepth--;\n      mode = 4 /* IN_SUB_PATH */;\n      actions[0 /* APPEND */]();\n    } else {\n      subPathDepth = 0;\n      if (key === undefined) {\n        return false;\n      }\n      key = formatSubPath(key);\n      if (key === false) {\n        return false;\n      } else {\n        actions[1 /* PUSH */]();\n      }\n    }\n  };\n\n  function maybeUnescapeQuote() {\n    const nextChar = path[index + 1];\n    if (mode === 5 /* IN_SINGLE_QUOTE */ && nextChar === \"'\" /* SINGLE_QUOTE */ || mode === 6 /* IN_DOUBLE_QUOTE */ && nextChar === \"\\\"\" /* DOUBLE_QUOTE */) {\n      index++;\n      newChar = '\\\\' + nextChar;\n      actions[0 /* APPEND */]();\n      return true;\n    }\n  }\n  while (mode !== null) {\n    index++;\n    c = path[index];\n    if (c === '\\\\' && maybeUnescapeQuote()) {\n      continue;\n    }\n    type = getPathCharType(c);\n    typeMap = pathStateMachine[mode];\n    transition = typeMap[type] || typeMap[\"l\" /* ELSE */] || 8 /* ERROR */;\n    // check parse error\n    if (transition === 8 /* ERROR */) {\n      return;\n    }\n    mode = transition[0];\n    if (transition[1] !== undefined) {\n      action = actions[transition[1]];\n      if (action) {\n        newChar = c;\n        if (action() === false) {\n          return;\n        }\n      }\n    }\n    // check parse finish\n    if (mode === 7 /* AFTER_PATH */) {\n      return keys;\n    }\n  }\n}\n// path token cache\nconst cache = new Map();\n/**\r\n * key-value message resolver\r\n *\r\n * @remarks\r\n * Resolves messages with the key-value structure. Note that messages with a hierarchical structure such as objects cannot be resolved\r\n *\r\n * @param obj - A target object to be resolved with path\r\n * @param path - A {@link Path | path} to resolve the value of message\r\n *\r\n * @returns A resolved {@link PathValue | path value}\r\n *\r\n * @VueI18nGeneral\r\n */\nfunction resolveWithKeyValue(obj, path) {\n  return shared.isObject(obj) ? obj[path] : null;\n}\n/**\r\n * message resolver\r\n *\r\n * @remarks\r\n * Resolves messages. messages with a hierarchical structure such as objects can be resolved. This resolver is used in VueI18n as default.\r\n *\r\n * @param obj - A target object to be resolved with path\r\n * @param path - A {@link Path | path} to resolve the value of message\r\n *\r\n * @returns A resolved {@link PathValue | path value}\r\n *\r\n * @VueI18nGeneral\r\n */\nfunction resolveValue(obj, path) {\n  // check object\n  if (!shared.isObject(obj)) {\n    return null;\n  }\n  // parse path\n  let hit = cache.get(path);\n  if (!hit) {\n    hit = parse(path);\n    if (hit) {\n      cache.set(path, hit);\n    }\n  }\n  // check hit\n  if (!hit) {\n    return null;\n  }\n  // resolve path value\n  const len = hit.length;\n  let last = obj;\n  let i = 0;\n  while (i < len) {\n    const val = last[hit[i]];\n    if (val === undefined) {\n      return null;\n    }\n    last = val;\n    i++;\n  }\n  return last;\n}\nconst DEFAULT_MODIFIER = str => str;\nconst DEFAULT_MESSAGE = ctx => ''; // eslint-disable-line\nconst DEFAULT_MESSAGE_DATA_TYPE = 'text';\nconst DEFAULT_NORMALIZE = values => values.length === 0 ? '' : values.join('');\nconst DEFAULT_INTERPOLATE = shared.toDisplayString;\nfunction pluralDefault(choice, choicesLength) {\n  choice = Math.abs(choice);\n  if (choicesLength === 2) {\n    // prettier-ignore\n    return choice ? choice > 1 ? 1 : 0 : 1;\n  }\n  return choice ? Math.min(choice, 2) : 0;\n}\nfunction getPluralIndex(options) {\n  // prettier-ignore\n  const index = shared.isNumber(options.pluralIndex) ? options.pluralIndex : -1;\n  // prettier-ignore\n  return options.named && (shared.isNumber(options.named.count) || shared.isNumber(options.named.n)) ? shared.isNumber(options.named.count) ? options.named.count : shared.isNumber(options.named.n) ? options.named.n : index : index;\n}\nfunction normalizeNamed(pluralIndex, props) {\n  if (!props.count) {\n    props.count = pluralIndex;\n  }\n  if (!props.n) {\n    props.n = pluralIndex;\n  }\n}\nfunction createMessageContext(options = {}) {\n  const locale = options.locale;\n  const pluralIndex = getPluralIndex(options);\n  const pluralRule = shared.isObject(options.pluralRules) && shared.isString(locale) && shared.isFunction(options.pluralRules[locale]) ? options.pluralRules[locale] : pluralDefault;\n  const orgPluralRule = shared.isObject(options.pluralRules) && shared.isString(locale) && shared.isFunction(options.pluralRules[locale]) ? pluralDefault : undefined;\n  const plural = messages => {\n    return messages[pluralRule(pluralIndex, messages.length, orgPluralRule)];\n  };\n  const _list = options.list || [];\n  const list = index => _list[index];\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const _named = options.named || {};\n  shared.isNumber(options.pluralIndex) && normalizeNamed(pluralIndex, _named);\n  const named = key => _named[key];\n  function message(key) {\n    // prettier-ignore\n    const msg = shared.isFunction(options.messages) ? options.messages(key) : shared.isObject(options.messages) ? options.messages[key] : false;\n    return !msg ? options.parent ? options.parent.message(key) // resolve from parent messages\n    : DEFAULT_MESSAGE : msg;\n  }\n  const _modifier = name => options.modifiers ? options.modifiers[name] : DEFAULT_MODIFIER;\n  const normalize = shared.isPlainObject(options.processor) && shared.isFunction(options.processor.normalize) ? options.processor.normalize : DEFAULT_NORMALIZE;\n  const interpolate = shared.isPlainObject(options.processor) && shared.isFunction(options.processor.interpolate) ? options.processor.interpolate : DEFAULT_INTERPOLATE;\n  const type = shared.isPlainObject(options.processor) && shared.isString(options.processor.type) ? options.processor.type : DEFAULT_MESSAGE_DATA_TYPE;\n  const linked = (key, ...args) => {\n    const [arg1, arg2] = args;\n    let type = 'text';\n    let modifier = '';\n    if (args.length === 1) {\n      if (shared.isObject(arg1)) {\n        modifier = arg1.modifier || modifier;\n        type = arg1.type || type;\n      } else if (shared.isString(arg1)) {\n        modifier = arg1 || modifier;\n      }\n    } else if (args.length === 2) {\n      if (shared.isString(arg1)) {\n        modifier = arg1 || modifier;\n      }\n      if (shared.isString(arg2)) {\n        type = arg2 || type;\n      }\n    }\n    let msg = message(key)(ctx);\n    // The message in vnode resolved with linked are returned as an array by processor.nomalize\n    if (type === 'vnode' && shared.isArray(msg) && modifier) {\n      msg = msg[0];\n    }\n    return modifier ? _modifier(modifier)(msg, type) : msg;\n  };\n  const ctx = {\n    [\"list\" /* LIST */]: list,\n    [\"named\" /* NAMED */]: named,\n    [\"plural\" /* PLURAL */]: plural,\n    [\"linked\" /* LINKED */]: linked,\n    [\"message\" /* MESSAGE */]: message,\n    [\"type\" /* TYPE */]: type,\n    [\"interpolate\" /* INTERPOLATE */]: interpolate,\n    [\"normalize\" /* NORMALIZE */]: normalize\n  };\n  return ctx;\n}\nlet devtools = null;\nfunction setDevToolsHook(hook) {\n  devtools = hook;\n}\nfunction getDevToolsHook() {\n  return devtools;\n}\nfunction initI18nDevTools(i18n, version, meta) {\n  // TODO: queue if devtools is undefined\n  devtools && devtools.emit(devtoolsIf.IntlifyDevToolsHooks.I18nInit, {\n    timestamp: Date.now(),\n    i18n,\n    version,\n    meta\n  });\n}\nconst translateDevTools = /* #__PURE__*/createDevToolsHook(devtoolsIf.IntlifyDevToolsHooks.FunctionTranslate);\nfunction createDevToolsHook(hook) {\n  return payloads => devtools && devtools.emit(hook, payloads);\n}\nconst CoreWarnCodes = {\n  NOT_FOUND_KEY: 1,\n  FALLBACK_TO_TRANSLATE: 2,\n  CANNOT_FORMAT_NUMBER: 3,\n  FALLBACK_TO_NUMBER_FORMAT: 4,\n  CANNOT_FORMAT_DATE: 5,\n  FALLBACK_TO_DATE_FORMAT: 6,\n  __EXTEND_POINT__: 7\n};\n/** @internal */\nconst warnMessages = {\n  [CoreWarnCodes.NOT_FOUND_KEY]: `Not found '{key}' key in '{locale}' locale messages.`,\n  [CoreWarnCodes.FALLBACK_TO_TRANSLATE]: `Fall back to translate '{key}' key with '{target}' locale.`,\n  [CoreWarnCodes.CANNOT_FORMAT_NUMBER]: `Cannot format a number value due to not supported Intl.NumberFormat.`,\n  [CoreWarnCodes.FALLBACK_TO_NUMBER_FORMAT]: `Fall back to number format '{key}' key with '{target}' locale.`,\n  [CoreWarnCodes.CANNOT_FORMAT_DATE]: `Cannot format a date value due to not supported Intl.DateTimeFormat.`,\n  [CoreWarnCodes.FALLBACK_TO_DATE_FORMAT]: `Fall back to datetime format '{key}' key with '{target}' locale.`\n};\nfunction getWarnMessage(code, ...args) {\n  return shared.format(warnMessages[code], ...args);\n}\n\n/**\r\n * Fallback with simple implemenation\r\n *\r\n * @remarks\r\n * A fallback locale function implemented with a simple fallback algorithm.\r\n *\r\n * Basically, it returns the value as specified in the `fallbackLocale` props, and is processed with the fallback inside intlify.\r\n *\r\n * @param ctx - A {@link CoreContext | context}\r\n * @param fallback - A {@link FallbackLocale | fallback locale}\r\n * @param start - A starting {@link Locale | locale}\r\n *\r\n * @returns Fallback locales\r\n *\r\n * @VueI18nGeneral\r\n */\nfunction fallbackWithSimple(ctx, fallback, start // eslint-disable-line @typescript-eslint/no-unused-vars\n) {\n  // prettier-ignore\n  return [...new Set([start, ...(shared.isArray(fallback) ? fallback : shared.isObject(fallback) ? Object.keys(fallback) : shared.isString(fallback) ? [fallback] : [start])])];\n}\n/**\r\n * Fallback with locale chain\r\n *\r\n * @remarks\r\n * A fallback locale function implemented with a fallback chain algorithm. It's used in VueI18n as default.\r\n *\r\n * @param ctx - A {@link CoreContext | context}\r\n * @param fallback - A {@link FallbackLocale | fallback locale}\r\n * @param start - A starting {@link Locale | locale}\r\n *\r\n * @returns Fallback locales\r\n *\r\n * @VueI18nSee [Fallbacking](../guide/essentials/fallback)\r\n *\r\n * @VueI18nGeneral\r\n */\nfunction fallbackWithLocaleChain(ctx, fallback, start) {\n  const startLocale = shared.isString(start) ? start : DEFAULT_LOCALE;\n  const context = ctx;\n  if (!context.__localeChainCache) {\n    context.__localeChainCache = new Map();\n  }\n  let chain = context.__localeChainCache.get(startLocale);\n  if (!chain) {\n    chain = [];\n    // first block defined by start\n    let block = [start];\n    // while any intervening block found\n    while (shared.isArray(block)) {\n      block = appendBlockToChain(chain, block, fallback);\n    }\n    // prettier-ignore\n    // last block defined by default\n    const defaults = shared.isArray(fallback) || !shared.isPlainObject(fallback) ? fallback : fallback['default'] ? fallback['default'] : null;\n    // convert defaults to array\n    block = shared.isString(defaults) ? [defaults] : defaults;\n    if (shared.isArray(block)) {\n      appendBlockToChain(chain, block, false);\n    }\n    context.__localeChainCache.set(startLocale, chain);\n  }\n  return chain;\n}\nfunction appendBlockToChain(chain, block, blocks) {\n  let follow = true;\n  for (let i = 0; i < block.length && shared.isBoolean(follow); i++) {\n    const locale = block[i];\n    if (shared.isString(locale)) {\n      follow = appendLocaleToChain(chain, block[i], blocks);\n    }\n  }\n  return follow;\n}\nfunction appendLocaleToChain(chain, locale, blocks) {\n  let follow;\n  const tokens = locale.split('-');\n  do {\n    const target = tokens.join('-');\n    follow = appendItemToChain(chain, target, blocks);\n    tokens.splice(-1, 1);\n  } while (tokens.length && follow === true);\n  return follow;\n}\nfunction appendItemToChain(chain, target, blocks) {\n  let follow = false;\n  if (!chain.includes(target)) {\n    follow = true;\n    if (target) {\n      follow = target[target.length - 1] !== '!';\n      const locale = target.replace(/!/g, '');\n      chain.push(locale);\n      if ((shared.isArray(blocks) || shared.isPlainObject(blocks)) && blocks[locale] // eslint-disable-line @typescript-eslint/no-explicit-any\n      ) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        follow = blocks[locale];\n      }\n    }\n  }\n  return follow;\n}\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\n/**\r\n * Intlify core-base version\r\n * @internal\r\n */\nconst VERSION = '9.2.2';\nconst NOT_REOSLVED = -1;\nconst DEFAULT_LOCALE = 'en-US';\nconst MISSING_RESOLVE_VALUE = '';\nconst capitalize = str => `${str.charAt(0).toLocaleUpperCase()}${str.substr(1)}`;\nfunction getDefaultLinkedModifiers() {\n  return {\n    upper: (val, type) => {\n      // prettier-ignore\n      return type === 'text' && shared.isString(val) ? val.toUpperCase() : type === 'vnode' && shared.isObject(val) && '__v_isVNode' in val ? val.children.toUpperCase() : val;\n    },\n    lower: (val, type) => {\n      // prettier-ignore\n      return type === 'text' && shared.isString(val) ? val.toLowerCase() : type === 'vnode' && shared.isObject(val) && '__v_isVNode' in val ? val.children.toLowerCase() : val;\n    },\n    capitalize: (val, type) => {\n      // prettier-ignore\n      return type === 'text' && shared.isString(val) ? capitalize(val) : type === 'vnode' && shared.isObject(val) && '__v_isVNode' in val ? capitalize(val.children) : val;\n    }\n  };\n}\nlet _compiler;\nfunction registerMessageCompiler(compiler) {\n  _compiler = compiler;\n}\nlet _resolver;\n/**\r\n * Register the message resolver\r\n *\r\n * @param resolver - A {@link MessageResolver} function\r\n *\r\n * @VueI18nGeneral\r\n */\nfunction registerMessageResolver(resolver) {\n  _resolver = resolver;\n}\nlet _fallbacker;\n/**\r\n * Register the locale fallbacker\r\n *\r\n * @param fallbacker - A {@link LocaleFallbacker} function\r\n *\r\n * @VueI18nGeneral\r\n */\nfunction registerLocaleFallbacker(fallbacker) {\n  _fallbacker = fallbacker;\n}\n// Additional Meta for Intlify DevTools\nlet _additionalMeta = null;\nconst setAdditionalMeta = meta => {\n  _additionalMeta = meta;\n};\nconst getAdditionalMeta = () => _additionalMeta;\nlet _fallbackContext = null;\nconst setFallbackContext = context => {\n  _fallbackContext = context;\n};\nconst getFallbackContext = () => _fallbackContext;\n// ID for CoreContext\nlet _cid = 0;\nfunction createCoreContext(options = {}) {\n  // setup options\n  const version = shared.isString(options.version) ? options.version : VERSION;\n  const locale = shared.isString(options.locale) ? options.locale : DEFAULT_LOCALE;\n  const fallbackLocale = shared.isArray(options.fallbackLocale) || shared.isPlainObject(options.fallbackLocale) || shared.isString(options.fallbackLocale) || options.fallbackLocale === false ? options.fallbackLocale : locale;\n  const messages = shared.isPlainObject(options.messages) ? options.messages : {\n    [locale]: {}\n  };\n  const datetimeFormats = shared.isPlainObject(options.datetimeFormats) ? options.datetimeFormats : {\n    [locale]: {}\n  };\n  const numberFormats = shared.isPlainObject(options.numberFormats) ? options.numberFormats : {\n    [locale]: {}\n  };\n  const modifiers = shared.assign({}, options.modifiers || {}, getDefaultLinkedModifiers());\n  const pluralRules = options.pluralRules || {};\n  const missing = shared.isFunction(options.missing) ? options.missing : null;\n  const missingWarn = shared.isBoolean(options.missingWarn) || shared.isRegExp(options.missingWarn) ? options.missingWarn : true;\n  const fallbackWarn = shared.isBoolean(options.fallbackWarn) || shared.isRegExp(options.fallbackWarn) ? options.fallbackWarn : true;\n  const fallbackFormat = !!options.fallbackFormat;\n  const unresolving = !!options.unresolving;\n  const postTranslation = shared.isFunction(options.postTranslation) ? options.postTranslation : null;\n  const processor = shared.isPlainObject(options.processor) ? options.processor : null;\n  const warnHtmlMessage = shared.isBoolean(options.warnHtmlMessage) ? options.warnHtmlMessage : true;\n  const escapeParameter = !!options.escapeParameter;\n  const messageCompiler = shared.isFunction(options.messageCompiler) ? options.messageCompiler : _compiler;\n  const messageResolver = shared.isFunction(options.messageResolver) ? options.messageResolver : _resolver || resolveWithKeyValue;\n  const localeFallbacker = shared.isFunction(options.localeFallbacker) ? options.localeFallbacker : _fallbacker || fallbackWithSimple;\n  const fallbackContext = shared.isObject(options.fallbackContext) ? options.fallbackContext : undefined;\n  const onWarn = shared.isFunction(options.onWarn) ? options.onWarn : shared.warn;\n  // setup internal options\n  const internalOptions = options;\n  const __datetimeFormatters = shared.isObject(internalOptions.__datetimeFormatters) ? internalOptions.__datetimeFormatters : new Map();\n  const __numberFormatters = shared.isObject(internalOptions.__numberFormatters) ? internalOptions.__numberFormatters : new Map();\n  const __meta = shared.isObject(internalOptions.__meta) ? internalOptions.__meta : {};\n  _cid++;\n  const context = {\n    version,\n    cid: _cid,\n    locale,\n    fallbackLocale,\n    messages,\n    modifiers,\n    pluralRules,\n    missing,\n    missingWarn,\n    fallbackWarn,\n    fallbackFormat,\n    unresolving,\n    postTranslation,\n    processor,\n    warnHtmlMessage,\n    escapeParameter,\n    messageCompiler,\n    messageResolver,\n    localeFallbacker,\n    fallbackContext,\n    onWarn,\n    __meta\n  };\n  {\n    context.datetimeFormats = datetimeFormats;\n    context.numberFormats = numberFormats;\n    context.__datetimeFormatters = __datetimeFormatters;\n    context.__numberFormatters = __numberFormatters;\n  }\n  return context;\n}\n/** @internal */\nfunction isTranslateFallbackWarn(fallback, key) {\n  return fallback instanceof RegExp ? fallback.test(key) : fallback;\n}\n/** @internal */\nfunction isTranslateMissingWarn(missing, key) {\n  return missing instanceof RegExp ? missing.test(key) : missing;\n}\n/** @internal */\nfunction handleMissing(context, key, locale, missingWarn, type) {\n  const {\n    missing,\n    onWarn\n  } = context;\n  if (missing !== null) {\n    const ret = missing(context, locale, key, type);\n    return shared.isString(ret) ? ret : key;\n  } else {\n    return key;\n  }\n}\n/** @internal */\nfunction updateFallbackLocale(ctx, locale, fallback) {\n  const context = ctx;\n  context.__localeChainCache = new Map();\n  ctx.localeFallbacker(ctx, fallback, locale);\n}\n/* eslint-enable @typescript-eslint/no-explicit-any */\n\nconst defaultOnCacheKey = source => source;\nlet compileCache = Object.create(null);\nfunction clearCompileCache() {\n  compileCache = Object.create(null);\n}\nfunction compileToFunction(source, options = {}) {\n  {\n    // check caches\n    const onCacheKey = options.onCacheKey || defaultOnCacheKey;\n    const key = onCacheKey(source);\n    const cached = compileCache[key];\n    if (cached) {\n      return cached;\n    }\n    // compile error detecting\n    let occurred = false;\n    const onError = options.onError || messageCompiler.defaultOnError;\n    options.onError = err => {\n      occurred = true;\n      onError(err);\n    };\n    // compile\n    const {\n      code\n    } = messageCompiler.baseCompile(source, options);\n    // evaluate function\n    const msg = new Function(`return ${code}`)();\n    // if occurred compile error, don't cache\n    return !occurred ? compileCache[key] = msg : msg;\n  }\n}\nlet code = messageCompiler.CompileErrorCodes.__EXTEND_POINT__;\nconst inc = () => ++code;\nconst CoreErrorCodes = {\n  INVALID_ARGUMENT: code,\n  INVALID_DATE_ARGUMENT: inc(),\n  INVALID_ISO_DATE_ARGUMENT: inc(),\n  __EXTEND_POINT__: inc() // 18\n};\n\nfunction createCoreError(code) {\n  return messageCompiler.createCompileError(code, null, undefined);\n}\n/** @internal */\n({\n  [CoreErrorCodes.INVALID_ARGUMENT]: 'Invalid arguments',\n  [CoreErrorCodes.INVALID_DATE_ARGUMENT]: 'The date provided is an invalid Date object.' + 'Make sure your Date represents a valid date.',\n  [CoreErrorCodes.INVALID_ISO_DATE_ARGUMENT]: 'The argument provided is not a valid ISO date string'\n});\nconst NOOP_MESSAGE_FUNCTION = () => '';\nconst isMessageFunction = val => shared.isFunction(val);\n// implementation of `translate` function\nfunction translate(context, ...args) {\n  const {\n    fallbackFormat,\n    postTranslation,\n    unresolving,\n    messageCompiler,\n    fallbackLocale,\n    messages\n  } = context;\n  const [key, options] = parseTranslateArgs(...args);\n  const missingWarn = shared.isBoolean(options.missingWarn) ? options.missingWarn : context.missingWarn;\n  const fallbackWarn = shared.isBoolean(options.fallbackWarn) ? options.fallbackWarn : context.fallbackWarn;\n  const escapeParameter = shared.isBoolean(options.escapeParameter) ? options.escapeParameter : context.escapeParameter;\n  const resolvedMessage = !!options.resolvedMessage;\n  // prettier-ignore\n  const defaultMsgOrKey = shared.isString(options.default) || shared.isBoolean(options.default) // default by function option\n  ? !shared.isBoolean(options.default) ? options.default : !messageCompiler ? () => key : key : fallbackFormat // default by `fallbackFormat` option\n  ? !messageCompiler ? () => key : key : '';\n  const enableDefaultMsg = fallbackFormat || defaultMsgOrKey !== '';\n  const locale = shared.isString(options.locale) ? options.locale : context.locale;\n  // escape params\n  escapeParameter && escapeParams(options);\n  // resolve message format\n  // eslint-disable-next-line prefer-const\n  let [formatScope, targetLocale, message] = !resolvedMessage ? resolveMessageFormat(context, key, locale, fallbackLocale, fallbackWarn, missingWarn) : [key, locale, messages[locale] || {}];\n  // NOTE:\n  //  Fix to work around `ssrTransfrom` bug in Vite.\n  //  https://github.com/vitejs/vite/issues/4306\n  //  To get around this, use temporary variables.\n  //  https://github.com/nuxt/framework/issues/1461#issuecomment-954606243\n  let format = formatScope;\n  // if you use default message, set it as message format!\n  let cacheBaseKey = key;\n  if (!resolvedMessage && !(shared.isString(format) || isMessageFunction(format))) {\n    if (enableDefaultMsg) {\n      format = defaultMsgOrKey;\n      cacheBaseKey = format;\n    }\n  }\n  // checking message format and target locale\n  if (!resolvedMessage && (!(shared.isString(format) || isMessageFunction(format)) || !shared.isString(targetLocale))) {\n    return unresolving ? NOT_REOSLVED : key;\n  }\n  // setup compile error detecting\n  let occurred = false;\n  const errorDetector = () => {\n    occurred = true;\n  };\n  // compile message format\n  const msg = !isMessageFunction(format) ? compileMessageFormat(context, key, targetLocale, format, cacheBaseKey, errorDetector) : format;\n  // if occurred compile error, return the message format\n  if (occurred) {\n    return format;\n  }\n  // evaluate message with context\n  const ctxOptions = getMessageContextOptions(context, targetLocale, message, options);\n  const msgContext = createMessageContext(ctxOptions);\n  const messaged = evaluateMessage(context, msg, msgContext);\n  // if use post translation option, proceed it with handler\n  const ret = postTranslation ? postTranslation(messaged, key) : messaged;\n  return ret;\n}\nfunction escapeParams(options) {\n  if (shared.isArray(options.list)) {\n    options.list = options.list.map(item => shared.isString(item) ? shared.escapeHtml(item) : item);\n  } else if (shared.isObject(options.named)) {\n    Object.keys(options.named).forEach(key => {\n      if (shared.isString(options.named[key])) {\n        options.named[key] = shared.escapeHtml(options.named[key]);\n      }\n    });\n  }\n}\nfunction resolveMessageFormat(context, key, locale, fallbackLocale, fallbackWarn, missingWarn) {\n  const {\n    messages,\n    onWarn,\n    messageResolver: resolveValue,\n    localeFallbacker\n  } = context;\n  const locales = localeFallbacker(context, fallbackLocale, locale); // eslint-disable-line @typescript-eslint/no-explicit-any\n  let message = {};\n  let targetLocale;\n  let format = null;\n  const type = 'translate';\n  for (let i = 0; i < locales.length; i++) {\n    targetLocale = locales[i];\n    message = messages[targetLocale] || {};\n    if ((format = resolveValue(message, key)) === null) {\n      // if null, resolve with object key path\n      format = message[key]; // eslint-disable-line @typescript-eslint/no-explicit-any\n    }\n\n    if (shared.isString(format) || shared.isFunction(format)) break;\n    const missingRet = handleMissing(context,\n    // eslint-disable-line @typescript-eslint/no-explicit-any\n    key, targetLocale, missingWarn, type);\n    if (missingRet !== key) {\n      format = missingRet;\n    }\n  }\n  return [format, targetLocale, message];\n}\nfunction compileMessageFormat(context, key, targetLocale, format, cacheBaseKey, errorDetector) {\n  const {\n    messageCompiler,\n    warnHtmlMessage\n  } = context;\n  if (isMessageFunction(format)) {\n    const msg = format;\n    msg.locale = msg.locale || targetLocale;\n    msg.key = msg.key || key;\n    return msg;\n  }\n  if (messageCompiler == null) {\n    const msg = () => format;\n    msg.locale = targetLocale;\n    msg.key = key;\n    return msg;\n  }\n  const msg = messageCompiler(format, getCompileOptions(context, targetLocale, cacheBaseKey, format, warnHtmlMessage, errorDetector));\n  msg.locale = targetLocale;\n  msg.key = key;\n  msg.source = format;\n  return msg;\n}\nfunction evaluateMessage(context, msg, msgCtx) {\n  const messaged = msg(msgCtx);\n  return messaged;\n}\n/** @internal */\nfunction parseTranslateArgs(...args) {\n  const [arg1, arg2, arg3] = args;\n  const options = {};\n  if (!shared.isString(arg1) && !shared.isNumber(arg1) && !isMessageFunction(arg1)) {\n    throw createCoreError(CoreErrorCodes.INVALID_ARGUMENT);\n  }\n  // prettier-ignore\n  const key = shared.isNumber(arg1) ? String(arg1) : isMessageFunction(arg1) ? arg1 : arg1;\n  if (shared.isNumber(arg2)) {\n    options.plural = arg2;\n  } else if (shared.isString(arg2)) {\n    options.default = arg2;\n  } else if (shared.isPlainObject(arg2) && !shared.isEmptyObject(arg2)) {\n    options.named = arg2;\n  } else if (shared.isArray(arg2)) {\n    options.list = arg2;\n  }\n  if (shared.isNumber(arg3)) {\n    options.plural = arg3;\n  } else if (shared.isString(arg3)) {\n    options.default = arg3;\n  } else if (shared.isPlainObject(arg3)) {\n    shared.assign(options, arg3);\n  }\n  return [key, options];\n}\nfunction getCompileOptions(context, locale, key, source, warnHtmlMessage, errorDetector) {\n  return {\n    warnHtmlMessage,\n    onError: err => {\n      errorDetector && errorDetector(err);\n      {\n        throw err;\n      }\n    },\n    onCacheKey: source => shared.generateFormatCacheKey(locale, key, source)\n  };\n}\nfunction getMessageContextOptions(context, locale, message, options) {\n  const {\n    modifiers,\n    pluralRules,\n    messageResolver: resolveValue,\n    fallbackLocale,\n    fallbackWarn,\n    missingWarn,\n    fallbackContext\n  } = context;\n  const resolveMessage = key => {\n    let val = resolveValue(message, key);\n    // fallback to root context\n    if (val == null && fallbackContext) {\n      const [,, message] = resolveMessageFormat(fallbackContext, key, locale, fallbackLocale, fallbackWarn, missingWarn);\n      val = resolveValue(message, key);\n    }\n    if (shared.isString(val)) {\n      let occurred = false;\n      const errorDetector = () => {\n        occurred = true;\n      };\n      const msg = compileMessageFormat(context, key, locale, val, key, errorDetector);\n      return !occurred ? msg : NOOP_MESSAGE_FUNCTION;\n    } else if (isMessageFunction(val)) {\n      return val;\n    } else {\n      // TODO: should be implemented warning message\n      return NOOP_MESSAGE_FUNCTION;\n    }\n  };\n  const ctxOptions = {\n    locale,\n    modifiers,\n    pluralRules,\n    messages: resolveMessage\n  };\n  if (context.processor) {\n    ctxOptions.processor = context.processor;\n  }\n  if (options.list) {\n    ctxOptions.list = options.list;\n  }\n  if (options.named) {\n    ctxOptions.named = options.named;\n  }\n  if (shared.isNumber(options.plural)) {\n    ctxOptions.pluralIndex = options.plural;\n  }\n  return ctxOptions;\n}\n\n// implementation of `datetime` function\nfunction datetime(context, ...args) {\n  const {\n    datetimeFormats,\n    unresolving,\n    fallbackLocale,\n    onWarn,\n    localeFallbacker\n  } = context;\n  const {\n    __datetimeFormatters\n  } = context;\n  const [key, value, options, overrides] = parseDateTimeArgs(...args);\n  const missingWarn = shared.isBoolean(options.missingWarn) ? options.missingWarn : context.missingWarn;\n  shared.isBoolean(options.fallbackWarn) ? options.fallbackWarn : context.fallbackWarn;\n  const part = !!options.part;\n  const locale = shared.isString(options.locale) ? options.locale : context.locale;\n  const locales = localeFallbacker(context,\n  // eslint-disable-line @typescript-eslint/no-explicit-any\n  fallbackLocale, locale);\n  if (!shared.isString(key) || key === '') {\n    return new Intl.DateTimeFormat(locale, overrides).format(value);\n  }\n  // resolve format\n  let datetimeFormat = {};\n  let targetLocale;\n  let format = null;\n  const type = 'datetime format';\n  for (let i = 0; i < locales.length; i++) {\n    targetLocale = locales[i];\n    datetimeFormat = datetimeFormats[targetLocale] || {};\n    format = datetimeFormat[key];\n    if (shared.isPlainObject(format)) break;\n    handleMissing(context, key, targetLocale, missingWarn, type); // eslint-disable-line @typescript-eslint/no-explicit-any\n  }\n  // checking format and target locale\n  if (!shared.isPlainObject(format) || !shared.isString(targetLocale)) {\n    return unresolving ? NOT_REOSLVED : key;\n  }\n  let id = `${targetLocale}__${key}`;\n  if (!shared.isEmptyObject(overrides)) {\n    id = `${id}__${JSON.stringify(overrides)}`;\n  }\n  let formatter = __datetimeFormatters.get(id);\n  if (!formatter) {\n    formatter = new Intl.DateTimeFormat(targetLocale, shared.assign({}, format, overrides));\n    __datetimeFormatters.set(id, formatter);\n  }\n  return !part ? formatter.format(value) : formatter.formatToParts(value);\n}\n/** @internal */\nconst DATETIME_FORMAT_OPTIONS_KEYS = ['localeMatcher', 'weekday', 'era', 'year', 'month', 'day', 'hour', 'minute', 'second', 'timeZoneName', 'formatMatcher', 'hour12', 'timeZone', 'dateStyle', 'timeStyle', 'calendar', 'dayPeriod', 'numberingSystem', 'hourCycle', 'fractionalSecondDigits'];\n/** @internal */\nfunction parseDateTimeArgs(...args) {\n  const [arg1, arg2, arg3, arg4] = args;\n  const options = {};\n  let overrides = {};\n  let value;\n  if (shared.isString(arg1)) {\n    // Only allow ISO strings - other date formats are often supported,\n    // but may cause different results in different browsers.\n    const matches = arg1.match(/(\\d{4}-\\d{2}-\\d{2})(T|\\s)?(.*)/);\n    if (!matches) {\n      throw createCoreError(CoreErrorCodes.INVALID_ISO_DATE_ARGUMENT);\n    }\n    // Some browsers can not parse the iso datetime separated by space,\n    // this is a compromise solution by replace the 'T'/' ' with 'T'\n    const dateTime = matches[3] ? matches[3].trim().startsWith('T') ? `${matches[1].trim()}${matches[3].trim()}` : `${matches[1].trim()}T${matches[3].trim()}` : matches[1].trim();\n    value = new Date(dateTime);\n    try {\n      // This will fail if the date is not valid\n      value.toISOString();\n    } catch (e) {\n      throw createCoreError(CoreErrorCodes.INVALID_ISO_DATE_ARGUMENT);\n    }\n  } else if (shared.isDate(arg1)) {\n    if (isNaN(arg1.getTime())) {\n      throw createCoreError(CoreErrorCodes.INVALID_DATE_ARGUMENT);\n    }\n    value = arg1;\n  } else if (shared.isNumber(arg1)) {\n    value = arg1;\n  } else {\n    throw createCoreError(CoreErrorCodes.INVALID_ARGUMENT);\n  }\n  if (shared.isString(arg2)) {\n    options.key = arg2;\n  } else if (shared.isPlainObject(arg2)) {\n    Object.keys(arg2).forEach(key => {\n      if (DATETIME_FORMAT_OPTIONS_KEYS.includes(key)) {\n        overrides[key] = arg2[key];\n      } else {\n        options[key] = arg2[key];\n      }\n    });\n  }\n  if (shared.isString(arg3)) {\n    options.locale = arg3;\n  } else if (shared.isPlainObject(arg3)) {\n    overrides = arg3;\n  }\n  if (shared.isPlainObject(arg4)) {\n    overrides = arg4;\n  }\n  return [options.key || '', value, options, overrides];\n}\n/** @internal */\nfunction clearDateTimeFormat(ctx, locale, format) {\n  const context = ctx;\n  for (const key in format) {\n    const id = `${locale}__${key}`;\n    if (!context.__datetimeFormatters.has(id)) {\n      continue;\n    }\n    context.__datetimeFormatters.delete(id);\n  }\n}\n\n// implementation of `number` function\nfunction number(context, ...args) {\n  const {\n    numberFormats,\n    unresolving,\n    fallbackLocale,\n    onWarn,\n    localeFallbacker\n  } = context;\n  const {\n    __numberFormatters\n  } = context;\n  const [key, value, options, overrides] = parseNumberArgs(...args);\n  const missingWarn = shared.isBoolean(options.missingWarn) ? options.missingWarn : context.missingWarn;\n  shared.isBoolean(options.fallbackWarn) ? options.fallbackWarn : context.fallbackWarn;\n  const part = !!options.part;\n  const locale = shared.isString(options.locale) ? options.locale : context.locale;\n  const locales = localeFallbacker(context,\n  // eslint-disable-line @typescript-eslint/no-explicit-any\n  fallbackLocale, locale);\n  if (!shared.isString(key) || key === '') {\n    return new Intl.NumberFormat(locale, overrides).format(value);\n  }\n  // resolve format\n  let numberFormat = {};\n  let targetLocale;\n  let format = null;\n  const type = 'number format';\n  for (let i = 0; i < locales.length; i++) {\n    targetLocale = locales[i];\n    numberFormat = numberFormats[targetLocale] || {};\n    format = numberFormat[key];\n    if (shared.isPlainObject(format)) break;\n    handleMissing(context, key, targetLocale, missingWarn, type); // eslint-disable-line @typescript-eslint/no-explicit-any\n  }\n  // checking format and target locale\n  if (!shared.isPlainObject(format) || !shared.isString(targetLocale)) {\n    return unresolving ? NOT_REOSLVED : key;\n  }\n  let id = `${targetLocale}__${key}`;\n  if (!shared.isEmptyObject(overrides)) {\n    id = `${id}__${JSON.stringify(overrides)}`;\n  }\n  let formatter = __numberFormatters.get(id);\n  if (!formatter) {\n    formatter = new Intl.NumberFormat(targetLocale, shared.assign({}, format, overrides));\n    __numberFormatters.set(id, formatter);\n  }\n  return !part ? formatter.format(value) : formatter.formatToParts(value);\n}\n/** @internal */\nconst NUMBER_FORMAT_OPTIONS_KEYS = ['localeMatcher', 'style', 'currency', 'currencyDisplay', 'currencySign', 'useGrouping', 'minimumIntegerDigits', 'minimumFractionDigits', 'maximumFractionDigits', 'minimumSignificantDigits', 'maximumSignificantDigits', 'compactDisplay', 'notation', 'signDisplay', 'unit', 'unitDisplay', 'roundingMode', 'roundingPriority', 'roundingIncrement', 'trailingZeroDisplay'];\n/** @internal */\nfunction parseNumberArgs(...args) {\n  const [arg1, arg2, arg3, arg4] = args;\n  const options = {};\n  let overrides = {};\n  if (!shared.isNumber(arg1)) {\n    throw createCoreError(CoreErrorCodes.INVALID_ARGUMENT);\n  }\n  const value = arg1;\n  if (shared.isString(arg2)) {\n    options.key = arg2;\n  } else if (shared.isPlainObject(arg2)) {\n    Object.keys(arg2).forEach(key => {\n      if (NUMBER_FORMAT_OPTIONS_KEYS.includes(key)) {\n        overrides[key] = arg2[key];\n      } else {\n        options[key] = arg2[key];\n      }\n    });\n  }\n  if (shared.isString(arg3)) {\n    options.locale = arg3;\n  } else if (shared.isPlainObject(arg3)) {\n    overrides = arg3;\n  }\n  if (shared.isPlainObject(arg4)) {\n    overrides = arg4;\n  }\n  return [options.key || '', value, options, overrides];\n}\n/** @internal */\nfunction clearNumberFormat(ctx, locale, format) {\n  const context = ctx;\n  for (const key in format) {\n    const id = `${locale}__${key}`;\n    if (!context.__numberFormatters.has(id)) {\n      continue;\n    }\n    context.__numberFormatters.delete(id);\n  }\n}\nexports.CompileErrorCodes = messageCompiler.CompileErrorCodes;\nexports.createCompileError = messageCompiler.createCompileError;\nexports.CoreErrorCodes = CoreErrorCodes;\nexports.CoreWarnCodes = CoreWarnCodes;\nexports.DATETIME_FORMAT_OPTIONS_KEYS = DATETIME_FORMAT_OPTIONS_KEYS;\nexports.DEFAULT_LOCALE = DEFAULT_LOCALE;\nexports.DEFAULT_MESSAGE_DATA_TYPE = DEFAULT_MESSAGE_DATA_TYPE;\nexports.MISSING_RESOLVE_VALUE = MISSING_RESOLVE_VALUE;\nexports.NOT_REOSLVED = NOT_REOSLVED;\nexports.NUMBER_FORMAT_OPTIONS_KEYS = NUMBER_FORMAT_OPTIONS_KEYS;\nexports.VERSION = VERSION;\nexports.clearCompileCache = clearCompileCache;\nexports.clearDateTimeFormat = clearDateTimeFormat;\nexports.clearNumberFormat = clearNumberFormat;\nexports.compileToFunction = compileToFunction;\nexports.createCoreContext = createCoreContext;\nexports.createCoreError = createCoreError;\nexports.createMessageContext = createMessageContext;\nexports.datetime = datetime;\nexports.fallbackWithLocaleChain = fallbackWithLocaleChain;\nexports.fallbackWithSimple = fallbackWithSimple;\nexports.getAdditionalMeta = getAdditionalMeta;\nexports.getDevToolsHook = getDevToolsHook;\nexports.getFallbackContext = getFallbackContext;\nexports.getWarnMessage = getWarnMessage;\nexports.handleMissing = handleMissing;\nexports.initI18nDevTools = initI18nDevTools;\nexports.isMessageFunction = isMessageFunction;\nexports.isTranslateFallbackWarn = isTranslateFallbackWarn;\nexports.isTranslateMissingWarn = isTranslateMissingWarn;\nexports.number = number;\nexports.parse = parse;\nexports.parseDateTimeArgs = parseDateTimeArgs;\nexports.parseNumberArgs = parseNumberArgs;\nexports.parseTranslateArgs = parseTranslateArgs;\nexports.registerLocaleFallbacker = registerLocaleFallbacker;\nexports.registerMessageCompiler = registerMessageCompiler;\nexports.registerMessageResolver = registerMessageResolver;\nexports.resolveValue = resolveValue;\nexports.resolveWithKeyValue = resolveWithKeyValue;\nexports.setAdditionalMeta = setAdditionalMeta;\nexports.setDevToolsHook = setDevToolsHook;\nexports.setFallbackContext = setFallbackContext;\nexports.translate = translate;\nexports.translateDevTools = translateDevTools;\nexports.updateFallbackLocale = updateFallbackLocale;","map":{"version":3,"names":["Object","defineProperty","exports","value","messageCompiler","require","shared","devtoolsIf","pathStateMachine","literalValueRE","isLiteral","exp","test","stripQuotes","str","a","charCodeAt","b","length","slice","getPathCharType","ch","undefined","code","formatSubPath","path","trimmed","trim","charAt","isNaN","parseInt","parse","keys","index","mode","subPathDepth","c","key","newChar","type","transition","action","typeMap","actions","push","maybeUnescapeQuote","nextChar","cache","Map","resolveWithKeyValue","obj","isObject","resolveValue","hit","get","set","len","last","i","val","DEFAULT_MODIFIER","DEFAULT_MESSAGE","ctx","DEFAULT_MESSAGE_DATA_TYPE","DEFAULT_NORMALIZE","values","join","DEFAULT_INTERPOLATE","toDisplayString","pluralDefault","choice","choicesLength","Math","abs","min","getPluralIndex","options","isNumber","pluralIndex","named","count","n","normalizeNamed","props","createMessageContext","locale","pluralRule","pluralRules","isString","isFunction","orgPluralRule","plural","messages","_list","list","_named","message","msg","parent","_modifier","name","modifiers","normalize","isPlainObject","processor","interpolate","linked","args","arg1","arg2","modifier","isArray","devtools","setDevToolsHook","hook","getDevToolsHook","initI18nDevTools","i18n","version","meta","emit","IntlifyDevToolsHooks","I18nInit","timestamp","Date","now","translateDevTools","createDevToolsHook","FunctionTranslate","payloads","CoreWarnCodes","NOT_FOUND_KEY","FALLBACK_TO_TRANSLATE","CANNOT_FORMAT_NUMBER","FALLBACK_TO_NUMBER_FORMAT","CANNOT_FORMAT_DATE","FALLBACK_TO_DATE_FORMAT","__EXTEND_POINT__","warnMessages","getWarnMessage","format","fallbackWithSimple","fallback","start","Set","fallbackWithLocaleChain","startLocale","DEFAULT_LOCALE","context","__localeChainCache","chain","block","appendBlockToChain","defaults","blocks","follow","isBoolean","appendLocaleToChain","tokens","split","target","appendItemToChain","splice","includes","replace","VERSION","NOT_REOSLVED","MISSING_RESOLVE_VALUE","capitalize","toLocaleUpperCase","substr","getDefaultLinkedModifiers","upper","toUpperCase","children","lower","toLowerCase","_compiler","registerMessageCompiler","compiler","_resolver","registerMessageResolver","resolver","_fallbacker","registerLocaleFallbacker","fallbacker","_additionalMeta","setAdditionalMeta","getAdditionalMeta","_fallbackContext","setFallbackContext","getFallbackContext","_cid","createCoreContext","fallbackLocale","datetimeFormats","numberFormats","assign","missing","missingWarn","isRegExp","fallbackWarn","fallbackFormat","unresolving","postTranslation","warnHtmlMessage","escapeParameter","messageResolver","localeFallbacker","fallbackContext","onWarn","warn","internalOptions","__datetimeFormatters","__numberFormatters","__meta","cid","isTranslateFallbackWarn","RegExp","isTranslateMissingWarn","handleMissing","ret","updateFallbackLocale","defaultOnCacheKey","source","compileCache","create","clearCompileCache","compileToFunction","onCacheKey","cached","occurred","onError","defaultOnError","err","baseCompile","Function","CompileErrorCodes","inc","CoreErrorCodes","INVALID_ARGUMENT","INVALID_DATE_ARGUMENT","INVALID_ISO_DATE_ARGUMENT","createCoreError","createCompileError","NOOP_MESSAGE_FUNCTION","isMessageFunction","translate","parseTranslateArgs","resolvedMessage","defaultMsgOrKey","default","enableDefaultMsg","escapeParams","formatScope","targetLocale","resolveMessageFormat","cacheBaseKey","errorDetector","compileMessageFormat","ctxOptions","getMessageContextOptions","msgContext","messaged","evaluateMessage","map","item","escapeHtml","forEach","locales","missingRet","getCompileOptions","msgCtx","arg3","String","isEmptyObject","generateFormatCacheKey","resolveMessage","datetime","overrides","parseDateTimeArgs","part","Intl","DateTimeFormat","datetimeFormat","id","JSON","stringify","formatter","formatToParts","DATETIME_FORMAT_OPTIONS_KEYS","arg4","matches","match","dateTime","startsWith","toISOString","e","isDate","getTime","clearDateTimeFormat","has","delete","number","parseNumberArgs","NumberFormat","numberFormat","NUMBER_FORMAT_OPTIONS_KEYS","clearNumberFormat"],"sources":["/Users/yanbinru/Desktop/代码/github/vue3-knowledge/node_modules/@intlify/core-base/dist/core-base.cjs.prod.js"],"sourcesContent":["/*!\n  * core-base v9.2.2\n  * (c) 2022 kazuya kawaguchi\n  * Released under the MIT License.\n  */\n'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar messageCompiler = require('@intlify/message-compiler');\nvar shared = require('@intlify/shared');\nvar devtoolsIf = require('@intlify/devtools-if');\n\nconst pathStateMachine =  [];\r\npathStateMachine[0 /* BEFORE_PATH */] = {\r\n    [\"w\" /* WORKSPACE */]: [0 /* BEFORE_PATH */],\r\n    [\"i\" /* IDENT */]: [3 /* IN_IDENT */, 0 /* APPEND */],\r\n    [\"[\" /* LEFT_BRACKET */]: [4 /* IN_SUB_PATH */],\r\n    [\"o\" /* END_OF_FAIL */]: [7 /* AFTER_PATH */]\r\n};\r\npathStateMachine[1 /* IN_PATH */] = {\r\n    [\"w\" /* WORKSPACE */]: [1 /* IN_PATH */],\r\n    [\".\" /* DOT */]: [2 /* BEFORE_IDENT */],\r\n    [\"[\" /* LEFT_BRACKET */]: [4 /* IN_SUB_PATH */],\r\n    [\"o\" /* END_OF_FAIL */]: [7 /* AFTER_PATH */]\r\n};\r\npathStateMachine[2 /* BEFORE_IDENT */] = {\r\n    [\"w\" /* WORKSPACE */]: [2 /* BEFORE_IDENT */],\r\n    [\"i\" /* IDENT */]: [3 /* IN_IDENT */, 0 /* APPEND */],\r\n    [\"0\" /* ZERO */]: [3 /* IN_IDENT */, 0 /* APPEND */]\r\n};\r\npathStateMachine[3 /* IN_IDENT */] = {\r\n    [\"i\" /* IDENT */]: [3 /* IN_IDENT */, 0 /* APPEND */],\r\n    [\"0\" /* ZERO */]: [3 /* IN_IDENT */, 0 /* APPEND */],\r\n    [\"w\" /* WORKSPACE */]: [1 /* IN_PATH */, 1 /* PUSH */],\r\n    [\".\" /* DOT */]: [2 /* BEFORE_IDENT */, 1 /* PUSH */],\r\n    [\"[\" /* LEFT_BRACKET */]: [4 /* IN_SUB_PATH */, 1 /* PUSH */],\r\n    [\"o\" /* END_OF_FAIL */]: [7 /* AFTER_PATH */, 1 /* PUSH */]\r\n};\r\npathStateMachine[4 /* IN_SUB_PATH */] = {\r\n    [\"'\" /* SINGLE_QUOTE */]: [5 /* IN_SINGLE_QUOTE */, 0 /* APPEND */],\r\n    [\"\\\"\" /* DOUBLE_QUOTE */]: [6 /* IN_DOUBLE_QUOTE */, 0 /* APPEND */],\r\n    [\"[\" /* LEFT_BRACKET */]: [\r\n        4 /* IN_SUB_PATH */,\r\n        2 /* INC_SUB_PATH_DEPTH */\r\n    ],\r\n    [\"]\" /* RIGHT_BRACKET */]: [1 /* IN_PATH */, 3 /* PUSH_SUB_PATH */],\r\n    [\"o\" /* END_OF_FAIL */]: 8 /* ERROR */,\r\n    [\"l\" /* ELSE */]: [4 /* IN_SUB_PATH */, 0 /* APPEND */]\r\n};\r\npathStateMachine[5 /* IN_SINGLE_QUOTE */] = {\r\n    [\"'\" /* SINGLE_QUOTE */]: [4 /* IN_SUB_PATH */, 0 /* APPEND */],\r\n    [\"o\" /* END_OF_FAIL */]: 8 /* ERROR */,\r\n    [\"l\" /* ELSE */]: [5 /* IN_SINGLE_QUOTE */, 0 /* APPEND */]\r\n};\r\npathStateMachine[6 /* IN_DOUBLE_QUOTE */] = {\r\n    [\"\\\"\" /* DOUBLE_QUOTE */]: [4 /* IN_SUB_PATH */, 0 /* APPEND */],\r\n    [\"o\" /* END_OF_FAIL */]: 8 /* ERROR */,\r\n    [\"l\" /* ELSE */]: [6 /* IN_DOUBLE_QUOTE */, 0 /* APPEND */]\r\n};\r\n/**\r\n * Check if an expression is a literal value.\r\n */\r\nconst literalValueRE = /^\\s?(?:true|false|-?[\\d.]+|'[^']*'|\"[^\"]*\")\\s?$/;\r\nfunction isLiteral(exp) {\r\n    return literalValueRE.test(exp);\r\n}\r\n/**\r\n * Strip quotes from a string\r\n */\r\nfunction stripQuotes(str) {\r\n    const a = str.charCodeAt(0);\r\n    const b = str.charCodeAt(str.length - 1);\r\n    return a === b && (a === 0x22 || a === 0x27) ? str.slice(1, -1) : str;\r\n}\r\n/**\r\n * Determine the type of a character in a keypath.\r\n */\r\nfunction getPathCharType(ch) {\r\n    if (ch === undefined || ch === null) {\r\n        return \"o\" /* END_OF_FAIL */;\r\n    }\r\n    const code = ch.charCodeAt(0);\r\n    switch (code) {\r\n        case 0x5b: // [\r\n        case 0x5d: // ]\r\n        case 0x2e: // .\r\n        case 0x22: // \"\r\n        case 0x27: // '\r\n            return ch;\r\n        case 0x5f: // _\r\n        case 0x24: // $\r\n        case 0x2d: // -\r\n            return \"i\" /* IDENT */;\r\n        case 0x09: // Tab (HT)\r\n        case 0x0a: // Newline (LF)\r\n        case 0x0d: // Return (CR)\r\n        case 0xa0: // No-break space (NBSP)\r\n        case 0xfeff: // Byte Order Mark (BOM)\r\n        case 0x2028: // Line Separator (LS)\r\n        case 0x2029: // Paragraph Separator (PS)\r\n            return \"w\" /* WORKSPACE */;\r\n    }\r\n    return \"i\" /* IDENT */;\r\n}\r\n/**\r\n * Format a subPath, return its plain form if it is\r\n * a literal string or number. Otherwise prepend the\r\n * dynamic indicator (*).\r\n */\r\nfunction formatSubPath(path) {\r\n    const trimmed = path.trim();\r\n    // invalid leading 0\r\n    if (path.charAt(0) === '0' && isNaN(parseInt(path))) {\r\n        return false;\r\n    }\r\n    return isLiteral(trimmed)\r\n        ? stripQuotes(trimmed)\r\n        : \"*\" /* ASTARISK */ + trimmed;\r\n}\r\n/**\r\n * Parse a string path into an array of segments\r\n */\r\nfunction parse(path) {\r\n    const keys = [];\r\n    let index = -1;\r\n    let mode = 0 /* BEFORE_PATH */;\r\n    let subPathDepth = 0;\r\n    let c;\r\n    let key; // eslint-disable-line\r\n    let newChar;\r\n    let type;\r\n    let transition;\r\n    let action;\r\n    let typeMap;\r\n    const actions = [];\r\n    actions[0 /* APPEND */] = () => {\r\n        if (key === undefined) {\r\n            key = newChar;\r\n        }\r\n        else {\r\n            key += newChar;\r\n        }\r\n    };\r\n    actions[1 /* PUSH */] = () => {\r\n        if (key !== undefined) {\r\n            keys.push(key);\r\n            key = undefined;\r\n        }\r\n    };\r\n    actions[2 /* INC_SUB_PATH_DEPTH */] = () => {\r\n        actions[0 /* APPEND */]();\r\n        subPathDepth++;\r\n    };\r\n    actions[3 /* PUSH_SUB_PATH */] = () => {\r\n        if (subPathDepth > 0) {\r\n            subPathDepth--;\r\n            mode = 4 /* IN_SUB_PATH */;\r\n            actions[0 /* APPEND */]();\r\n        }\r\n        else {\r\n            subPathDepth = 0;\r\n            if (key === undefined) {\r\n                return false;\r\n            }\r\n            key = formatSubPath(key);\r\n            if (key === false) {\r\n                return false;\r\n            }\r\n            else {\r\n                actions[1 /* PUSH */]();\r\n            }\r\n        }\r\n    };\r\n    function maybeUnescapeQuote() {\r\n        const nextChar = path[index + 1];\r\n        if ((mode === 5 /* IN_SINGLE_QUOTE */ &&\r\n            nextChar === \"'\" /* SINGLE_QUOTE */) ||\r\n            (mode === 6 /* IN_DOUBLE_QUOTE */ &&\r\n                nextChar === \"\\\"\" /* DOUBLE_QUOTE */)) {\r\n            index++;\r\n            newChar = '\\\\' + nextChar;\r\n            actions[0 /* APPEND */]();\r\n            return true;\r\n        }\r\n    }\r\n    while (mode !== null) {\r\n        index++;\r\n        c = path[index];\r\n        if (c === '\\\\' && maybeUnescapeQuote()) {\r\n            continue;\r\n        }\r\n        type = getPathCharType(c);\r\n        typeMap = pathStateMachine[mode];\r\n        transition = typeMap[type] || typeMap[\"l\" /* ELSE */] || 8 /* ERROR */;\r\n        // check parse error\r\n        if (transition === 8 /* ERROR */) {\r\n            return;\r\n        }\r\n        mode = transition[0];\r\n        if (transition[1] !== undefined) {\r\n            action = actions[transition[1]];\r\n            if (action) {\r\n                newChar = c;\r\n                if (action() === false) {\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n        // check parse finish\r\n        if (mode === 7 /* AFTER_PATH */) {\r\n            return keys;\r\n        }\r\n    }\r\n}\r\n// path token cache\r\nconst cache = new Map();\r\n/**\r\n * key-value message resolver\r\n *\r\n * @remarks\r\n * Resolves messages with the key-value structure. Note that messages with a hierarchical structure such as objects cannot be resolved\r\n *\r\n * @param obj - A target object to be resolved with path\r\n * @param path - A {@link Path | path} to resolve the value of message\r\n *\r\n * @returns A resolved {@link PathValue | path value}\r\n *\r\n * @VueI18nGeneral\r\n */\r\nfunction resolveWithKeyValue(obj, path) {\r\n    return shared.isObject(obj) ? obj[path] : null;\r\n}\r\n/**\r\n * message resolver\r\n *\r\n * @remarks\r\n * Resolves messages. messages with a hierarchical structure such as objects can be resolved. This resolver is used in VueI18n as default.\r\n *\r\n * @param obj - A target object to be resolved with path\r\n * @param path - A {@link Path | path} to resolve the value of message\r\n *\r\n * @returns A resolved {@link PathValue | path value}\r\n *\r\n * @VueI18nGeneral\r\n */\r\nfunction resolveValue(obj, path) {\r\n    // check object\r\n    if (!shared.isObject(obj)) {\r\n        return null;\r\n    }\r\n    // parse path\r\n    let hit = cache.get(path);\r\n    if (!hit) {\r\n        hit = parse(path);\r\n        if (hit) {\r\n            cache.set(path, hit);\r\n        }\r\n    }\r\n    // check hit\r\n    if (!hit) {\r\n        return null;\r\n    }\r\n    // resolve path value\r\n    const len = hit.length;\r\n    let last = obj;\r\n    let i = 0;\r\n    while (i < len) {\r\n        const val = last[hit[i]];\r\n        if (val === undefined) {\r\n            return null;\r\n        }\r\n        last = val;\r\n        i++;\r\n    }\r\n    return last;\r\n}\n\nconst DEFAULT_MODIFIER = (str) => str;\r\nconst DEFAULT_MESSAGE = (ctx) => ''; // eslint-disable-line\r\nconst DEFAULT_MESSAGE_DATA_TYPE = 'text';\r\nconst DEFAULT_NORMALIZE = (values) => values.length === 0 ? '' : values.join('');\r\nconst DEFAULT_INTERPOLATE = shared.toDisplayString;\r\nfunction pluralDefault(choice, choicesLength) {\r\n    choice = Math.abs(choice);\r\n    if (choicesLength === 2) {\r\n        // prettier-ignore\r\n        return choice\r\n            ? choice > 1\r\n                ? 1\r\n                : 0\r\n            : 1;\r\n    }\r\n    return choice ? Math.min(choice, 2) : 0;\r\n}\r\nfunction getPluralIndex(options) {\r\n    // prettier-ignore\r\n    const index = shared.isNumber(options.pluralIndex)\r\n        ? options.pluralIndex\r\n        : -1;\r\n    // prettier-ignore\r\n    return options.named && (shared.isNumber(options.named.count) || shared.isNumber(options.named.n))\r\n        ? shared.isNumber(options.named.count)\r\n            ? options.named.count\r\n            : shared.isNumber(options.named.n)\r\n                ? options.named.n\r\n                : index\r\n        : index;\r\n}\r\nfunction normalizeNamed(pluralIndex, props) {\r\n    if (!props.count) {\r\n        props.count = pluralIndex;\r\n    }\r\n    if (!props.n) {\r\n        props.n = pluralIndex;\r\n    }\r\n}\r\nfunction createMessageContext(options = {}) {\r\n    const locale = options.locale;\r\n    const pluralIndex = getPluralIndex(options);\r\n    const pluralRule = shared.isObject(options.pluralRules) &&\r\n        shared.isString(locale) &&\r\n        shared.isFunction(options.pluralRules[locale])\r\n        ? options.pluralRules[locale]\r\n        : pluralDefault;\r\n    const orgPluralRule = shared.isObject(options.pluralRules) &&\r\n        shared.isString(locale) &&\r\n        shared.isFunction(options.pluralRules[locale])\r\n        ? pluralDefault\r\n        : undefined;\r\n    const plural = (messages) => {\r\n        return messages[pluralRule(pluralIndex, messages.length, orgPluralRule)];\r\n    };\r\n    const _list = options.list || [];\r\n    const list = (index) => _list[index];\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    const _named = options.named || {};\r\n    shared.isNumber(options.pluralIndex) && normalizeNamed(pluralIndex, _named);\r\n    const named = (key) => _named[key];\r\n    function message(key) {\r\n        // prettier-ignore\r\n        const msg = shared.isFunction(options.messages)\r\n            ? options.messages(key)\r\n            : shared.isObject(options.messages)\r\n                ? options.messages[key]\r\n                : false;\r\n        return !msg\r\n            ? options.parent\r\n                ? options.parent.message(key) // resolve from parent messages\r\n                : DEFAULT_MESSAGE\r\n            : msg;\r\n    }\r\n    const _modifier = (name) => options.modifiers\r\n        ? options.modifiers[name]\r\n        : DEFAULT_MODIFIER;\r\n    const normalize = shared.isPlainObject(options.processor) && shared.isFunction(options.processor.normalize)\r\n        ? options.processor.normalize\r\n        : DEFAULT_NORMALIZE;\r\n    const interpolate = shared.isPlainObject(options.processor) &&\r\n        shared.isFunction(options.processor.interpolate)\r\n        ? options.processor.interpolate\r\n        : DEFAULT_INTERPOLATE;\r\n    const type = shared.isPlainObject(options.processor) && shared.isString(options.processor.type)\r\n        ? options.processor.type\r\n        : DEFAULT_MESSAGE_DATA_TYPE;\r\n    const linked = (key, ...args) => {\r\n        const [arg1, arg2] = args;\r\n        let type = 'text';\r\n        let modifier = '';\r\n        if (args.length === 1) {\r\n            if (shared.isObject(arg1)) {\r\n                modifier = arg1.modifier || modifier;\r\n                type = arg1.type || type;\r\n            }\r\n            else if (shared.isString(arg1)) {\r\n                modifier = arg1 || modifier;\r\n            }\r\n        }\r\n        else if (args.length === 2) {\r\n            if (shared.isString(arg1)) {\r\n                modifier = arg1 || modifier;\r\n            }\r\n            if (shared.isString(arg2)) {\r\n                type = arg2 || type;\r\n            }\r\n        }\r\n        let msg = message(key)(ctx);\r\n        // The message in vnode resolved with linked are returned as an array by processor.nomalize\r\n        if (type === 'vnode' && shared.isArray(msg) && modifier) {\r\n            msg = msg[0];\r\n        }\r\n        return modifier ? _modifier(modifier)(msg, type) : msg;\r\n    };\r\n    const ctx = {\r\n        [\"list\" /* LIST */]: list,\r\n        [\"named\" /* NAMED */]: named,\r\n        [\"plural\" /* PLURAL */]: plural,\r\n        [\"linked\" /* LINKED */]: linked,\r\n        [\"message\" /* MESSAGE */]: message,\r\n        [\"type\" /* TYPE */]: type,\r\n        [\"interpolate\" /* INTERPOLATE */]: interpolate,\r\n        [\"normalize\" /* NORMALIZE */]: normalize\r\n    };\r\n    return ctx;\r\n}\n\nlet devtools = null;\r\nfunction setDevToolsHook(hook) {\r\n    devtools = hook;\r\n}\r\nfunction getDevToolsHook() {\r\n    return devtools;\r\n}\r\nfunction initI18nDevTools(i18n, version, meta) {\r\n    // TODO: queue if devtools is undefined\r\n    devtools &&\r\n        devtools.emit(devtoolsIf.IntlifyDevToolsHooks.I18nInit, {\r\n            timestamp: Date.now(),\r\n            i18n,\r\n            version,\r\n            meta\r\n        });\r\n}\r\nconst translateDevTools = /* #__PURE__*/ createDevToolsHook(devtoolsIf.IntlifyDevToolsHooks.FunctionTranslate);\r\nfunction createDevToolsHook(hook) {\r\n    return (payloads) => devtools && devtools.emit(hook, payloads);\r\n}\n\nconst CoreWarnCodes = {\r\n    NOT_FOUND_KEY: 1,\r\n    FALLBACK_TO_TRANSLATE: 2,\r\n    CANNOT_FORMAT_NUMBER: 3,\r\n    FALLBACK_TO_NUMBER_FORMAT: 4,\r\n    CANNOT_FORMAT_DATE: 5,\r\n    FALLBACK_TO_DATE_FORMAT: 6,\r\n    __EXTEND_POINT__: 7\r\n};\r\n/** @internal */\r\nconst warnMessages = {\r\n    [CoreWarnCodes.NOT_FOUND_KEY]: `Not found '{key}' key in '{locale}' locale messages.`,\r\n    [CoreWarnCodes.FALLBACK_TO_TRANSLATE]: `Fall back to translate '{key}' key with '{target}' locale.`,\r\n    [CoreWarnCodes.CANNOT_FORMAT_NUMBER]: `Cannot format a number value due to not supported Intl.NumberFormat.`,\r\n    [CoreWarnCodes.FALLBACK_TO_NUMBER_FORMAT]: `Fall back to number format '{key}' key with '{target}' locale.`,\r\n    [CoreWarnCodes.CANNOT_FORMAT_DATE]: `Cannot format a date value due to not supported Intl.DateTimeFormat.`,\r\n    [CoreWarnCodes.FALLBACK_TO_DATE_FORMAT]: `Fall back to datetime format '{key}' key with '{target}' locale.`\r\n};\r\nfunction getWarnMessage(code, ...args) {\r\n    return shared.format(warnMessages[code], ...args);\r\n}\n\n/**\r\n * Fallback with simple implemenation\r\n *\r\n * @remarks\r\n * A fallback locale function implemented with a simple fallback algorithm.\r\n *\r\n * Basically, it returns the value as specified in the `fallbackLocale` props, and is processed with the fallback inside intlify.\r\n *\r\n * @param ctx - A {@link CoreContext | context}\r\n * @param fallback - A {@link FallbackLocale | fallback locale}\r\n * @param start - A starting {@link Locale | locale}\r\n *\r\n * @returns Fallback locales\r\n *\r\n * @VueI18nGeneral\r\n */\r\nfunction fallbackWithSimple(ctx, fallback, start // eslint-disable-line @typescript-eslint/no-unused-vars\r\n) {\r\n    // prettier-ignore\r\n    return [...new Set([\r\n            start,\r\n            ...(shared.isArray(fallback)\r\n                ? fallback\r\n                : shared.isObject(fallback)\r\n                    ? Object.keys(fallback)\r\n                    : shared.isString(fallback)\r\n                        ? [fallback]\r\n                        : [start])\r\n        ])];\r\n}\r\n/**\r\n * Fallback with locale chain\r\n *\r\n * @remarks\r\n * A fallback locale function implemented with a fallback chain algorithm. It's used in VueI18n as default.\r\n *\r\n * @param ctx - A {@link CoreContext | context}\r\n * @param fallback - A {@link FallbackLocale | fallback locale}\r\n * @param start - A starting {@link Locale | locale}\r\n *\r\n * @returns Fallback locales\r\n *\r\n * @VueI18nSee [Fallbacking](../guide/essentials/fallback)\r\n *\r\n * @VueI18nGeneral\r\n */\r\nfunction fallbackWithLocaleChain(ctx, fallback, start) {\r\n    const startLocale = shared.isString(start) ? start : DEFAULT_LOCALE;\r\n    const context = ctx;\r\n    if (!context.__localeChainCache) {\r\n        context.__localeChainCache = new Map();\r\n    }\r\n    let chain = context.__localeChainCache.get(startLocale);\r\n    if (!chain) {\r\n        chain = [];\r\n        // first block defined by start\r\n        let block = [start];\r\n        // while any intervening block found\r\n        while (shared.isArray(block)) {\r\n            block = appendBlockToChain(chain, block, fallback);\r\n        }\r\n        // prettier-ignore\r\n        // last block defined by default\r\n        const defaults = shared.isArray(fallback) || !shared.isPlainObject(fallback)\r\n            ? fallback\r\n            : fallback['default']\r\n                ? fallback['default']\r\n                : null;\r\n        // convert defaults to array\r\n        block = shared.isString(defaults) ? [defaults] : defaults;\r\n        if (shared.isArray(block)) {\r\n            appendBlockToChain(chain, block, false);\r\n        }\r\n        context.__localeChainCache.set(startLocale, chain);\r\n    }\r\n    return chain;\r\n}\r\nfunction appendBlockToChain(chain, block, blocks) {\r\n    let follow = true;\r\n    for (let i = 0; i < block.length && shared.isBoolean(follow); i++) {\r\n        const locale = block[i];\r\n        if (shared.isString(locale)) {\r\n            follow = appendLocaleToChain(chain, block[i], blocks);\r\n        }\r\n    }\r\n    return follow;\r\n}\r\nfunction appendLocaleToChain(chain, locale, blocks) {\r\n    let follow;\r\n    const tokens = locale.split('-');\r\n    do {\r\n        const target = tokens.join('-');\r\n        follow = appendItemToChain(chain, target, blocks);\r\n        tokens.splice(-1, 1);\r\n    } while (tokens.length && follow === true);\r\n    return follow;\r\n}\r\nfunction appendItemToChain(chain, target, blocks) {\r\n    let follow = false;\r\n    if (!chain.includes(target)) {\r\n        follow = true;\r\n        if (target) {\r\n            follow = target[target.length - 1] !== '!';\r\n            const locale = target.replace(/!/g, '');\r\n            chain.push(locale);\r\n            if ((shared.isArray(blocks) || shared.isPlainObject(blocks)) &&\r\n                blocks[locale] // eslint-disable-line @typescript-eslint/no-explicit-any\r\n            ) {\r\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                follow = blocks[locale];\r\n            }\r\n        }\r\n    }\r\n    return follow;\r\n}\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\r\n/**\r\n * Intlify core-base version\r\n * @internal\r\n */\r\nconst VERSION = '9.2.2';\r\nconst NOT_REOSLVED = -1;\r\nconst DEFAULT_LOCALE = 'en-US';\r\nconst MISSING_RESOLVE_VALUE = '';\r\nconst capitalize = (str) => `${str.charAt(0).toLocaleUpperCase()}${str.substr(1)}`;\r\nfunction getDefaultLinkedModifiers() {\r\n    return {\r\n        upper: (val, type) => {\r\n            // prettier-ignore\r\n            return type === 'text' && shared.isString(val)\r\n                ? val.toUpperCase()\r\n                : type === 'vnode' && shared.isObject(val) && '__v_isVNode' in val\r\n                    ? val.children.toUpperCase()\r\n                    : val;\r\n        },\r\n        lower: (val, type) => {\r\n            // prettier-ignore\r\n            return type === 'text' && shared.isString(val)\r\n                ? val.toLowerCase()\r\n                : type === 'vnode' && shared.isObject(val) && '__v_isVNode' in val\r\n                    ? val.children.toLowerCase()\r\n                    : val;\r\n        },\r\n        capitalize: (val, type) => {\r\n            // prettier-ignore\r\n            return (type === 'text' && shared.isString(val)\r\n                ? capitalize(val)\r\n                : type === 'vnode' && shared.isObject(val) && '__v_isVNode' in val\r\n                    ? capitalize(val.children)\r\n                    : val);\r\n        }\r\n    };\r\n}\r\nlet _compiler;\r\nfunction registerMessageCompiler(compiler) {\r\n    _compiler = compiler;\r\n}\r\nlet _resolver;\r\n/**\r\n * Register the message resolver\r\n *\r\n * @param resolver - A {@link MessageResolver} function\r\n *\r\n * @VueI18nGeneral\r\n */\r\nfunction registerMessageResolver(resolver) {\r\n    _resolver = resolver;\r\n}\r\nlet _fallbacker;\r\n/**\r\n * Register the locale fallbacker\r\n *\r\n * @param fallbacker - A {@link LocaleFallbacker} function\r\n *\r\n * @VueI18nGeneral\r\n */\r\nfunction registerLocaleFallbacker(fallbacker) {\r\n    _fallbacker = fallbacker;\r\n}\r\n// Additional Meta for Intlify DevTools\r\nlet _additionalMeta = null;\r\nconst setAdditionalMeta =  (meta) => {\r\n    _additionalMeta = meta;\r\n};\r\nconst getAdditionalMeta =  () => _additionalMeta;\r\nlet _fallbackContext = null;\r\nconst setFallbackContext = (context) => {\r\n    _fallbackContext = context;\r\n};\r\nconst getFallbackContext = () => _fallbackContext;\r\n// ID for CoreContext\r\nlet _cid = 0;\r\nfunction createCoreContext(options = {}) {\r\n    // setup options\r\n    const version = shared.isString(options.version) ? options.version : VERSION;\r\n    const locale = shared.isString(options.locale) ? options.locale : DEFAULT_LOCALE;\r\n    const fallbackLocale = shared.isArray(options.fallbackLocale) ||\r\n        shared.isPlainObject(options.fallbackLocale) ||\r\n        shared.isString(options.fallbackLocale) ||\r\n        options.fallbackLocale === false\r\n        ? options.fallbackLocale\r\n        : locale;\r\n    const messages = shared.isPlainObject(options.messages)\r\n        ? options.messages\r\n        : { [locale]: {} };\r\n    const datetimeFormats = shared.isPlainObject(options.datetimeFormats)\r\n            ? options.datetimeFormats\r\n            : { [locale]: {} }\r\n        ;\r\n    const numberFormats = shared.isPlainObject(options.numberFormats)\r\n            ? options.numberFormats\r\n            : { [locale]: {} }\r\n        ;\r\n    const modifiers = shared.assign({}, options.modifiers || {}, getDefaultLinkedModifiers());\r\n    const pluralRules = options.pluralRules || {};\r\n    const missing = shared.isFunction(options.missing) ? options.missing : null;\r\n    const missingWarn = shared.isBoolean(options.missingWarn) || shared.isRegExp(options.missingWarn)\r\n        ? options.missingWarn\r\n        : true;\r\n    const fallbackWarn = shared.isBoolean(options.fallbackWarn) || shared.isRegExp(options.fallbackWarn)\r\n        ? options.fallbackWarn\r\n        : true;\r\n    const fallbackFormat = !!options.fallbackFormat;\r\n    const unresolving = !!options.unresolving;\r\n    const postTranslation = shared.isFunction(options.postTranslation)\r\n        ? options.postTranslation\r\n        : null;\r\n    const processor = shared.isPlainObject(options.processor) ? options.processor : null;\r\n    const warnHtmlMessage = shared.isBoolean(options.warnHtmlMessage)\r\n        ? options.warnHtmlMessage\r\n        : true;\r\n    const escapeParameter = !!options.escapeParameter;\r\n    const messageCompiler = shared.isFunction(options.messageCompiler)\r\n        ? options.messageCompiler\r\n        : _compiler;\r\n    const messageResolver = shared.isFunction(options.messageResolver)\r\n        ? options.messageResolver\r\n        : _resolver || resolveWithKeyValue;\r\n    const localeFallbacker = shared.isFunction(options.localeFallbacker)\r\n        ? options.localeFallbacker\r\n        : _fallbacker || fallbackWithSimple;\r\n    const fallbackContext = shared.isObject(options.fallbackContext)\r\n        ? options.fallbackContext\r\n        : undefined;\r\n    const onWarn = shared.isFunction(options.onWarn) ? options.onWarn : shared.warn;\r\n    // setup internal options\r\n    const internalOptions = options;\r\n    const __datetimeFormatters = shared.isObject(internalOptions.__datetimeFormatters)\r\n            ? internalOptions.__datetimeFormatters\r\n            : new Map()\r\n        ;\r\n    const __numberFormatters = shared.isObject(internalOptions.__numberFormatters)\r\n            ? internalOptions.__numberFormatters\r\n            : new Map()\r\n        ;\r\n    const __meta = shared.isObject(internalOptions.__meta) ? internalOptions.__meta : {};\r\n    _cid++;\r\n    const context = {\r\n        version,\r\n        cid: _cid,\r\n        locale,\r\n        fallbackLocale,\r\n        messages,\r\n        modifiers,\r\n        pluralRules,\r\n        missing,\r\n        missingWarn,\r\n        fallbackWarn,\r\n        fallbackFormat,\r\n        unresolving,\r\n        postTranslation,\r\n        processor,\r\n        warnHtmlMessage,\r\n        escapeParameter,\r\n        messageCompiler,\r\n        messageResolver,\r\n        localeFallbacker,\r\n        fallbackContext,\r\n        onWarn,\r\n        __meta\r\n    };\r\n    {\r\n        context.datetimeFormats = datetimeFormats;\r\n        context.numberFormats = numberFormats;\r\n        context.__datetimeFormatters = __datetimeFormatters;\r\n        context.__numberFormatters = __numberFormatters;\r\n    }\r\n    return context;\r\n}\r\n/** @internal */\r\nfunction isTranslateFallbackWarn(fallback, key) {\r\n    return fallback instanceof RegExp ? fallback.test(key) : fallback;\r\n}\r\n/** @internal */\r\nfunction isTranslateMissingWarn(missing, key) {\r\n    return missing instanceof RegExp ? missing.test(key) : missing;\r\n}\r\n/** @internal */\r\nfunction handleMissing(context, key, locale, missingWarn, type) {\r\n    const { missing, onWarn } = context;\r\n    if (missing !== null) {\r\n        const ret = missing(context, locale, key, type);\r\n        return shared.isString(ret) ? ret : key;\r\n    }\r\n    else {\r\n        return key;\r\n    }\r\n}\r\n/** @internal */\r\nfunction updateFallbackLocale(ctx, locale, fallback) {\r\n    const context = ctx;\r\n    context.__localeChainCache = new Map();\r\n    ctx.localeFallbacker(ctx, fallback, locale);\r\n}\r\n/* eslint-enable @typescript-eslint/no-explicit-any */\n\nconst defaultOnCacheKey = (source) => source;\r\nlet compileCache = Object.create(null);\r\nfunction clearCompileCache() {\r\n    compileCache = Object.create(null);\r\n}\r\nfunction compileToFunction(source, options = {}) {\r\n    {\r\n        // check caches\r\n        const onCacheKey = options.onCacheKey || defaultOnCacheKey;\r\n        const key = onCacheKey(source);\r\n        const cached = compileCache[key];\r\n        if (cached) {\r\n            return cached;\r\n        }\r\n        // compile error detecting\r\n        let occurred = false;\r\n        const onError = options.onError || messageCompiler.defaultOnError;\r\n        options.onError = (err) => {\r\n            occurred = true;\r\n            onError(err);\r\n        };\r\n        // compile\r\n        const { code } = messageCompiler.baseCompile(source, options);\r\n        // evaluate function\r\n        const msg = new Function(`return ${code}`)();\r\n        // if occurred compile error, don't cache\r\n        return !occurred ? (compileCache[key] = msg) : msg;\r\n    }\r\n}\n\nlet code = messageCompiler.CompileErrorCodes.__EXTEND_POINT__;\r\nconst inc = () => ++code;\r\nconst CoreErrorCodes = {\r\n    INVALID_ARGUMENT: code,\r\n    INVALID_DATE_ARGUMENT: inc(),\r\n    INVALID_ISO_DATE_ARGUMENT: inc(),\r\n    __EXTEND_POINT__: inc() // 18\r\n};\r\nfunction createCoreError(code) {\r\n    return messageCompiler.createCompileError(code, null, undefined);\r\n}\r\n/** @internal */\r\n({\r\n    [CoreErrorCodes.INVALID_ARGUMENT]: 'Invalid arguments',\r\n    [CoreErrorCodes.INVALID_DATE_ARGUMENT]: 'The date provided is an invalid Date object.' +\r\n        'Make sure your Date represents a valid date.',\r\n    [CoreErrorCodes.INVALID_ISO_DATE_ARGUMENT]: 'The argument provided is not a valid ISO date string'\r\n});\n\nconst NOOP_MESSAGE_FUNCTION = () => '';\r\nconst isMessageFunction = (val) => shared.isFunction(val);\r\n// implementation of `translate` function\r\nfunction translate(context, ...args) {\r\n    const { fallbackFormat, postTranslation, unresolving, messageCompiler, fallbackLocale, messages } = context;\r\n    const [key, options] = parseTranslateArgs(...args);\r\n    const missingWarn = shared.isBoolean(options.missingWarn)\r\n        ? options.missingWarn\r\n        : context.missingWarn;\r\n    const fallbackWarn = shared.isBoolean(options.fallbackWarn)\r\n        ? options.fallbackWarn\r\n        : context.fallbackWarn;\r\n    const escapeParameter = shared.isBoolean(options.escapeParameter)\r\n        ? options.escapeParameter\r\n        : context.escapeParameter;\r\n    const resolvedMessage = !!options.resolvedMessage;\r\n    // prettier-ignore\r\n    const defaultMsgOrKey = shared.isString(options.default) || shared.isBoolean(options.default) // default by function option\r\n        ? !shared.isBoolean(options.default)\r\n            ? options.default\r\n            : (!messageCompiler ? () => key : key)\r\n        : fallbackFormat // default by `fallbackFormat` option\r\n            ? (!messageCompiler ? () => key : key)\r\n            : '';\r\n    const enableDefaultMsg = fallbackFormat || defaultMsgOrKey !== '';\r\n    const locale = shared.isString(options.locale) ? options.locale : context.locale;\r\n    // escape params\r\n    escapeParameter && escapeParams(options);\r\n    // resolve message format\r\n    // eslint-disable-next-line prefer-const\r\n    let [formatScope, targetLocale, message] = !resolvedMessage\r\n        ? resolveMessageFormat(context, key, locale, fallbackLocale, fallbackWarn, missingWarn)\r\n        : [\r\n            key,\r\n            locale,\r\n            messages[locale] || {}\r\n        ];\r\n    // NOTE:\r\n    //  Fix to work around `ssrTransfrom` bug in Vite.\r\n    //  https://github.com/vitejs/vite/issues/4306\r\n    //  To get around this, use temporary variables.\r\n    //  https://github.com/nuxt/framework/issues/1461#issuecomment-954606243\r\n    let format = formatScope;\r\n    // if you use default message, set it as message format!\r\n    let cacheBaseKey = key;\r\n    if (!resolvedMessage &&\r\n        !(shared.isString(format) || isMessageFunction(format))) {\r\n        if (enableDefaultMsg) {\r\n            format = defaultMsgOrKey;\r\n            cacheBaseKey = format;\r\n        }\r\n    }\r\n    // checking message format and target locale\r\n    if (!resolvedMessage &&\r\n        (!(shared.isString(format) || isMessageFunction(format)) ||\r\n            !shared.isString(targetLocale))) {\r\n        return unresolving ? NOT_REOSLVED : key;\r\n    }\r\n    // setup compile error detecting\r\n    let occurred = false;\r\n    const errorDetector = () => {\r\n        occurred = true;\r\n    };\r\n    // compile message format\r\n    const msg = !isMessageFunction(format)\r\n        ? compileMessageFormat(context, key, targetLocale, format, cacheBaseKey, errorDetector)\r\n        : format;\r\n    // if occurred compile error, return the message format\r\n    if (occurred) {\r\n        return format;\r\n    }\r\n    // evaluate message with context\r\n    const ctxOptions = getMessageContextOptions(context, targetLocale, message, options);\r\n    const msgContext = createMessageContext(ctxOptions);\r\n    const messaged = evaluateMessage(context, msg, msgContext);\r\n    // if use post translation option, proceed it with handler\r\n    const ret = postTranslation\r\n        ? postTranslation(messaged, key)\r\n        : messaged;\r\n    return ret;\r\n}\r\nfunction escapeParams(options) {\r\n    if (shared.isArray(options.list)) {\r\n        options.list = options.list.map(item => shared.isString(item) ? shared.escapeHtml(item) : item);\r\n    }\r\n    else if (shared.isObject(options.named)) {\r\n        Object.keys(options.named).forEach(key => {\r\n            if (shared.isString(options.named[key])) {\r\n                options.named[key] = shared.escapeHtml(options.named[key]);\r\n            }\r\n        });\r\n    }\r\n}\r\nfunction resolveMessageFormat(context, key, locale, fallbackLocale, fallbackWarn, missingWarn) {\r\n    const { messages, onWarn, messageResolver: resolveValue, localeFallbacker } = context;\r\n    const locales = localeFallbacker(context, fallbackLocale, locale); // eslint-disable-line @typescript-eslint/no-explicit-any\r\n    let message = {};\r\n    let targetLocale;\r\n    let format = null;\r\n    const type = 'translate';\r\n    for (let i = 0; i < locales.length; i++) {\r\n        targetLocale = locales[i];\r\n        message =\r\n            messages[targetLocale] || {};\r\n        if ((format = resolveValue(message, key)) === null) {\r\n            // if null, resolve with object key path\r\n            format = message[key]; // eslint-disable-line @typescript-eslint/no-explicit-any\r\n        }\r\n        if (shared.isString(format) || shared.isFunction(format))\r\n            break;\r\n        const missingRet = handleMissing(context, // eslint-disable-line @typescript-eslint/no-explicit-any\r\n        key, targetLocale, missingWarn, type);\r\n        if (missingRet !== key) {\r\n            format = missingRet;\r\n        }\r\n    }\r\n    return [format, targetLocale, message];\r\n}\r\nfunction compileMessageFormat(context, key, targetLocale, format, cacheBaseKey, errorDetector) {\r\n    const { messageCompiler, warnHtmlMessage } = context;\r\n    if (isMessageFunction(format)) {\r\n        const msg = format;\r\n        msg.locale = msg.locale || targetLocale;\r\n        msg.key = msg.key || key;\r\n        return msg;\r\n    }\r\n    if (messageCompiler == null) {\r\n        const msg = (() => format);\r\n        msg.locale = targetLocale;\r\n        msg.key = key;\r\n        return msg;\r\n    }\r\n    const msg = messageCompiler(format, getCompileOptions(context, targetLocale, cacheBaseKey, format, warnHtmlMessage, errorDetector));\r\n    msg.locale = targetLocale;\r\n    msg.key = key;\r\n    msg.source = format;\r\n    return msg;\r\n}\r\nfunction evaluateMessage(context, msg, msgCtx) {\r\n    const messaged = msg(msgCtx);\r\n    return messaged;\r\n}\r\n/** @internal */\r\nfunction parseTranslateArgs(...args) {\r\n    const [arg1, arg2, arg3] = args;\r\n    const options = {};\r\n    if (!shared.isString(arg1) && !shared.isNumber(arg1) && !isMessageFunction(arg1)) {\r\n        throw createCoreError(CoreErrorCodes.INVALID_ARGUMENT);\r\n    }\r\n    // prettier-ignore\r\n    const key = shared.isNumber(arg1)\r\n        ? String(arg1)\r\n        : isMessageFunction(arg1)\r\n            ? arg1\r\n            : arg1;\r\n    if (shared.isNumber(arg2)) {\r\n        options.plural = arg2;\r\n    }\r\n    else if (shared.isString(arg2)) {\r\n        options.default = arg2;\r\n    }\r\n    else if (shared.isPlainObject(arg2) && !shared.isEmptyObject(arg2)) {\r\n        options.named = arg2;\r\n    }\r\n    else if (shared.isArray(arg2)) {\r\n        options.list = arg2;\r\n    }\r\n    if (shared.isNumber(arg3)) {\r\n        options.plural = arg3;\r\n    }\r\n    else if (shared.isString(arg3)) {\r\n        options.default = arg3;\r\n    }\r\n    else if (shared.isPlainObject(arg3)) {\r\n        shared.assign(options, arg3);\r\n    }\r\n    return [key, options];\r\n}\r\nfunction getCompileOptions(context, locale, key, source, warnHtmlMessage, errorDetector) {\r\n    return {\r\n        warnHtmlMessage,\r\n        onError: (err) => {\r\n            errorDetector && errorDetector(err);\r\n            {\r\n                throw err;\r\n            }\r\n        },\r\n        onCacheKey: (source) => shared.generateFormatCacheKey(locale, key, source)\r\n    };\r\n}\r\nfunction getMessageContextOptions(context, locale, message, options) {\r\n    const { modifiers, pluralRules, messageResolver: resolveValue, fallbackLocale, fallbackWarn, missingWarn, fallbackContext } = context;\r\n    const resolveMessage = (key) => {\r\n        let val = resolveValue(message, key);\r\n        // fallback to root context\r\n        if (val == null && fallbackContext) {\r\n            const [, , message] = resolveMessageFormat(fallbackContext, key, locale, fallbackLocale, fallbackWarn, missingWarn);\r\n            val = resolveValue(message, key);\r\n        }\r\n        if (shared.isString(val)) {\r\n            let occurred = false;\r\n            const errorDetector = () => {\r\n                occurred = true;\r\n            };\r\n            const msg = compileMessageFormat(context, key, locale, val, key, errorDetector);\r\n            return !occurred\r\n                ? msg\r\n                : NOOP_MESSAGE_FUNCTION;\r\n        }\r\n        else if (isMessageFunction(val)) {\r\n            return val;\r\n        }\r\n        else {\r\n            // TODO: should be implemented warning message\r\n            return NOOP_MESSAGE_FUNCTION;\r\n        }\r\n    };\r\n    const ctxOptions = {\r\n        locale,\r\n        modifiers,\r\n        pluralRules,\r\n        messages: resolveMessage\r\n    };\r\n    if (context.processor) {\r\n        ctxOptions.processor = context.processor;\r\n    }\r\n    if (options.list) {\r\n        ctxOptions.list = options.list;\r\n    }\r\n    if (options.named) {\r\n        ctxOptions.named = options.named;\r\n    }\r\n    if (shared.isNumber(options.plural)) {\r\n        ctxOptions.pluralIndex = options.plural;\r\n    }\r\n    return ctxOptions;\r\n}\n\n// implementation of `datetime` function\r\nfunction datetime(context, ...args) {\r\n    const { datetimeFormats, unresolving, fallbackLocale, onWarn, localeFallbacker } = context;\r\n    const { __datetimeFormatters } = context;\r\n    const [key, value, options, overrides] = parseDateTimeArgs(...args);\r\n    const missingWarn = shared.isBoolean(options.missingWarn)\r\n        ? options.missingWarn\r\n        : context.missingWarn;\r\n    shared.isBoolean(options.fallbackWarn)\r\n        ? options.fallbackWarn\r\n        : context.fallbackWarn;\r\n    const part = !!options.part;\r\n    const locale = shared.isString(options.locale) ? options.locale : context.locale;\r\n    const locales = localeFallbacker(context, // eslint-disable-line @typescript-eslint/no-explicit-any\r\n    fallbackLocale, locale);\r\n    if (!shared.isString(key) || key === '') {\r\n        return new Intl.DateTimeFormat(locale, overrides).format(value);\r\n    }\r\n    // resolve format\r\n    let datetimeFormat = {};\r\n    let targetLocale;\r\n    let format = null;\r\n    const type = 'datetime format';\r\n    for (let i = 0; i < locales.length; i++) {\r\n        targetLocale = locales[i];\r\n        datetimeFormat =\r\n            datetimeFormats[targetLocale] || {};\r\n        format = datetimeFormat[key];\r\n        if (shared.isPlainObject(format))\r\n            break;\r\n        handleMissing(context, key, targetLocale, missingWarn, type); // eslint-disable-line @typescript-eslint/no-explicit-any\r\n    }\r\n    // checking format and target locale\r\n    if (!shared.isPlainObject(format) || !shared.isString(targetLocale)) {\r\n        return unresolving ? NOT_REOSLVED : key;\r\n    }\r\n    let id = `${targetLocale}__${key}`;\r\n    if (!shared.isEmptyObject(overrides)) {\r\n        id = `${id}__${JSON.stringify(overrides)}`;\r\n    }\r\n    let formatter = __datetimeFormatters.get(id);\r\n    if (!formatter) {\r\n        formatter = new Intl.DateTimeFormat(targetLocale, shared.assign({}, format, overrides));\r\n        __datetimeFormatters.set(id, formatter);\r\n    }\r\n    return !part ? formatter.format(value) : formatter.formatToParts(value);\r\n}\r\n/** @internal */\r\nconst DATETIME_FORMAT_OPTIONS_KEYS = [\r\n    'localeMatcher',\r\n    'weekday',\r\n    'era',\r\n    'year',\r\n    'month',\r\n    'day',\r\n    'hour',\r\n    'minute',\r\n    'second',\r\n    'timeZoneName',\r\n    'formatMatcher',\r\n    'hour12',\r\n    'timeZone',\r\n    'dateStyle',\r\n    'timeStyle',\r\n    'calendar',\r\n    'dayPeriod',\r\n    'numberingSystem',\r\n    'hourCycle',\r\n    'fractionalSecondDigits'\r\n];\r\n/** @internal */\r\nfunction parseDateTimeArgs(...args) {\r\n    const [arg1, arg2, arg3, arg4] = args;\r\n    const options = {};\r\n    let overrides = {};\r\n    let value;\r\n    if (shared.isString(arg1)) {\r\n        // Only allow ISO strings - other date formats are often supported,\r\n        // but may cause different results in different browsers.\r\n        const matches = arg1.match(/(\\d{4}-\\d{2}-\\d{2})(T|\\s)?(.*)/);\r\n        if (!matches) {\r\n            throw createCoreError(CoreErrorCodes.INVALID_ISO_DATE_ARGUMENT);\r\n        }\r\n        // Some browsers can not parse the iso datetime separated by space,\r\n        // this is a compromise solution by replace the 'T'/' ' with 'T'\r\n        const dateTime = matches[3]\r\n            ? matches[3].trim().startsWith('T')\r\n                ? `${matches[1].trim()}${matches[3].trim()}`\r\n                : `${matches[1].trim()}T${matches[3].trim()}`\r\n            : matches[1].trim();\r\n        value = new Date(dateTime);\r\n        try {\r\n            // This will fail if the date is not valid\r\n            value.toISOString();\r\n        }\r\n        catch (e) {\r\n            throw createCoreError(CoreErrorCodes.INVALID_ISO_DATE_ARGUMENT);\r\n        }\r\n    }\r\n    else if (shared.isDate(arg1)) {\r\n        if (isNaN(arg1.getTime())) {\r\n            throw createCoreError(CoreErrorCodes.INVALID_DATE_ARGUMENT);\r\n        }\r\n        value = arg1;\r\n    }\r\n    else if (shared.isNumber(arg1)) {\r\n        value = arg1;\r\n    }\r\n    else {\r\n        throw createCoreError(CoreErrorCodes.INVALID_ARGUMENT);\r\n    }\r\n    if (shared.isString(arg2)) {\r\n        options.key = arg2;\r\n    }\r\n    else if (shared.isPlainObject(arg2)) {\r\n        Object.keys(arg2).forEach(key => {\r\n            if (DATETIME_FORMAT_OPTIONS_KEYS.includes(key)) {\r\n                overrides[key] = arg2[key];\r\n            }\r\n            else {\r\n                options[key] = arg2[key];\r\n            }\r\n        });\r\n    }\r\n    if (shared.isString(arg3)) {\r\n        options.locale = arg3;\r\n    }\r\n    else if (shared.isPlainObject(arg3)) {\r\n        overrides = arg3;\r\n    }\r\n    if (shared.isPlainObject(arg4)) {\r\n        overrides = arg4;\r\n    }\r\n    return [options.key || '', value, options, overrides];\r\n}\r\n/** @internal */\r\nfunction clearDateTimeFormat(ctx, locale, format) {\r\n    const context = ctx;\r\n    for (const key in format) {\r\n        const id = `${locale}__${key}`;\r\n        if (!context.__datetimeFormatters.has(id)) {\r\n            continue;\r\n        }\r\n        context.__datetimeFormatters.delete(id);\r\n    }\r\n}\n\n// implementation of `number` function\r\nfunction number(context, ...args) {\r\n    const { numberFormats, unresolving, fallbackLocale, onWarn, localeFallbacker } = context;\r\n    const { __numberFormatters } = context;\r\n    const [key, value, options, overrides] = parseNumberArgs(...args);\r\n    const missingWarn = shared.isBoolean(options.missingWarn)\r\n        ? options.missingWarn\r\n        : context.missingWarn;\r\n    shared.isBoolean(options.fallbackWarn)\r\n        ? options.fallbackWarn\r\n        : context.fallbackWarn;\r\n    const part = !!options.part;\r\n    const locale = shared.isString(options.locale) ? options.locale : context.locale;\r\n    const locales = localeFallbacker(context, // eslint-disable-line @typescript-eslint/no-explicit-any\r\n    fallbackLocale, locale);\r\n    if (!shared.isString(key) || key === '') {\r\n        return new Intl.NumberFormat(locale, overrides).format(value);\r\n    }\r\n    // resolve format\r\n    let numberFormat = {};\r\n    let targetLocale;\r\n    let format = null;\r\n    const type = 'number format';\r\n    for (let i = 0; i < locales.length; i++) {\r\n        targetLocale = locales[i];\r\n        numberFormat =\r\n            numberFormats[targetLocale] || {};\r\n        format = numberFormat[key];\r\n        if (shared.isPlainObject(format))\r\n            break;\r\n        handleMissing(context, key, targetLocale, missingWarn, type); // eslint-disable-line @typescript-eslint/no-explicit-any\r\n    }\r\n    // checking format and target locale\r\n    if (!shared.isPlainObject(format) || !shared.isString(targetLocale)) {\r\n        return unresolving ? NOT_REOSLVED : key;\r\n    }\r\n    let id = `${targetLocale}__${key}`;\r\n    if (!shared.isEmptyObject(overrides)) {\r\n        id = `${id}__${JSON.stringify(overrides)}`;\r\n    }\r\n    let formatter = __numberFormatters.get(id);\r\n    if (!formatter) {\r\n        formatter = new Intl.NumberFormat(targetLocale, shared.assign({}, format, overrides));\r\n        __numberFormatters.set(id, formatter);\r\n    }\r\n    return !part ? formatter.format(value) : formatter.formatToParts(value);\r\n}\r\n/** @internal */\r\nconst NUMBER_FORMAT_OPTIONS_KEYS = [\r\n    'localeMatcher',\r\n    'style',\r\n    'currency',\r\n    'currencyDisplay',\r\n    'currencySign',\r\n    'useGrouping',\r\n    'minimumIntegerDigits',\r\n    'minimumFractionDigits',\r\n    'maximumFractionDigits',\r\n    'minimumSignificantDigits',\r\n    'maximumSignificantDigits',\r\n    'compactDisplay',\r\n    'notation',\r\n    'signDisplay',\r\n    'unit',\r\n    'unitDisplay',\r\n    'roundingMode',\r\n    'roundingPriority',\r\n    'roundingIncrement',\r\n    'trailingZeroDisplay'\r\n];\r\n/** @internal */\r\nfunction parseNumberArgs(...args) {\r\n    const [arg1, arg2, arg3, arg4] = args;\r\n    const options = {};\r\n    let overrides = {};\r\n    if (!shared.isNumber(arg1)) {\r\n        throw createCoreError(CoreErrorCodes.INVALID_ARGUMENT);\r\n    }\r\n    const value = arg1;\r\n    if (shared.isString(arg2)) {\r\n        options.key = arg2;\r\n    }\r\n    else if (shared.isPlainObject(arg2)) {\r\n        Object.keys(arg2).forEach(key => {\r\n            if (NUMBER_FORMAT_OPTIONS_KEYS.includes(key)) {\r\n                overrides[key] = arg2[key];\r\n            }\r\n            else {\r\n                options[key] = arg2[key];\r\n            }\r\n        });\r\n    }\r\n    if (shared.isString(arg3)) {\r\n        options.locale = arg3;\r\n    }\r\n    else if (shared.isPlainObject(arg3)) {\r\n        overrides = arg3;\r\n    }\r\n    if (shared.isPlainObject(arg4)) {\r\n        overrides = arg4;\r\n    }\r\n    return [options.key || '', value, options, overrides];\r\n}\r\n/** @internal */\r\nfunction clearNumberFormat(ctx, locale, format) {\r\n    const context = ctx;\r\n    for (const key in format) {\r\n        const id = `${locale}__${key}`;\r\n        if (!context.__numberFormatters.has(id)) {\r\n            continue;\r\n        }\r\n        context.__numberFormatters.delete(id);\r\n    }\r\n}\n\nexports.CompileErrorCodes = messageCompiler.CompileErrorCodes;\nexports.createCompileError = messageCompiler.createCompileError;\nexports.CoreErrorCodes = CoreErrorCodes;\nexports.CoreWarnCodes = CoreWarnCodes;\nexports.DATETIME_FORMAT_OPTIONS_KEYS = DATETIME_FORMAT_OPTIONS_KEYS;\nexports.DEFAULT_LOCALE = DEFAULT_LOCALE;\nexports.DEFAULT_MESSAGE_DATA_TYPE = DEFAULT_MESSAGE_DATA_TYPE;\nexports.MISSING_RESOLVE_VALUE = MISSING_RESOLVE_VALUE;\nexports.NOT_REOSLVED = NOT_REOSLVED;\nexports.NUMBER_FORMAT_OPTIONS_KEYS = NUMBER_FORMAT_OPTIONS_KEYS;\nexports.VERSION = VERSION;\nexports.clearCompileCache = clearCompileCache;\nexports.clearDateTimeFormat = clearDateTimeFormat;\nexports.clearNumberFormat = clearNumberFormat;\nexports.compileToFunction = compileToFunction;\nexports.createCoreContext = createCoreContext;\nexports.createCoreError = createCoreError;\nexports.createMessageContext = createMessageContext;\nexports.datetime = datetime;\nexports.fallbackWithLocaleChain = fallbackWithLocaleChain;\nexports.fallbackWithSimple = fallbackWithSimple;\nexports.getAdditionalMeta = getAdditionalMeta;\nexports.getDevToolsHook = getDevToolsHook;\nexports.getFallbackContext = getFallbackContext;\nexports.getWarnMessage = getWarnMessage;\nexports.handleMissing = handleMissing;\nexports.initI18nDevTools = initI18nDevTools;\nexports.isMessageFunction = isMessageFunction;\nexports.isTranslateFallbackWarn = isTranslateFallbackWarn;\nexports.isTranslateMissingWarn = isTranslateMissingWarn;\nexports.number = number;\nexports.parse = parse;\nexports.parseDateTimeArgs = parseDateTimeArgs;\nexports.parseNumberArgs = parseNumberArgs;\nexports.parseTranslateArgs = parseTranslateArgs;\nexports.registerLocaleFallbacker = registerLocaleFallbacker;\nexports.registerMessageCompiler = registerMessageCompiler;\nexports.registerMessageResolver = registerMessageResolver;\nexports.resolveValue = resolveValue;\nexports.resolveWithKeyValue = resolveWithKeyValue;\nexports.setAdditionalMeta = setAdditionalMeta;\nexports.setDevToolsHook = setDevToolsHook;\nexports.setFallbackContext = setFallbackContext;\nexports.translate = translate;\nexports.translateDevTools = translateDevTools;\nexports.updateFallbackLocale = updateFallbackLocale;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}