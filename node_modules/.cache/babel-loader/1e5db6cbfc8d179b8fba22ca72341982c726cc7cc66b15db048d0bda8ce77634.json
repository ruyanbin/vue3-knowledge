{"ast":null,"code":"import { defineComponent } from 'vue';\nimport registerMixin from '../../../mixins/register-component.mjs';\nvar script = defineComponent({\n  name: \"ElAmapMarkerCluster\",\n  mixins: [registerMixin],\n  props: {\n    points: {\n      type: Array,\n      required: true\n    },\n    gridSize: {\n      type: Number\n    },\n    maxZoom: {\n      type: Number\n    },\n    averageCenter: {\n      type: Boolean,\n      default: true\n    },\n    clusterByZoomChange: {\n      type: Boolean,\n      default: false\n    },\n    styles: {\n      type: Array\n    },\n    renderClusterMarker: {\n      type: Function\n    },\n    renderMarker: {\n      type: Function\n    }\n  },\n  data() {\n    return {\n      converters: {}\n    };\n  },\n  methods: {\n    __initComponent(options) {\n      return new Promise(resolve => {\n        AMap.plugin([\"AMap.MarkerCluster\"], () => {\n          const points = options.points;\n          delete options.points;\n          this.$amapComponent = new AMap.MarkerCluster(this.$parentComponent, points, options);\n          resolve();\n        });\n      });\n    },\n    destroyComponent() {\n      this.$amapComponent.setMap(null);\n      this.$amapComponent = null;\n      this.$parentComponent = null;\n    },\n    __points(value) {\n      if (this.$amapComponent) {\n        this.$amapComponent.setData(value);\n      }\n    }\n  },\n  render() {\n    return null;\n  }\n});\nexport { script as default };","map":{"version":3,"mappings":";;AAIA,aAAeA,eAAgB;EAC7BC,IAAM;EACNC,QAAQ,CAACC;EACTC,KAAO;IACLC,MAAQ;MACNC,IAAM;MACNC,QAAU;IAAA;IAEZC,QAAU;MACRF,IAAM;IAAA;IAERG,OAAS;MACPH,IAAM;IAAA;IAERI,aAAe;MACbJ,IAAM;MACNK,OAAS;IAAA;IAEXC,mBAAqB;MACnBN,IAAM;MACNK,OAAS;IAAA;IAEXE,MAAQ;MACNP,IAAM;IAAA;IAERQ,mBAAqB;MACnBR,IAAM;IAAA;IAERS,YAAc;MACZT,IAAM;IAAA;EAAA;EAGVU,IAAO;IACE;MACLC,UAAY;IAAA;EAAA;EAIhBC,OAAS;IACPC,gBAAgBC,OAAS;MAChB,WAAIC,OAAc,CAACC,OAAY;QAC/BC,YAAO,CAAC,uBAAuB,MAAM;UACxC,MAAMlB,SAASe,OAAQ;UACvB,OAAOA,OAAQ;UACf,KAAKI,iBAAiB,IAAID,KAAKE,aAAc,MAAKC,kBAAkBrB,MAAQ;UAC5EiB;QAAA;MAAA;IAAA;IAINK,gBAAmB;MAEjB,KAAKH,eAAeI,MAAO;MAC3B,KAAKJ,cAAiB;MACtB,KAAKE,gBAAmB;IAAA;IAE1BG,SAASC,KAAO;MACd,IAAI,KAAKN,cAAgB;QACvB,KAAKA,eAAeO,OAAQ;MAAA;IAAA;EAAA;EAIlCC,MAAS;IACA;EAAA;AAAA","names":["defineComponent","name","mixins","registerMixin","props","points","type","required","gridSize","maxZoom","averageCenter","default","clusterByZoomChange","styles","renderClusterMarker","renderMarker","data","converters","methods","__initComponent","options","Promise","resolve","AMap","$amapComponent","MarkerCluster","$parentComponent","destroyComponent","setMap","__points","value","setData","render"],"sources":["../../../../../../src/packages/marker/MarkerCluster/MarkerCluster.vue"],"sourcesContent":["<script lang=\"ts\">\r\nimport {defineComponent} from \"vue\";\r\nimport registerMixin from '../../../mixins/register-component';\r\n\r\nexport default defineComponent({\r\n  name: 'ElAmapMarkerCluster',\r\n  mixins: [registerMixin],\r\n  props: {\r\n    points: {\r\n      type: Array,\r\n      required: true\r\n    }, // 需要进行聚合显示的点数据\r\n    gridSize: {\r\n      type: Number\r\n    }, // 聚合计算时网格的像素大小，默认60\r\n    maxZoom: {\r\n      type: Number\r\n    }, // 最大的聚合级别，大于该级别就不进行相应的聚合。默认值为 18，即小于 18 级的级别均进行聚合，18 及以上级别不进行聚合\r\n    averageCenter: {\r\n      type: Boolean,\r\n      default: true\r\n    }, // 聚合点的图标位置是否是所有聚合内点的中心点。默认为 true。数据中如果含有权重值，以权重高的点为中心进行聚合\r\n    clusterByZoomChange: {\r\n      type: Boolean,\r\n      default: false\r\n    }, // 地图缩放过程中是否聚合。默认值 false。\r\n    styles: {\r\n      type: Array\r\n    }, // 指定聚合后的点标记的图标样式，可缺省，缺省时为默认样式\r\n    renderClusterMarker: {\r\n      type: Function\r\n    }, // 该方法用来实现聚合点的自定义绘制，由开发者自己实现，API 将在绘制每个聚合点的时候调用这个方法，可以实现聚合点样式的灵活设定，指定了 renderClusterMarker 后 styles 无效。\r\n    renderMarker: {\r\n      type: Function\r\n    } // 该方法用来实现非聚合点的自定义绘制，由开发者自己实现，API 将在绘制每个非聚合点的时候调用这个方法\r\n  },\r\n  data() {\r\n    return {\r\n      converters: {\r\n      },\r\n    };\r\n  },\r\n  methods: {\r\n    __initComponent(options) {\r\n      return new Promise<void>((resolve) => {\r\n        AMap.plugin(['AMap.MarkerCluster'], () => {\r\n          const points = options.points;\r\n          delete options.points;\r\n          this.$amapComponent = new AMap.MarkerCluster(this.$parentComponent, points, options);\r\n          resolve();\r\n        });\r\n      });\r\n    },\r\n    destroyComponent() {\r\n      // this.$amapComponent.setData([])\r\n      this.$amapComponent.setMap(null);\r\n      this.$amapComponent = null;\r\n      this.$parentComponent = null;\r\n    },\r\n    __points(value) {\r\n      if (this.$amapComponent) {\r\n        this.$amapComponent.setData(value);\r\n      }\r\n    }\r\n  },\r\n  render() {\r\n    return null;\r\n  }\r\n});\r\n</script>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}