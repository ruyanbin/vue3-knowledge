{"ast":null,"code":"function isMapInstance(instance) {\n  if (!instance) {\n    return false;\n  }\n  return instance instanceof AMap.Map;\n}\nfunction isOverlayGroupInstance(instance) {\n  if (!instance) {\n    return false;\n  }\n  return instance instanceof AMap.OverlayGroup;\n}\nfunction isIndoorMapInstance(instance) {\n  if (!instance) {\n    return false;\n  }\n  return instance instanceof AMap.IndoorMap;\n}\nfunction isLabelsLayerInstance(instance) {\n  if (!instance) {\n    return false;\n  }\n  return instance instanceof AMap.LabelsLayer;\n}\nfunction isVectorLayerInstance(instance) {\n  if (!instance) {\n    return false;\n  }\n  return instance instanceof AMap.VectorLayer;\n}\nfunction convertEventToLowerCase(functionName) {\n  if (!functionName || functionName.length < 4) {\n    return functionName;\n  }\n  const func = functionName.substring(3, functionName.length);\n  const firstLetter = functionName[2].toLowerCase();\n  return firstLetter + func;\n}\nconst eventReg = /^on[A-Z]+/;\nfunction loadScript(url, callback) {\n  if (!url) {\n    throw new Error(\"\\u8BF7\\u4F20\\u5165url\");\n  }\n  const script = document.createElement(\"script\");\n  script.type = \"text/javascript\";\n  script.async = true;\n  script.defer = true;\n  script.src = url;\n  document.body.appendChild(script);\n  if (callback) {\n    script.addEventListener(\"load\", () => {\n      callback();\n    });\n  }\n}\nfunction convertLnglat(lnglat) {\n  if (Array.isArray(lnglat)) {\n    return lnglat.map(convertLnglat);\n  }\n  return lnglat.toArray();\n}\nexport { convertEventToLowerCase, convertLnglat, eventReg, isIndoorMapInstance, isLabelsLayerInstance, isMapInstance, isOverlayGroupInstance, isVectorLayerInstance, loadScript };","map":{"version":3,"mappings":"AAKO,uBAAuBA,QAAU;EACtC,IAAI,CAACA,QAAU;IACN;EAAA;EAET,OAAOA,oBAAoBC,IAAK;AAAA;AAQ3B,gCAAgCD,QAAU;EAC/C,IAAI,CAACA,QAAU;IACN;EAAA;EAET,OAAOA,oBAAoBC,IAAK;AAAA;AAQ3B,6BAA6BD,QAAU;EAC5C,IAAI,CAACA,QAAU;IACN;EAAA;EAET,OAAOA,oBAAoBC,IAAK;AAAA;AAQ3B,+BAA+BD,QAAU;EAC9C,IAAI,CAACA,QAAU;IACN;EAAA;EAET,OAAOA,oBAAoBC,IAAK;AAAA;AAQ3B,+BAA+BD,QAAU;EAC9C,IAAI,CAACA,QAAU;IACN;EAAA;EAET,OAAOA,oBAAoBC,IAAK;AAAA;AAQ3B,iCAAiCC,YAAa;EACnD,IAAG,CAACA,gBAAgBA,YAAa,UAAS,CAAE;IACnC;EAAA;EAET,MAAMC,IAAO,gBAAaC,SAAU,IAAGF,YAAa;EAC9C,oBAAcA,aAAa,CAAG;EACpC,OAAOG,WAAc;AAAA;AAGhB,MAAMC,QAAW;AAOjB,oBAAoBC,KAAKC,QAAS;EACvC,IAAG,CAACD,GAAI;IACN,MAAM,IAAIE,KAAM;EAAA;EAEZ,eAASC,SAASC,aAAc;EACtCC,OAAOC,IAAO;EACdD,OAAOE,KAAQ;EACfF,OAAOG,KAAQ;EACfH,OAAOI,GAAM;EACbN,SAASO,KAAKC,WAAY;EAC1B,IAAGV,QAAS;IACHI,wBAAiB,QAAO,MAAM;MACnCJ;IAAA;EAAA;AAAA;AAKC,uBAAuBW,MAAO;EAChC,UAAMC,QAAQD,MAAQ;IACvB,OAAOA,OAAOE,GAAI;EAAA;EAEpB,OAAOF,MAAO;AAAA","names":["instance","AMap","functionName","func","substring","firstLetter","eventReg","url","callback","Error","document","createElement","script","type","async","defer","src","body","appendChild","lnglat","isArray","map"],"sources":["../../../../src/utils/util.js"],"sourcesContent":["/**\r\n * 判断对象是不是map实例对象\r\n * @param instance\r\n * @returns {string|boolean}\r\n */\r\nexport function isMapInstance(instance) {\r\n  if (!instance) {\r\n    return false;\r\n  }\r\n  return instance instanceof AMap.Map;\r\n}\r\n\r\n/**\r\n * 判断对象是不是OverlayGroup实例对象\r\n * @param instance\r\n * @returns {string|boolean}\r\n */\r\nexport function isOverlayGroupInstance(instance) {\r\n  if (!instance) {\r\n    return false;\r\n  }\r\n  return instance instanceof AMap.OverlayGroup;\r\n}\r\n\r\n/**\r\n * 判断对象是不是IndoorMap实例对象\r\n * @param instance\r\n * @returns {string|boolean}\r\n */\r\nexport function isIndoorMapInstance(instance) {\r\n  if (!instance) {\r\n    return false;\r\n  }\r\n  return instance instanceof AMap.IndoorMap;\r\n}\r\n\r\n/**\r\n * 判断对象是不是LabelsLayer实例对象\r\n * @param instance\r\n * @returns {string|boolean}\r\n */\r\nexport function isLabelsLayerInstance(instance) {\r\n  if (!instance) {\r\n    return false;\r\n  }\r\n  return instance instanceof AMap.LabelsLayer;\r\n}\r\n\r\n/**\r\n * 判断对象是不是VectorLayer实例对象\r\n * @param instance\r\n * @returns {string|boolean}\r\n */\r\nexport function isVectorLayerInstance(instance) {\r\n  if (!instance) {\r\n    return false;\r\n  }\r\n  return instance instanceof AMap.VectorLayer;\r\n}\r\n\r\n/**\r\n * 将$props中的事件名称转换为地图组件需要的事件名\r\n * @param functionName\r\n * @returns {string|*}\r\n */\r\nexport function convertEventToLowerCase(functionName){\r\n  if(!functionName || functionName.length < 4){\r\n    return functionName;\r\n  }\r\n  const func = functionName.substring(3, functionName.length);\r\n  const firstLetter = functionName[2].toLowerCase();\r\n  return firstLetter + func;\r\n}\r\n\r\nexport const eventReg = /^on[A-Z]+/;\r\n\r\n/**\r\n * 加载JS文件\r\n * @param url\r\n * @param callback\r\n */\r\nexport function loadScript(url, callback){\r\n  if(!url){\r\n    throw new Error('请传入url');\r\n  }\r\n  const script = document.createElement('script');\r\n  script.type = 'text/javascript';\r\n  script.async = true;\r\n  script.defer = true;\r\n  script.src = url;\r\n  document.body.appendChild(script);\r\n  if(callback){\r\n    script.addEventListener('load',() => {\r\n      callback();\r\n    });\r\n  }\r\n}\r\n\r\nexport function convertLnglat(lnglat){\r\n  if(Array.isArray(lnglat)){\r\n    return lnglat.map(convertLnglat);\r\n  }\r\n  return lnglat.toArray();\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}