{"ast":null,"code":"import AMapAPILoader from './amap-api-loader.mjs';\nlet lazyAMapApiLoaderInstance = null;\nconst initAMapApiLoader = config => {\n  if (lazyAMapApiLoaderInstance) return;\n  if (!lazyAMapApiLoaderInstance) {\n    if (config.offline) {\n      lazyAMapApiLoaderInstance = new Promise(resolve => {\n        console.log(\"@vuemap/vue-amap\\u79BB\\u7EBF\\u90E8\\u7F72\");\n        resolve(window.AMap);\n      });\n    } else {\n      lazyAMapApiLoaderInstance = AMapAPILoader(config);\n    }\n  }\n  lazyAMapApiLoaderInstance.then();\n};\nexport { initAMapApiLoader, lazyAMapApiLoaderInstance };","map":{"version":3,"mappings":";AACA,IAAIA,yBAA4B;AAkBnB,0BAAqBC,MAA+B;EAC3D,+BAA2B;EAC/B,IAAI,CAACD,yBAA0B;IAC7B,IAAGC,OAAOC,OAAQ;MACYF,gCAAIG,QAAmBC;QACjDC,QAAQC,GAAI;QACZF,QAASG,MAAe;MAAA;IAAA,CAEvB;MACHP,4BAA4BQ,aAAc;IAAA;EAAA;EAGpBR;AAAA","names":["lazyAMapApiLoaderInstance","config","offline","Promise","resolve","console","log","window","AMapAPILoader"],"sources":["../../../../src/services/injected-amap-api-instance.ts"],"sourcesContent":["import AMapAPILoader from './amap-api-loader';\r\nlet lazyAMapApiLoaderInstance = null as any;\r\n\r\ninterface AMapLoaderOptions {\r\n  key: string, // 申请好的Web端开发者Key，首次调用 load 时必填\r\n  version ?: string, // 指定要加载的 JSAPI 的版本，缺省时默认为 2.0.0\r\n  plugins ?: string[], // 需要使用的的插件列表，如比例尺'AMap.Scale'等\r\n  Loca ?: {\r\n    version ?: string\r\n  },\r\n  AMapUI ?: {\r\n    version?: string; // AMapUI 缺省 1.1\r\n    plugins?: string[]; // 需要加载的 AMapUI ui插件\r\n  };\r\n  serviceHost ?: string\r\n  securityJsCode ?: string\r\n  offline ?: boolean //是否离线部署\r\n}\r\n\r\nexport const initAMapApiLoader = (config : AMapLoaderOptions) => {\r\n  if (lazyAMapApiLoaderInstance) return;\r\n  if (!lazyAMapApiLoaderInstance){\r\n    if(config.offline){\r\n      lazyAMapApiLoaderInstance = new Promise(resolve => {\r\n        console.log('@vuemap/vue-amap离线部署')\r\n        resolve((window as any).AMap);\r\n      });\r\n    }else{\r\n      lazyAMapApiLoaderInstance = AMapAPILoader(config);\r\n    }\r\n  }\r\n  lazyAMapApiLoaderInstance.then();\r\n};\r\nexport {lazyAMapApiLoaderInstance};\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}