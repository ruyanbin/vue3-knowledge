{"ast":null,"code":"import CRender from '@jiaminghi/c-render';\nimport '@jiaminghi/charts/lib/extend/index';\nimport { deepMerge } from '@jiaminghi/charts/lib/util/index';\nimport { deepClone } from '@jiaminghi/c-render/lib/plugin/util';\nexport default {\n  name: 'DvDigitalFlop',\n  props: {\n    config: {\n      type: Object,\n      default: () => ({})\n    }\n  },\n  data() {\n    return {\n      renderer: null,\n      defaultConfig: {\n        /**\n         * @description Number for digital flop\n         * @type {Array<Number>}\n         * @default number = []\n         * @example number = [10]\n         */\n        number: [],\n        /**\n         * @description Content formatter\n         * @type {String}\n         * @default content = ''\n         * @example content = '{nt}个'\n         */\n        content: '',\n        /**\n         * @description Number toFixed\n         * @type {Number}\n         * @default toFixed = 0\n         */\n        toFixed: 0,\n        /**\n         * @description Text align\n         * @type {String}\n         * @default textAlign = 'center'\n         * @example textAlign = 'center' | 'left' | 'right'\n         */\n        textAlign: 'center',\n        /**\n         * @description Text style configuration\n         * @type {Object} {CRender Class Style}\n         */\n        style: {\n          fontSize: 30,\n          fill: '#3de7c9'\n        },\n        /**\n         * @description CRender animationCurve\n         * @type {String}\n         * @default animationCurve = 'easeOutCubic'\n         */\n        animationCurve: 'easeOutCubic',\n        /**\n         * @description CRender animationFrame\n         * @type {String}\n         * @default animationFrame = 50\n         */\n        animationFrame: 50\n      },\n      mergedConfig: null,\n      graph: null\n    };\n  },\n  watch: {\n    config() {\n      const {\n        update\n      } = this;\n      update();\n    }\n  },\n  methods: {\n    init() {\n      const {\n        initRender,\n        mergeConfig,\n        initGraph\n      } = this;\n      initRender();\n      mergeConfig();\n      initGraph();\n    },\n    initRender() {\n      const {\n        $refs\n      } = this;\n      this.renderer = new CRender($refs['digital-flop']);\n    },\n    mergeConfig() {\n      const {\n        defaultConfig,\n        config\n      } = this;\n      this.mergedConfig = deepMerge(deepClone(defaultConfig, true), config || {});\n    },\n    initGraph() {\n      const {\n        getShape,\n        getStyle,\n        renderer,\n        mergedConfig\n      } = this;\n      const {\n        animationCurve,\n        animationFrame\n      } = mergedConfig;\n      const shape = getShape();\n      const style = getStyle();\n      this.graph = renderer.add({\n        name: 'numberText',\n        animationCurve,\n        animationFrame,\n        shape,\n        style\n      });\n    },\n    getShape() {\n      const {\n        number,\n        content,\n        toFixed,\n        textAlign\n      } = this.mergedConfig;\n      const [w, h] = this.renderer.area;\n      const position = [w / 2, h / 2];\n      if (textAlign === 'left') position[0] = 0;\n      if (textAlign === 'right') position[0] = w;\n      return {\n        number,\n        content,\n        toFixed,\n        position\n      };\n    },\n    getStyle() {\n      const {\n        style,\n        textAlign\n      } = this.mergedConfig;\n      return deepMerge(style, {\n        textAlign,\n        textBaseline: 'middle'\n      });\n    },\n    update() {\n      const {\n        mergeConfig,\n        mergeShape,\n        getShape,\n        getStyle,\n        graph,\n        mergedConfig\n      } = this;\n      graph.animationEnd();\n      mergeConfig();\n      if (!graph) return;\n      const {\n        animationCurve,\n        animationFrame\n      } = mergedConfig;\n      const shape = getShape();\n      const style = getStyle();\n      mergeShape(graph, shape);\n      graph.animationCurve = animationCurve;\n      graph.animationFrame = animationFrame;\n      graph.animation('style', style, true);\n      graph.animation('shape', shape);\n    },\n    mergeShape(graph, shape) {\n      const cacheNum = graph.shape.number.length;\n      const shapeNum = shape.number.length;\n      if (cacheNum !== shapeNum) graph.shape.number = shape.number;\n    }\n  },\n  mounted() {\n    const {\n      init\n    } = this;\n    init();\n  }\n};","map":{"version":3,"mappings":"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","names":["CRender","deepMerge","deepClone","name","props","config","type","Object","default","data","renderer","defaultConfig","number","content","toFixed","textAlign","style","fontSize","fill","animationCurve","animationFrame","mergedConfig","graph","watch","update","methods","init","initRender","mergeConfig","initGraph","$refs","getShape","getStyle","shape","add","w","h","area","position","textBaseline","mergeShape","animationEnd","animation","cacheNum","length","shapeNum","mounted"],"sourceRoot":"","sources":["/Users/yanbinru/Desktop/代码/github/vue3-knowledge/node_modules/@jiaminghi/data-view/lib/components/digitalFlop/src/main.vue"],"sourcesContent":["<template>\n  <div class=\"dv-digital-flop\">\n    <canvas ref=\"digital-flop\" />\n  </div>\n</template>\n\n<script>\nimport CRender from '@jiaminghi/c-render'\n\nimport '@jiaminghi/charts/lib/extend/index'\n\nimport { deepMerge } from '@jiaminghi/charts/lib/util/index'\n\nimport { deepClone } from '@jiaminghi/c-render/lib/plugin/util'\n\nexport default {\n  name: 'DvDigitalFlop',\n  props: {\n    config: {\n      type: Object,\n      default: () => ({})\n    }\n  },\n  data () {\n    return {\n      renderer: null,\n\n      defaultConfig: {\n        /**\n         * @description Number for digital flop\n         * @type {Array<Number>}\n         * @default number = []\n         * @example number = [10]\n         */\n        number: [],\n        /**\n         * @description Content formatter\n         * @type {String}\n         * @default content = ''\n         * @example content = '{nt}个'\n         */\n        content: '',\n        /**\n         * @description Number toFixed\n         * @type {Number}\n         * @default toFixed = 0\n         */\n        toFixed: 0,\n        /**\n         * @description Text align\n         * @type {String}\n         * @default textAlign = 'center'\n         * @example textAlign = 'center' | 'left' | 'right'\n         */\n        textAlign: 'center',\n        /**\n         * @description Text style configuration\n         * @type {Object} {CRender Class Style}\n         */\n        style: {\n          fontSize: 30,\n          fill: '#3de7c9'\n        },\n        /**\n         * @description CRender animationCurve\n         * @type {String}\n         * @default animationCurve = 'easeOutCubic'\n         */\n        animationCurve: 'easeOutCubic',\n        /**\n         * @description CRender animationFrame\n         * @type {String}\n         * @default animationFrame = 50\n         */\n        animationFrame: 50\n      },\n\n      mergedConfig: null,\n\n      graph: null\n    }\n  },\n  watch: {\n    config () {\n      const { update } = this\n\n      update()\n    }\n  },\n  methods: {\n    init () {\n      const { initRender, mergeConfig, initGraph } = this\n\n      initRender()\n\n      mergeConfig()\n\n      initGraph()\n    },\n    initRender () {\n      const { $refs } = this\n\n      this.renderer = new CRender($refs['digital-flop'])\n    },\n    mergeConfig () {\n      const { defaultConfig, config } = this\n\n      this.mergedConfig = deepMerge(deepClone(defaultConfig, true), config || {})\n    },\n    initGraph () {\n      const { getShape, getStyle, renderer, mergedConfig } = this\n\n      const { animationCurve, animationFrame } = mergedConfig\n\n      const shape = getShape()\n      const style = getStyle()\n\n      this.graph = renderer.add({\n        name: 'numberText',\n        animationCurve,\n        animationFrame,\n        shape,\n        style\n      })\n    },\n    getShape () {\n      const { number, content, toFixed, textAlign } = this.mergedConfig\n\n      const [w, h] = this.renderer.area\n\n      const position = [w / 2, h / 2]\n\n      if (textAlign === 'left') position[0] = 0\n      if (textAlign === 'right') position[0] = w\n\n      return {\n        number,\n        content,\n        toFixed,\n        position\n      }\n    },\n    getStyle () {\n      const { style, textAlign } = this.mergedConfig\n\n      return deepMerge(style, {\n        textAlign,\n        textBaseline: 'middle'\n      })\n    },\n    update () {\n      const { mergeConfig, mergeShape, getShape, getStyle, graph, mergedConfig } = this\n\n      graph.animationEnd()\n\n      mergeConfig()\n\n      if (!graph) return\n\n      const { animationCurve, animationFrame } = mergedConfig\n\n      const shape = getShape()\n      const style = getStyle()\n\n      mergeShape(graph, shape)\n\n      graph.animationCurve = animationCurve\n      graph.animationFrame = animationFrame\n\n      graph.animation('style', style, true)\n      graph.animation('shape', shape)\n    },\n    mergeShape (graph, shape) {\n      const cacheNum = graph.shape.number.length\n      const shapeNum = shape.number.length\n\n      if (cacheNum !== shapeNum) graph.shape.number = shape.number\n    }\n  },\n  mounted () {\n    const { init } = this\n\n    init()\n  }\n}\n</script>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}