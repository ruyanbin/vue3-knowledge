{"ast":null,"code":"import { defineComponent } from 'vue';\nimport registerMixin from '../../../mixins/register-component.mjs';\nimport locaMixin from '../../../mixins/loca-component.mjs';\nvar script = defineComponent({\n  name: \"ElAmapLocaIcon\",\n  mixins: [registerMixin, locaMixin],\n  props: {},\n  data() {\n    return {\n      converters: {}\n    };\n  },\n  methods: {\n    __initComponent(options) {\n      this.$amapComponent = new Loca.IconLayer(options);\n      this.setSource();\n      this.setStyle();\n      this.$parentComponent.add(this.$amapComponent);\n      this.initComplete();\n    },\n    setStyle() {\n      const defaultStyleValue = {\n        unit: \"px\",\n        icon: \"\",\n        iconSize: [20, 20],\n        rotation: 0,\n        opacity: 1,\n        offset: [0, 0]\n      };\n      const style = Object.assign({}, defaultStyleValue, this[\"defaultStyleValue\"]);\n      const defaultLayerStyle = {\n        unit: style.unit,\n        icon: (index, feature) => {\n          feature.properties = feature.properties || {};\n          return feature.properties.icon === void 0 ? style.icon : feature.properties.icon;\n        },\n        iconSize: (index, feature) => {\n          feature.properties = feature.properties || {};\n          return feature.properties.iconSize === void 0 ? style.iconSize : feature.properties.iconSize;\n        },\n        rotation: (index, feature) => {\n          feature.properties = feature.properties || {};\n          return feature.properties.rotation === void 0 ? style.rotation : feature.properties.rotation;\n        },\n        opacity: (index, feature) => {\n          feature.properties = feature.properties || {};\n          return feature.properties.opacity === void 0 ? style.opacity : feature.properties.opacity;\n        },\n        offset: (index, feature) => {\n          feature.properties = feature.properties || {};\n          return feature.properties.offset === void 0 ? style.offset : feature.properties.offset;\n        }\n      };\n      const layerStyle = Object.assign({}, defaultLayerStyle, this[\"layerStyle\"]);\n      this.$amapComponent.setStyle(layerStyle);\n    }\n  },\n  render() {\n    return null;\n  }\n});\nexport { script as default };","map":{"version":3,"mappings":";;;AAKA,aAAeA,eAAgB;EAC7BC,IAAM;EACNC,QAAQ,CAACC,aAAe;EACxBC,KAAO;EAEPC,IAAO;IACE;MACLC,UAAY;IAAA;EAAA;EAGhBC,OAAS;IACPC,gBAAgBC,OAAS;MAClB,sBAAiB,IAAIC,KAAKC,SAAU;MACpC;MACA;MACA,sBAAiBC,IAAI,IAAK;MAC1B;IAAA;IAEPC,QAAW;MACT,MAAMC,iBAAoB;QACxBC,IAAM;QACNC,IAAM;QACNC,UAAU,CAAC,EAAI;QACfC,QAAU;QACVC,OAAS;QACTC,QAAQ,CAAC,CAAG;MAAA;MAEd,MAAMC,KAAQ,UAAOC,MAAO,KAAIR,mBAAmB,IAAK;MACxD,MAAMS,iBAAoB;QACxBR,MAAMM,KAAM;QACZL,MAAM,CAACQ,OAAOC,OAAY;UAChBA,qBAAaA,QAAQC,UAAc;UAC3C,OAAOD,QAAQC,UAAW,UAAS,SAAYL,KAAM,QAAOI,QAAQC,UAAW;QAAA;QAEjFT,UAAU,CAACO,OAAOC,OAAY;UACpBA,qBAAaA,QAAQC,UAAc;UAC3C,OAAOD,QAAQC,UAAW,cAAa,SAAYL,KAAM,YAAWI,QAAQC,UAAW;QAAA;QAEzFR,UAAU,CAACM,OAAOC,OAAY;UACpBA,qBAAaA,QAAQC,UAAc;UAC3C,OAAOD,QAAQC,UAAW,cAAa,SAAYL,KAAM,YAAWI,QAAQC,UAAW;QAAA;QAEzFP,SAAS,CAACK,OAAOC,OAAY;UACnBA,qBAAaA,QAAQC,UAAc;UAC3C,OAAOD,QAAQC,UAAW,aAAY,SAAYL,KAAM,WAAUI,QAAQC,UAAW;QAAA;QAEvFN,QAAQ,CAACI,OAAOC,OAAY;UAClBA,qBAAaA,QAAQC,UAAc;UAC3C,OAAOD,QAAQC,UAAW,YAAW,SAAYL,KAAM,UAASI,QAAQC,UAAW;QAAA;MAAA;MAGvF,MAAMC,UAAa,UAAOL,MAAO,KAAIC,mBAAmB,IAAK;MAC7D,KAAKK,eAAef,QAAS;IAAA;EAAA;EAGjCgB,MAAQ;IACC;EAAA;AAAA","names":["defineComponent","name","mixins","registerMixin","props","data","converters","methods","__initComponent","options","Loca","IconLayer","add","setStyle","defaultStyleValue","unit","icon","iconSize","rotation","opacity","offset","style","assign","defaultLayerStyle","index","feature","properties","layerStyle","$amapComponent","render"],"sources":["../../../../../../src/packages/loca/IconLayer/IconLayer.vue"],"sourcesContent":["<script lang=\"ts\">\r\nimport {defineComponent} from \"vue\";\r\nimport registerMixin from '../../../mixins/register-component';\r\nimport locaMixin from '../../../mixins/loca-component';\r\n\r\nexport default defineComponent({\r\n  name: 'ElAmapLocaIcon',\r\n  mixins: [registerMixin, locaMixin],\r\n  props: {\r\n  },\r\n  data() {\r\n    return {\r\n      converters: {},\r\n    };\r\n  },\r\n  methods: {\r\n    __initComponent(options) {\r\n      this.$amapComponent = new Loca.IconLayer(options);\r\n      this.setSource();\r\n      this.setStyle();\r\n      this.$parentComponent.add(this.$amapComponent);\r\n      this.initComplete();\r\n    },\r\n    setStyle() {\r\n      const defaultStyleValue = {\r\n        unit: 'px',\r\n        icon: '',\r\n        iconSize: [20, 20],\r\n        rotation: 0,\r\n        opacity: 1,\r\n        offset: [0, 0]\r\n      };\r\n      const style = Object.assign({}, defaultStyleValue, this['defaultStyleValue']);\r\n      const defaultLayerStyle = {\r\n        unit: style.unit,\r\n        icon: (index, feature) => {\r\n          feature.properties = feature.properties || {};\r\n          return feature.properties.icon === undefined ? style.icon : feature.properties.icon;\r\n        },\r\n        iconSize: (index, feature) => {\r\n          feature.properties = feature.properties || {};\r\n          return feature.properties.iconSize === undefined ? style.iconSize : feature.properties.iconSize;\r\n        },\r\n        rotation: (index, feature) => {\r\n          feature.properties = feature.properties || {};\r\n          return feature.properties.rotation === undefined ? style.rotation : feature.properties.rotation;\r\n        },\r\n        opacity: (index, feature) => {\r\n          feature.properties = feature.properties || {};\r\n          return feature.properties.opacity === undefined ? style.opacity : feature.properties.opacity;\r\n        },\r\n        offset: (index, feature) => {\r\n          feature.properties = feature.properties || {};\r\n          return feature.properties.offset === undefined ? style.offset : feature.properties.offset;\r\n        }\r\n      };\r\n      const layerStyle = Object.assign({}, defaultLayerStyle, this['layerStyle']);\r\n      this.$amapComponent.setStyle(layerStyle);\r\n    }\r\n  },\r\n  render(){\r\n    return null;\r\n  }\r\n});\r\n</script>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}