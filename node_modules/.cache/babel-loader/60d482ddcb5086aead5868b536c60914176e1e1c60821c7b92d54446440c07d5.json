{"ast":null,"code":"import autoResize from '../../../mixin/autoResize';\nimport Charts from '@jiaminghi/charts';\nexport default {\n  name: 'DvCharts',\n  mixins: [autoResize],\n  props: {\n    option: {\n      type: Object,\n      default: () => ({})\n    }\n  },\n  data() {\n    const timestamp = Date.now();\n    return {\n      ref: `charts-container-${timestamp}`,\n      chartRef: `chart-${timestamp}`,\n      chart: null\n    };\n  },\n  watch: {\n    option() {\n      let {\n        chart,\n        option\n      } = this;\n      if (!chart) return;\n      if (!option) option = {};\n      chart.setOption(option, true);\n    }\n  },\n  methods: {\n    afterAutoResizeMixinInit() {\n      const {\n        initChart\n      } = this;\n      initChart();\n    },\n    initChart() {\n      const {\n        $refs,\n        chartRef,\n        option\n      } = this;\n      const chart = this.chart = new Charts($refs[chartRef]);\n      if (!option) return;\n      chart.setOption(option);\n    },\n    onResize() {\n      const {\n        chart\n      } = this;\n      if (!chart) return;\n      chart.resize();\n    }\n  }\n};","map":{"version":3,"mappings":"AAOA,OAAOA,UAAS,MAAO,2BAA0B;AAEjD,OAAOC,MAAK,MAAO,mBAAkB;AAErC,eAAe;EACbC,IAAI,EAAE,UAAU;EAChBC,MAAM,EAAE,CAACH,UAAU,CAAC;EACpBI,KAAK,EAAE;IACLC,MAAM,EAAE;MACNC,IAAI,EAAEC,MAAM;MACZC,OAAO,EAAE,OAAO,CAAC,CAAC;IACpB;EACF,CAAC;EACDC,IAAG,GAAK;IACN,MAAMC,SAAQ,GAAIC,IAAI,CAACC,GAAG,EAAC;IAC3B,OAAO;MACLC,GAAG,EAAG,oBAAmBH,SAAU,EAAC;MACpCI,QAAQ,EAAG,SAAQJ,SAAU,EAAC;MAE9BK,KAAK,EAAE;IACT;EACF,CAAC;EACDC,KAAK,EAAE;IACLX,MAAK,GAAK;MACR,IAAI;QAAEU,KAAK;QAAEV;MAAO,IAAI,IAAG;MAE3B,IAAI,CAACU,KAAK,EAAE;MAEZ,IAAI,CAACV,MAAM,EAAEA,MAAK,GAAI,CAAC;MAEvBU,KAAK,CAACE,SAAS,CAACZ,MAAM,EAAE,IAAI;IAC9B;EACF,CAAC;EACDa,OAAO,EAAE;IACPC,wBAAuB,GAAK;MAC1B,MAAM;QAAEC;MAAU,IAAI,IAAG;MAEzBA,SAAS,EAAC;IACZ,CAAC;IACDA,SAAQ,GAAK;MACX,MAAM;QAAEC,KAAK;QAAEP,QAAQ;QAAET;MAAO,IAAI,IAAG;MAEvC,MAAMU,KAAI,GAAI,IAAI,CAACA,KAAI,GAAI,IAAId,MAAM,CAACoB,KAAK,CAACP,QAAQ,CAAC;MAErD,IAAI,CAACT,MAAM,EAAE;MAEbU,KAAK,CAACE,SAAS,CAACZ,MAAM;IACxB,CAAC;IACDiB,QAAO,GAAK;MACV,MAAM;QAAEP;MAAM,IAAI,IAAG;MAErB,IAAI,CAACA,KAAK,EAAE;MAEZA,KAAK,CAACQ,MAAM,EAAC;IACf;EACF;AACF","names":["autoResize","Charts","name","mixins","props","option","type","Object","default","data","timestamp","Date","now","ref","chartRef","chart","watch","setOption","methods","afterAutoResizeMixinInit","initChart","$refs","onResize","resize"],"sourceRoot":"","sources":["/Users/yanbinru/Desktop/代码/github/vue3-knowledge/node_modules/@jiaminghi/data-view/lib/components/charts/src/main.vue"],"sourcesContent":["<template>\n  <div class=\"dv-charts-container\" :ref=\"ref\">\n    <div class=\"charts-canvas-container\" :ref=\"chartRef\" />\n  </div>\n</template>\n\n<script>\nimport autoResize from '../../../mixin/autoResize'\n\nimport Charts from '@jiaminghi/charts'\n\nexport default {\n  name: 'DvCharts',\n  mixins: [autoResize],\n  props: {\n    option: {\n      type: Object,\n      default: () => ({})\n    }\n  },\n  data () {\n    const timestamp = Date.now()\n    return {\n      ref: `charts-container-${timestamp}`,\n      chartRef: `chart-${timestamp}`,\n\n      chart: null\n    }\n  },\n  watch: {\n    option () {\n      let { chart, option } = this\n\n      if (!chart) return\n\n      if (!option) option = {}\n\n      chart.setOption(option, true)\n    }\n  },\n  methods: {\n    afterAutoResizeMixinInit () {\n      const { initChart } = this\n\n      initChart()\n    },\n    initChart () {\n      const { $refs, chartRef, option } = this\n\n      const chart = this.chart = new Charts($refs[chartRef])\n\n      if (!option) return\n\n      chart.setOption(option)\n    },\n    onResize () {\n      const { chart } = this\n\n      if (!chart) return\n\n      chart.resize()\n    }\n  }\n}\n</script>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}