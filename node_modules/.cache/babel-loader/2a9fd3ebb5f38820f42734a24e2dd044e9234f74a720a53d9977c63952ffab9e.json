{"ast":null,"code":"import { defineComponent } from 'vue';\nimport registerMixin from '../../../mixins/register-component.mjs';\nimport locaMixin from '../../../mixins/loca-component.mjs';\nvar script = defineComponent({\n  name: \"ElAmapLocaZMarker\",\n  mixins: [registerMixin, locaMixin],\n  props: {},\n  data() {\n    return {\n      converters: {}\n    };\n  },\n  methods: {\n    __initComponent(options) {\n      this.$amapComponent = new Loca.ZMarkerLayer(options);\n      this.setSource();\n      this.setStyle();\n      this.$parentComponent.add(this.$amapComponent);\n      this.initComplete();\n    },\n    setStyle() {\n      const defaultStyleValue = {\n        unit: \"px\",\n        content: \"\",\n        size: [20, 20],\n        rotation: 0,\n        alwaysFront: false,\n        altitude: 0\n      };\n      const style = Object.assign({}, defaultStyleValue, this[\"defaultStyleValue\"]);\n      const defaultLayerStyle = {\n        unit: style.unit,\n        content: (index, feature) => {\n          feature.properties = feature.properties || {};\n          return feature.properties.content === void 0 ? style.content : feature.properties.content;\n        },\n        size: (index, feature) => {\n          feature.properties = feature.properties || {};\n          return feature.properties.size === void 0 ? style.size : feature.properties.size;\n        },\n        rotation: (index, feature) => {\n          feature.properties = feature.properties || {};\n          return feature.properties.rotation === void 0 ? style.rotation : feature.properties.rotation;\n        },\n        alwaysFront: style.alwaysFront,\n        altitude: (index, feature) => {\n          feature.properties = feature.properties || {};\n          return feature.properties.altitude === void 0 ? style.altitude : feature.properties.altitude;\n        }\n      };\n      const layerStyle = Object.assign({}, defaultLayerStyle, this[\"layerStyle\"]);\n      this.$amapComponent.setStyle(layerStyle);\n    }\n  },\n  render() {\n    return null;\n  }\n});\nexport { script as default };","map":{"version":3,"mappings":";;;AAKA,aAAeA,eAAgB;EAC7BC,IAAM;EACNC,QAAQ,CAACC,aAAe;EACxBC,KAAO;EAEPC,IAAO;IACE;MACLC,UAAY;IAAA;EAAA;EAGhBC,OAAS;IACPC,gBAAgBC,OAAS;MAClB,sBAAiB,IAAIC,KAAKC,YAAa;MACvC;MACA;MACA,sBAAiBC,IAAI,IAAK;MAC1B;IAAA;IAEPC,QAAW;MACT,MAAMC,iBAAoB;QACxBC,IAAM;QACNC,OAAS;QACTC,MAAM,CAAC,EAAI;QACXC,QAAU;QACVC,WAAa;QACbC,QAAU;MAAA;MAEZ,MAAMC,KAAQ,UAAOC,MAAO,KAAIR,mBAAmB,IAAK;MACxD,MAAMS,iBAAoB;QACxBR,MAAMM,KAAM;QACZL,SAAS,CAACQ,OAAOC,OAAY;UACnBA,qBAAaA,QAAQC,UAAc;UAC3C,OAAOD,QAAQC,UAAW,aAAY,SAAYL,KAAM,WAAUI,QAAQC,UAAW;QAAA;QAEvFT,MAAM,CAACO,OAAOC,OAAY;UAChBA,qBAAaA,QAAQC,UAAc;UAC3C,OAAOD,QAAQC,UAAW,UAAS,SAAYL,KAAM,QAAOI,QAAQC,UAAW;QAAA;QAEjFR,UAAU,CAACM,OAAOC,OAAY;UACpBA,qBAAaA,QAAQC,UAAc;UAC3C,OAAOD,QAAQC,UAAW,cAAa,SAAYL,KAAM,YAAWI,QAAQC,UAAW;QAAA;QAEzFP,aAAaE,KAAM;QACnBD,UAAU,CAACI,OAAOC,OAAY;UACpBA,qBAAaA,QAAQC,UAAc;UAC3C,OAAOD,QAAQC,UAAW,cAAa,SAAYL,KAAM,YAAWI,QAAQC,UAAW;QAAA;MAAA;MAG3F,MAAMC,UAAa,UAAOL,MAAO,KAAIC,mBAAmB,IAAK;MAC7D,KAAKK,eAAef,QAAS;IAAA;EAAA;EAGjCgB,MAAQ;IACC;EAAA;AAAA","names":["defineComponent","name","mixins","registerMixin","props","data","converters","methods","__initComponent","options","Loca","ZMarkerLayer","add","setStyle","defaultStyleValue","unit","content","size","rotation","alwaysFront","altitude","style","assign","defaultLayerStyle","index","feature","properties","layerStyle","$amapComponent","render"],"sources":["../../../../../../src/packages/loca/ZMarkerLayer/ZMarkerLayer.vue"],"sourcesContent":["<script lang=\"ts\">\r\nimport {defineComponent} from \"vue\";\r\nimport registerMixin from '../../../mixins/register-component';\r\nimport locaMixin from '../../../mixins/loca-component';\r\n\r\nexport default defineComponent({\r\n  name: 'ElAmapLocaZMarker',\r\n  mixins: [registerMixin, locaMixin],\r\n  props: {\r\n  },\r\n  data() {\r\n    return {\r\n      converters: {},\r\n    };\r\n  },\r\n  methods: {\r\n    __initComponent(options) {\r\n      this.$amapComponent = new Loca.ZMarkerLayer(options);\r\n      this.setSource();\r\n      this.setStyle();\r\n      this.$parentComponent.add(this.$amapComponent);\r\n      this.initComplete();\r\n    },\r\n    setStyle() {\r\n      const defaultStyleValue = {\r\n        unit: 'px',\r\n        content: '',\r\n        size: [20, 20],\r\n        rotation: 0,\r\n        alwaysFront: false,\r\n        altitude: 0\r\n      };\r\n      const style = Object.assign({}, defaultStyleValue, this['defaultStyleValue']);\r\n      const defaultLayerStyle = {\r\n        unit: style.unit,\r\n        content: (index, feature) => {\r\n          feature.properties = feature.properties || {};\r\n          return feature.properties.content === undefined ? style.content : feature.properties.content;\r\n        },\r\n        size: (index, feature) => {\r\n          feature.properties = feature.properties || {};\r\n          return feature.properties.size === undefined ? style.size : feature.properties.size;\r\n        },\r\n        rotation: (index, feature) => {\r\n          feature.properties = feature.properties || {};\r\n          return feature.properties.rotation === undefined ? style.rotation : feature.properties.rotation;\r\n        },\r\n        alwaysFront: style.alwaysFront,\r\n        altitude: (index, feature) => {\r\n          feature.properties = feature.properties || {};\r\n          return feature.properties.altitude === undefined ? style.altitude : feature.properties.altitude ;\r\n        }\r\n      };\r\n      const layerStyle = Object.assign({}, defaultLayerStyle, this['layerStyle']);\r\n      this.$amapComponent.setStyle(layerStyle);\r\n    }\r\n  },\r\n  render(){\r\n    return null;\r\n  }\r\n});\r\n</script>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}