{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { LineSegments, BufferGeometry, Vector3, BufferAttribute, LineBasicMaterial } from 'three';\nconst _vector = new Vector3();\nconst axes = ['x', 'y', 'z'];\nexport class SphereHelper extends LineSegments {\n  constructor(sphere, color = 0xffff00, angleSteps = 40) {\n    const geometry = new BufferGeometry();\n    const positions = [];\n    for (let i = 0; i < 3; i++) {\n      const axis1 = axes[i];\n      const axis2 = axes[(i + 1) % 3];\n      _vector.set(0, 0, 0);\n      for (let a = 0; a < angleSteps; a++) {\n        let angle;\n        angle = 2 * Math.PI * a / (angleSteps - 1);\n        _vector[axis1] = Math.sin(angle);\n        _vector[axis2] = Math.cos(angle);\n        positions.push(_vector.x, _vector.y, _vector.z);\n        angle = 2 * Math.PI * (a + 1) / (angleSteps - 1);\n        _vector[axis1] = Math.sin(angle);\n        _vector[axis2] = Math.cos(angle);\n        positions.push(_vector.x, _vector.y, _vector.z);\n      }\n    }\n    geometry.setAttribute('position', new BufferAttribute(new Float32Array(positions), 3));\n    geometry.computeBoundingSphere();\n    super(geometry, new LineBasicMaterial({\n      color: color,\n      toneMapped: false\n    }));\n    this.sphere = sphere;\n    this.type = 'SphereHelper';\n  }\n  updateMatrixWorld(force) {\n    const sphere = this.sphere;\n    this.position.copy(sphere.center);\n    this.scale.setScalar(sphere.radius);\n    super.updateMatrixWorld(force);\n  }\n}","map":{"version":3,"names":["LineSegments","BufferGeometry","Vector3","BufferAttribute","LineBasicMaterial","_vector","axes","SphereHelper","constructor","sphere","color","angleSteps","geometry","positions","i","axis1","axis2","set","a","angle","Math","PI","sin","cos","push","x","y","z","setAttribute","Float32Array","computeBoundingSphere","toneMapped","type","updateMatrixWorld","force","position","copy","center","scale","setScalar","radius"],"sources":["/Users/yanbinru/Desktop/代码/github/vue3-knowledge/node_modules/3d-tiles-renderer/src/three/objects/SphereHelper.js"],"sourcesContent":["import { LineSegments, BufferGeometry, Vector3, BufferAttribute, LineBasicMaterial } from 'three';\n\nconst _vector = new Vector3();\nconst axes = [ 'x', 'y', 'z' ];\nexport class SphereHelper extends LineSegments {\n\n\tconstructor( sphere, color = 0xffff00, angleSteps = 40 ) {\n\n\t\tconst geometry = new BufferGeometry();\n\t\tconst positions = [];\n\t\tfor ( let i = 0; i < 3; i ++ ) {\n\n\t\t\tconst axis1 = axes[ i ];\n\t\t\tconst axis2 = axes[ ( i + 1 ) % 3 ];\n\t\t\t_vector.set( 0, 0, 0 );\n\n\t\t\tfor ( let a = 0; a < angleSteps; a ++ ) {\n\n\t\t\t\tlet angle;\n\t\t\t\tangle = 2 * Math.PI * a / ( angleSteps - 1 );\n\t\t\t\t_vector[ axis1 ] = Math.sin( angle );\n\t\t\t\t_vector[ axis2 ] = Math.cos( angle );\n\n\t\t\t\tpositions.push( _vector.x, _vector.y, _vector.z );\n\n\t\t\t\tangle = 2 * Math.PI * ( a + 1 ) / ( angleSteps - 1 );\n\t\t\t\t_vector[ axis1 ] = Math.sin( angle );\n\t\t\t\t_vector[ axis2 ] = Math.cos( angle );\n\n\t\t\t\tpositions.push( _vector.x, _vector.y, _vector.z );\n\n\t\t\t}\n\n\n\t\t}\n\n\t\tgeometry.setAttribute( 'position', new BufferAttribute( new Float32Array( positions ), 3 ) );\n\t\tgeometry.computeBoundingSphere();\n\n\t\tsuper( geometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );\n\t\tthis.sphere = sphere;\n\t\tthis.type = 'SphereHelper';\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tconst sphere = this.sphere;\n\t\tthis.position.copy( sphere.center );\n\t\tthis.scale.setScalar( sphere.radius );\n\t\tsuper.updateMatrixWorld( force );\n\n\t}\n\n}\n"],"mappings":";AAAA,SAASA,YAAY,EAAEC,cAAc,EAAEC,OAAO,EAAEC,eAAe,EAAEC,iBAAiB,QAAQ,OAAO;AAEjG,MAAMC,OAAO,GAAG,IAAIH,OAAO,EAAE;AAC7B,MAAMI,IAAI,GAAG,CAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAE;AAC9B,OAAO,MAAMC,YAAY,SAASP,YAAY,CAAC;EAE9CQ,WAAW,CAAEC,MAAM,EAAEC,KAAK,GAAG,QAAQ,EAAEC,UAAU,GAAG,EAAE,EAAG;IAExD,MAAMC,QAAQ,GAAG,IAAIX,cAAc,EAAE;IACrC,MAAMY,SAAS,GAAG,EAAE;IACpB,KAAM,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAG,EAAG;MAE9B,MAAMC,KAAK,GAAGT,IAAI,CAAEQ,CAAC,CAAE;MACvB,MAAME,KAAK,GAAGV,IAAI,CAAE,CAAEQ,CAAC,GAAG,CAAC,IAAK,CAAC,CAAE;MACnCT,OAAO,CAACY,GAAG,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE;MAEtB,KAAM,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGP,UAAU,EAAEO,CAAC,EAAG,EAAG;QAEvC,IAAIC,KAAK;QACTA,KAAK,GAAG,CAAC,GAAGC,IAAI,CAACC,EAAE,GAAGH,CAAC,IAAKP,UAAU,GAAG,CAAC,CAAE;QAC5CN,OAAO,CAAEU,KAAK,CAAE,GAAGK,IAAI,CAACE,GAAG,CAAEH,KAAK,CAAE;QACpCd,OAAO,CAAEW,KAAK,CAAE,GAAGI,IAAI,CAACG,GAAG,CAAEJ,KAAK,CAAE;QAEpCN,SAAS,CAACW,IAAI,CAAEnB,OAAO,CAACoB,CAAC,EAAEpB,OAAO,CAACqB,CAAC,EAAErB,OAAO,CAACsB,CAAC,CAAE;QAEjDR,KAAK,GAAG,CAAC,GAAGC,IAAI,CAACC,EAAE,IAAKH,CAAC,GAAG,CAAC,CAAE,IAAKP,UAAU,GAAG,CAAC,CAAE;QACpDN,OAAO,CAAEU,KAAK,CAAE,GAAGK,IAAI,CAACE,GAAG,CAAEH,KAAK,CAAE;QACpCd,OAAO,CAAEW,KAAK,CAAE,GAAGI,IAAI,CAACG,GAAG,CAAEJ,KAAK,CAAE;QAEpCN,SAAS,CAACW,IAAI,CAAEnB,OAAO,CAACoB,CAAC,EAAEpB,OAAO,CAACqB,CAAC,EAAErB,OAAO,CAACsB,CAAC,CAAE;MAElD;IAGD;IAEAf,QAAQ,CAACgB,YAAY,CAAE,UAAU,EAAE,IAAIzB,eAAe,CAAE,IAAI0B,YAAY,CAAEhB,SAAS,CAAE,EAAE,CAAC,CAAE,CAAE;IAC5FD,QAAQ,CAACkB,qBAAqB,EAAE;IAEhC,KAAK,CAAElB,QAAQ,EAAE,IAAIR,iBAAiB,CAAE;MAAEM,KAAK,EAAEA,KAAK;MAAEqB,UAAU,EAAE;IAAM,CAAC,CAAE,CAAE;IAC/E,IAAI,CAACtB,MAAM,GAAGA,MAAM;IACpB,IAAI,CAACuB,IAAI,GAAG,cAAc;EAE3B;EAEAC,iBAAiB,CAAEC,KAAK,EAAG;IAE1B,MAAMzB,MAAM,GAAG,IAAI,CAACA,MAAM;IAC1B,IAAI,CAAC0B,QAAQ,CAACC,IAAI,CAAE3B,MAAM,CAAC4B,MAAM,CAAE;IACnC,IAAI,CAACC,KAAK,CAACC,SAAS,CAAE9B,MAAM,CAAC+B,MAAM,CAAE;IACrC,KAAK,CAACP,iBAAiB,CAAEC,KAAK,CAAE;EAEjC;AAED"},"metadata":{},"sourceType":"module","externalDependencies":[]}