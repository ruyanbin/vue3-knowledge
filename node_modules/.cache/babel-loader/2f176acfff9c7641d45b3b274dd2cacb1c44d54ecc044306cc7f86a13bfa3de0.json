{"ast":null,"code":"import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = [\"width\", \"height\"];\nconst _hoisted_2 = [\"x\", \"y\", \"width\", \"height\", \"fill\"];\nconst _hoisted_3 = [\"attributeName\", \"to\"];\nconst _hoisted_4 = [\"x\", \"y\", \"fill\"];\nconst _hoisted_5 = [\"attributeName\", \"to\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", {\n    class: \"dv-decoration-2\",\n    ref: $data.ref\n  }, [(_openBlock(), _createElementBlock(\"svg\", {\n    width: `${_ctx.width}px`,\n    height: `${_ctx.height}px`\n  }, [_createElementVNode(\"rect\", {\n    x: $data.x,\n    y: $data.y,\n    width: $data.w,\n    height: $data.h,\n    fill: $data.mergedColor[0]\n  }, [_createElementVNode(\"animate\", {\n    attributeName: $props.reverse ? 'height' : 'width',\n    from: \"0\",\n    to: $props.reverse ? _ctx.height : _ctx.width,\n    dur: \"6s\",\n    calcMode: \"spline\",\n    keyTimes: \"0;1\",\n    keySplines: \".42,0,.58,1\",\n    repeatCount: \"indefinite\"\n  }, null, 8 /* PROPS */, _hoisted_3)], 8 /* PROPS */, _hoisted_2), _createElementVNode(\"rect\", {\n    x: $data.x,\n    y: $data.y,\n    width: \"1\",\n    height: \"1\",\n    fill: $data.mergedColor[1]\n  }, [_createElementVNode(\"animate\", {\n    attributeName: $props.reverse ? 'y' : 'x',\n    from: \"0\",\n    to: $props.reverse ? _ctx.height : _ctx.width,\n    dur: \"6s\",\n    calcMode: \"spline\",\n    keyTimes: \"0;1\",\n    keySplines: \"0.42,0,0.58,1\",\n    repeatCount: \"indefinite\"\n  }, null, 8 /* PROPS */, _hoisted_5)], 8 /* PROPS */, _hoisted_4)], 8 /* PROPS */, _hoisted_1))], 512 /* NEED_PATCH */);\n}","map":{"version":3,"mappings":";;;;;;;uBACEA,oBA4BM;IA5BDC,KAAK,EAAC,iBAAiB;IAAEC,GAAG,EAAEC;qBACjCH,oBA0BM;IA1BAI,KAAK,KAAKC,UAAK;IAAOC,MAAM,KAAKD,WAAM;MAC3CE,oBAWO;IAXAC,CAAC,EAAEL,OAAC;IAAGM,CAAC,EAAEN,OAAC;IAAGC,KAAK,EAAED,OAAC;IAAGG,MAAM,EAAEH,OAAC;IAAGO,IAAI,EAAEP,iBAAW;MAC3DI,oBASE;IARCI,aAAa,EAAEC,cAAO;IACvBC,IAAI,EAAC,GAAG;IACPC,EAAE,EAAEF,cAAO,GAAGP,WAAM,GAAGA,UAAK;IAC7BU,GAAG,EAAC,IAAI;IACRC,QAAQ,EAAC,QAAQ;IACjBC,QAAQ,EAAC,KAAK;IACdC,UAAU,EAAC,aAAa;IACxBC,WAAW,EAAC;oEAIhBZ,oBAWO;IAXAC,CAAC,EAAEL,OAAC;IAAGM,CAAC,EAAEN,OAAC;IAAEC,KAAK,EAAC,GAAG;IAACE,MAAM,EAAC,GAAG;IAAEI,IAAI,EAAEP,iBAAW;MACzDI,oBASE;IARCI,aAAa,EAAEC,cAAO;IACvBC,IAAI,EAAC,GAAG;IACPC,EAAE,EAAEF,cAAO,GAAGP,WAAM,GAAGA,UAAK;IAC7BU,GAAG,EAAC,IAAI;IACRC,QAAQ,EAAC,QAAQ;IACjBC,QAAQ,EAAC,KAAK;IACdC,UAAU,EAAC,eAAe;IAC1BC,WAAW,EAAC","names":["_createElementBlock","class","ref","$data","width","_ctx","height","_createElementVNode","x","y","fill","attributeName","$props","from","to","dur","calcMode","keyTimes","keySplines","repeatCount"],"sourceRoot":"","sources":["/Users/yanbinru/Desktop/代码/github/vue3-knowledge/node_modules/@jiaminghi/data-view/lib/components/decoration2/src/main.vue"],"sourcesContent":["<template>\n  <div class=\"dv-decoration-2\" :ref=\"ref\">\n    <svg :width=\"`${width}px`\" :height=\"`${height}px`\">\n      <rect :x=\"x\" :y=\"y\" :width=\"w\" :height=\"h\" :fill=\"mergedColor[0]\">\n        <animate\n          :attributeName=\"reverse ? 'height' : 'width'\"\n          from=\"0\"\n          :to=\"reverse ? height : width\"\n          dur=\"6s\"\n          calcMode=\"spline\"\n          keyTimes=\"0;1\"\n          keySplines=\".42,0,.58,1\"\n          repeatCount=\"indefinite\"\n        />\n      </rect>\n\n      <rect :x=\"x\" :y=\"y\" width=\"1\" height=\"1\" :fill=\"mergedColor[1]\">\n        <animate\n          :attributeName=\"reverse ? 'y' : 'x'\"\n          from=\"0\"\n          :to=\"reverse ? height : width\"\n          dur=\"6s\"\n          calcMode=\"spline\"\n          keyTimes=\"0;1\"\n          keySplines=\"0.42,0,0.58,1\"\n          repeatCount=\"indefinite\"\n        />\n      </rect>\n    </svg>\n  </div>\n</template>\n\n<script>\nimport autoResize from '../../../mixin/autoResize'\n\nimport { deepMerge } from '@jiaminghi/charts/lib/util/index'\n\nimport { deepClone } from '@jiaminghi/c-render/lib/plugin/util'\n\nexport default {\n  name: 'DvDecoration2',\n  mixins: [autoResize],\n  props: {\n    color: {\n      type: Array,\n      default: () => ([])\n    },\n    reverse: {\n      type: Boolean,\n      default: false\n    }\n  },\n  data () {\n    return {\n      ref: 'decoration-2',\n\n      x: 0,\n      y: 0,\n\n      w: 0,\n      h: 0,\n\n      defaultColor: ['#3faacb', '#fff'],\n\n      mergedColor: []\n    }\n  },\n  watch: {\n    color () {\n      const { mergeColor } = this\n\n      mergeColor()\n    },\n    reverse () {\n      const { calcSVGData } = this\n\n      calcSVGData()\n    }\n  },\n  methods: {\n    afterAutoResizeMixinInit () {\n      const { calcSVGData } = this\n\n      calcSVGData()\n    },\n    calcSVGData () {\n      const { reverse, width, height } = this\n\n      if (reverse) {\n        this.w = 1\n        this.h = height\n        this.x = width / 2\n        this.y = 0\n      } else {\n        this.w = width\n        this.h = 1\n        this.x = 0\n        this.y = height / 2\n      }\n    },\n    onResize () {\n      const { calcSVGData } = this\n\n      calcSVGData()\n    },\n    mergeColor () {\n      const { color, defaultColor } = this\n\n      this.mergedColor = deepMerge(deepClone(defaultColor, true), color || [])\n    }\n  },\n  mounted () {\n    const { mergeColor } = this\n\n    mergeColor()\n  }\n}\n</script>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}