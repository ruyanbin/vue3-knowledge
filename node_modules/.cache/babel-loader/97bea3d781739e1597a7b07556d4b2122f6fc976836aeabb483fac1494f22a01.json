{"ast":null,"code":"import { defineComponent } from 'vue';\nimport registerMixin from '../../../mixins/register-component.mjs';\nimport ThreeVideo from './ThreeVideo.mjs';\nvar script = defineComponent({\n  name: \"ElAmapThreeVideo\",\n  mixins: [registerMixin],\n  props: {\n    video: {\n      type: [String, Array, HTMLVideoElement],\n      required: true\n    },\n    videoTranslate: {\n      type: Object,\n      default() {\n        return {\n          x: 0,\n          y: 0,\n          z: 0\n        };\n      }\n    },\n    videoWidth: {\n      type: Number\n    },\n    videoHeight: {\n      type: Number\n    },\n    canvas: {\n      type: Object\n    },\n    position: {\n      type: Array,\n      required: true\n    },\n    altitude: {\n      type: Number,\n      default: 0\n    },\n    rotation: {\n      type: Object\n    },\n    scale: {\n      type: [Number, Array],\n      default: 1\n    },\n    angle: {\n      type: Number,\n      default: 0\n    },\n    opacity: {\n      type: Number,\n      default: 1\n    },\n    alwaysFront: {\n      type: Boolean,\n      default: false\n    }\n  },\n  emits: [\"click\", \"mousemove\", \"mouseover\", \"mouseout\"],\n  data() {\n    return {\n      videoUrlList: []\n    };\n  },\n  methods: {\n    __initComponent(options) {\n      const urlType = Object.prototype.toString.call(options.video);\n      if (urlType === \"[object String]\") {\n        this.videoUrlList = [options.video];\n      } else if (urlType === \"[object Array]\") {\n        this.videoUrlList = options.video;\n      }\n      if (this.videoUrlList.length > 0) {\n        options.video = this.$refs.video;\n      }\n      this.$amapComponent = new ThreeVideo(this.$parentComponent);\n      return new Promise(resolve => {\n        this.$nextTick(() => {\n          this.$amapComponent.init(options, this).then(() => {\n            resolve();\n          });\n        });\n      });\n    },\n    destroyComponent() {\n      if (!this.parentInstance.isDestroy) {\n        this.$amapComponent.remove();\n      }\n      this.$amapComponent.destroy();\n    },\n    $$start() {\n      this.$amapComponent.start();\n    },\n    $$pause() {\n      this.$amapComponent.pause();\n    }\n  }\n});\nexport { script as default };","map":{"version":3,"mappings":";;;AAwBA,aAAeA,eAAgB;EAC7BC,IAAM;EACNC,QAAQ,CAACC;EACTC,KAAO;IACLC,KAAO;MACLC,MAAM,CAACC,QAAQC,KAAO;MACtBC,QAAU;IAAA;IAEZC,cAAgB;MACdJ,IAAM;MACNK,OAAS;QACA;UACLC,CAAE;UACFC,CAAE;UACFC,CAAE;QAAA;MAAA;IAAA;IAIRC,UAAY;MACVT,IAAM;IAAA;IAERU,WAAa;MACXV,IAAM;IAAA;IAERW,MAAQ;MACNX,IAAM;IAAA;IAERY,QAAU;MACRZ,IAAM;MACNG,QAAU;IAAA;IAEZU,QAAU;MACRb,IAAM;MACNK,OAAS;IAAA;IAEXS,QAAU;MACRd,IAAM;IAAA;IAERe,KAAO;MACLf,MAAM,CAACgB,MAAQ;MACfX,OAAS;IAAA;IAEXY,KAAO;MACLjB,IAAM;MACNK,OAAS;IAAA;IAEXa,OAAS;MACPlB,IAAM;MACNK,OAAS;IAAA;IAEXc,WAAa;MACXnB,IAAM;MACNK,OAAS;IAAA;EAAA;EAGbe,KAAO,GAAC,OAAS,eAAa,WAAa;EAC3CC,IAAO;IACE;MACLC,YAAc;IAAA;EAAA;EAGlBC,OAAS;IACPC,gBAAgBC,OAAS;MACvB,MAAMC,OAAU,UAAOC,SAAU,UAASC,KAAKH,OAAQ;MACvD,IAAGC,YAAY,iBAAkB;QAC1B,oBAAe,CAACD,OAAQ;MAAA,WACtBC,YAAY,gBAAiB;QACpC,KAAKJ,eAAeG,OAAQ;MAAA;MAE3B,SAAKH,YAAa,UAAS,CAAE;QACtBG,gBAAQ,KAAKI,KAAM;MAAA;MAExB,sBAAiB,IAAIC,WAAW,IAAK;MACnC,WAAIC,OAAc,CAACC,OAAY;QACpC,KAAKC,UAAU,MAAM;UACnB,KAAKC,cAAe,MAAKT,OAAS,QAAMU,KAAK,MAAM;YACjDH;UAAA;QAAA;MAAA;IAAA;IAMRI,gBAAmB;MACd,KAAC,IAAK,gBAAeC,SAAU;QAChC,KAAKH,cAAe;MAAA;MAEtB,KAAKA,cAAe;IAAA;IAEtBI,OAAU;MACR,KAAKJ,cAAe;IAAA;IAEtBK,OAAU;MACR,KAAKL,cAAe;IAAA;EAAA;AAAA","names":["defineComponent","name","mixins","registerMixin","props","video","type","String","Array","required","videoTranslate","default","x","y","z","videoWidth","videoHeight","canvas","position","altitude","rotation","scale","Number","angle","opacity","alwaysFront","emits","data","videoUrlList","methods","__initComponent","options","urlType","prototype","call","$refs","ThreeVideo","Promise","resolve","$nextTick","$amapComponent","then","destroyComponent","isDestroy","$$start","$$pause"],"sources":["../../../../../../src/packages/three/ThreeVideo/ThreeVideo.vue"],"sourcesContent":["<template>\r\n  <video\r\n    ref=\"video\"\r\n    style=\"display: none;\"\r\n    muted\r\n    loop\r\n    autoplay\r\n    crossOrigin=\"anonymous\"\r\n  >\r\n    <source\r\n      v-for=\"item in videoUrlList\"\r\n      :key=\"item\"\r\n      :src=\"item\"\r\n      type=\"video/mp4\"\r\n    >\r\n  </video>\r\n</template>\r\n<script lang=\"ts\">\r\nimport {defineComponent} from \"vue\";\r\nimport registerMixin from '../../../mixins/register-component';\r\nimport ThreeVideo from \"./ThreeVideo\";\r\nimport type {Vec} from \"./Type\";\r\nimport type{PropType} from \"vue\";\r\n\r\nexport default defineComponent({\r\n  name: 'ElAmapThreeVideo',\r\n  mixins: [registerMixin],\r\n  props: {\r\n    video: {\r\n      type: [String, Array, HTMLVideoElement],\r\n      required: true\r\n    },\r\n    videoTranslate: {\r\n      type: Object as PropType<Vec>,\r\n      default(){\r\n        return {\r\n          x:0,\r\n          y:0,\r\n          z:0\r\n        }\r\n      }\r\n    },\r\n    videoWidth: {\r\n      type: Number\r\n    }, // 视频宽度\r\n    videoHeight: {\r\n      type: Number\r\n    }, // 视频高度\r\n    canvas: {\r\n      type: Object as PropType<HTMLCanvasElement>\r\n    },\r\n    position: {\r\n      type: Array as PropType<number[]>,\r\n      required: true\r\n    },\r\n    altitude: {\r\n      type: Number,\r\n      default: 0\r\n    },\r\n    rotation: {\r\n      type: Object as PropType<Vec>\r\n    },\r\n    scale: {\r\n      type: [Number, Array],\r\n      default: 1\r\n    },\r\n    angle: {\r\n      type: Number,\r\n      default: 0\r\n    },\r\n    opacity: {\r\n      type: Number,\r\n      default: 1\r\n    }, // 透明度，默认 1\r\n    alwaysFront: {\r\n      type: Boolean,\r\n      default: false\r\n    } //是否一直面朝屏幕\r\n  },\r\n  emits: ['click', 'mousemove', 'mouseover', 'mouseout'],\r\n  data() {\r\n    return {\r\n      videoUrlList: [] as string[]\r\n    };\r\n  },\r\n  methods: {\r\n    __initComponent(options) {\r\n      const urlType = Object.prototype.toString.call(options.video);\r\n      if(urlType === '[object String]'){\r\n        this.videoUrlList = [options.video as string];\r\n      }else if(urlType === '[object Array]'){\r\n        this.videoUrlList = options.video;\r\n      }\r\n      if(this.videoUrlList.length > 0){\r\n        options.video = this.$refs.video\r\n      }\r\n      this.$amapComponent = new ThreeVideo(this.$parentComponent);\r\n      return new Promise<void>((resolve) => {\r\n        this.$nextTick(() => {\r\n          this.$amapComponent.init(options, this).then(() => {\r\n            resolve()\r\n          });\r\n        })\r\n\r\n      })\r\n    },\r\n    destroyComponent() {\r\n      if(!this.parentInstance.isDestroy){\r\n        this.$amapComponent.remove();\r\n      }\r\n      this.$amapComponent.destroy()\r\n    },\r\n    $$start() {\r\n      this.$amapComponent.start();\r\n    },\r\n    $$pause() {\r\n      this.$amapComponent.pause();\r\n    }\r\n  }\r\n});\r\n</script>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}