{"ast":null,"code":"import { defineComponent } from 'vue';\nimport registerMixin from '../../../mixins/register-component.mjs';\nvar script = defineComponent({\n  name: \"ElAmapCircleMarker\",\n  mixins: [registerMixin],\n  props: {\n    zIndex: {\n      type: Number\n    },\n    center: {\n      type: Array,\n      required: true\n    },\n    bubble: {\n      type: Boolean,\n      default: false\n    },\n    cursor: {\n      type: String\n    },\n    radius: {\n      type: Number\n    },\n    strokeColor: {\n      type: String\n    },\n    strokeOpacity: {\n      type: Number\n    },\n    strokeWeight: {\n      type: Number\n    },\n    fillColor: {\n      type: String\n    },\n    fillOpacity: {\n      type: Number\n    },\n    draggable: {\n      type: Boolean,\n      default: false\n    },\n    extData: {\n      type: Object\n    }\n  },\n  emits: [\"update:center\"],\n  data() {\n    return {\n      converters: {},\n      handlers: {}\n    };\n  },\n  methods: {\n    __initComponent(options) {\n      this.$parentComponent = this.parentInstance.$amapComponent;\n      this.$amapComponent = new AMap.CircleMarker(options);\n      this.$parentComponent.add(this.$amapComponent);\n      this.bindModelEvents();\n    },\n    bindModelEvents() {\n      this.$amapComponent.on(\"dragend\", () => {\n        this.emitPosition();\n      });\n      this.$amapComponent.on(\"touchend\", () => {\n        this.emitPosition();\n      });\n    },\n    emitPosition() {\n      const center = this.$amapComponent.getCenter();\n      this.$emit(\"update:center\", center.toArray());\n    },\n    destroyComponent() {\n      if (!this.parentInstance.isDestroy) {\n        this.$parentComponent.remove(this.$amapComponent);\n      }\n      this.$amapComponent = null;\n    },\n    __strokeColor(value) {\n      this.$amapComponent.setOptions({\n        strokeColor: value\n      });\n    },\n    __strokeOpacity(value) {\n      this.$amapComponent.setOptions({\n        strokeOpacity: value\n      });\n    },\n    __strokeWeight(value) {\n      this.$amapComponent.setOptions({\n        strokeWeight: value\n      });\n    },\n    __fillColor(value) {\n      this.$amapComponent.setOptions({\n        fillColor: value\n      });\n    },\n    __fillOpacity(value) {\n      this.$amapComponent.setOptions({\n        fillOpacity: value\n      });\n    }\n  },\n  render() {\n    return null;\n  }\n});\nexport { script as default };","map":{"version":3,"mappings":";;AAIA,aAAeA,eAAgB;EAC7BC,IAAM;EACNC,QAAQ,CAACC;EACTC,KAAO;IACLC,MAAQ;MACNC,IAAM;IAAA;IAERC,MAAQ;MACND,IAAM;MACNE,QAAU;IAAA;IAEZC,MAAQ;MACNH,IAAM;MACNI,OAAS;IAAA;IAEXC,MAAQ;MACNL,IAAM;IAAA;IAERM,MAAQ;MACNN,IAAM;IAAA;IAERO,WAAa;MACXP,IAAM;IAAA;IAERQ,aAAe;MACbR,IAAM;IAAA;IAERS,YAAc;MACZT,IAAM;IAAA;IAERU,SAAW;MACTV,IAAM;IAAA;IAERW,WAAa;MACXX,IAAM;IAAA;IAERY,SAAW;MACTZ,IAAM;MACNI,OAAS;IAAA;IAEXS,OAAS;MACPb,IAAM;IAAA;EAAA;EAIVc,OAAO,CAAC;EAERC,IAAO;IACE;MACLC,UAAY;MACZC,QAAU;IAAA;EAAA;EAIdC,OAAS;IACPC,gBAAgBC,OAAS;MAClB,wBAAmB,KAAKC,cAAe;MACvC,sBAAiB,IAAIC,KAAKC,YAAa;MACvC,sBAAiBC,IAAI,IAAK;MAC1B;IAAA;IAEPC,eAAiB;MACV,oBAAeC,EAAG,YAAU,MAAM;QAChC;MAAA;MAEF,oBAAeA,EAAG,aAAW,MAAM;QACjC;MAAA;IAAA;IAGTC,YAAc;MACN,eAAS,KAAKC,cAAe;MAC9B,WAAM,iBAAiB3B,MAAO;IAAA;IAErC4B,gBAAmB;MAEd,KAAC,IAAK,gBAAeC,SAAU;QAC3B,sBAAiBC,OAAO,IAAK;MAAA;MAEpC,KAAKH,cAAiB;IAAA;IAExBI,cAAcC,KAAO;MACnB,KAAKL,eAAeM,UAAW;QAC7B3B,WAAa;MAAA;IAAA;IAGjB4B,gBAAgBF,KAAO;MACrB,KAAKL,eAAeM,UAAW;QAC7B1B,aAAe;MAAA;IAAA;IAGnB4B,eAAeH,KAAO;MACpB,KAAKL,eAAeM,UAAW;QAC7BzB,YAAc;MAAA;IAAA;IAGlB4B,YAAYJ,KAAO;MACjB,KAAKL,eAAeM,UAAW;QAC7BxB,SAAW;MAAA;IAAA;IAGf4B,cAAcL,KAAO;MACnB,KAAKL,eAAeM,UAAW;QAC7BvB,WAAa;MAAA;IAAA;EAAA;EAInB4B,MAAS;IACA;EAAA;AAAA","names":["defineComponent","name","mixins","registerMixin","props","zIndex","type","center","required","bubble","default","cursor","radius","strokeColor","strokeOpacity","strokeWeight","fillColor","fillOpacity","draggable","extData","emits","data","converters","handlers","methods","__initComponent","options","parentInstance","AMap","CircleMarker","add","bindModelEvents","on","emitPosition","$amapComponent","destroyComponent","isDestroy","remove","__strokeColor","value","setOptions","__strokeOpacity","__strokeWeight","__fillColor","__fillOpacity","render"],"sources":["../../../../../../src/packages/marker/CircleMarker/CircleMarker.vue"],"sourcesContent":["<script lang=\"ts\">\r\nimport {defineComponent} from \"vue\";\r\nimport registerMixin from '../../../mixins/register-component';\r\n\r\nexport default defineComponent({\r\n  name: 'ElAmapCircleMarker',\r\n  mixins: [registerMixin],\r\n  props: {\r\n    zIndex: {\r\n      type: Number\r\n    },\r\n    center: {\r\n      type: Array,\r\n      required: true\r\n    },\r\n    bubble: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    cursor: {\r\n      type: String\r\n    },\r\n    radius: {\r\n      type: Number\r\n    },\r\n    strokeColor: {\r\n      type: String\r\n    },\r\n    strokeOpacity: {\r\n      type: Number\r\n    },\r\n    strokeWeight: {\r\n      type: Number\r\n    },\r\n    fillColor: {\r\n      type: String\r\n    },\r\n    fillOpacity: {\r\n      type: Number\r\n    },\r\n    draggable: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    extData: {\r\n      type: Object\r\n    }\r\n  },\r\n\r\n  emits: ['update:center'],\r\n\r\n  data() {\r\n    return {\r\n      converters: {},\r\n      handlers: {}\r\n    };\r\n  },\r\n\r\n  methods: {\r\n    __initComponent(options) {\r\n      this.$parentComponent = this.parentInstance.$amapComponent;\r\n      this.$amapComponent = new AMap.CircleMarker(options);\r\n      this.$parentComponent.add(this.$amapComponent);\r\n      this.bindModelEvents();\r\n    },\r\n    bindModelEvents(){\r\n      this.$amapComponent.on('dragend',() => {\r\n        this.emitPosition();\r\n      });\r\n      this.$amapComponent.on('touchend',() => {\r\n        this.emitPosition();\r\n      });\r\n    },\r\n    emitPosition(){\r\n      const center = this.$amapComponent.getCenter();\r\n      this.$emit('update:center', center.toArray());\r\n    },\r\n    destroyComponent() {\r\n      // this.$parentComponent.remove(this.$amapComponent);\r\n      if(!this.parentInstance.isDestroy){\r\n        this.$parentComponent.remove(this.$amapComponent);\r\n      }\r\n      this.$amapComponent = null;\r\n    },\r\n    __strokeColor(value) {\r\n      this.$amapComponent.setOptions({\r\n        strokeColor: value\r\n      });\r\n    },\r\n    __strokeOpacity(value) {\r\n      this.$amapComponent.setOptions({\r\n        strokeOpacity: value\r\n      });\r\n    },\r\n    __strokeWeight(value) {\r\n      this.$amapComponent.setOptions({\r\n        strokeWeight: value\r\n      });\r\n    },\r\n    __fillColor(value) {\r\n      this.$amapComponent.setOptions({\r\n        fillColor: value\r\n      });\r\n    },\r\n    __fillOpacity(value) {\r\n      this.$amapComponent.setOptions({\r\n        fillOpacity: value\r\n      });\r\n    }\r\n  },\r\n  render() {\r\n    return null;\r\n  }\r\n});\r\n</script>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}