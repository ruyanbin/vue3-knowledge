{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n/**!\n * Sortable 1.10.2\n * @author\tRubaXa   <trash@rubaxa.org>\n * @author\towenm    <owen23355@gmail.com>\n * @license MIT\n */\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function (obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function (obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n  return _typeof(obj);\n}\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n    ownKeys.forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    });\n  }\n  return target;\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread();\n}\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) arr2[i] = arr[i];\n    return arr2;\n  }\n}\nfunction _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}\nvar version = \"1.10.2\";\nfunction userAgent(pattern) {\n  if (typeof window !== 'undefined' && window.navigator) {\n    return !! /*@__PURE__*/\n    navigator.userAgent.match(pattern);\n  }\n}\nvar IE11OrLess = userAgent(/(?:Trident.*rv[ :]?11\\.|msie|iemobile|Windows Phone)/i);\nvar Edge = userAgent(/Edge/i);\nvar FireFox = userAgent(/firefox/i);\nvar Safari = userAgent(/safari/i) && !userAgent(/chrome/i) && !userAgent(/android/i);\nvar IOS = userAgent(/iP(ad|od|hone)/i);\nvar ChromeForAndroid = userAgent(/chrome/i) && userAgent(/android/i);\nvar captureMode = {\n  capture: false,\n  passive: false\n};\nfunction on(el, event, fn) {\n  el.addEventListener(event, fn, !IE11OrLess && captureMode);\n}\nfunction off(el, event, fn) {\n  el.removeEventListener(event, fn, !IE11OrLess && captureMode);\n}\nfunction matches( /**HTMLElement*/\nel, /**String*/\nselector) {\n  if (!selector) return;\n  selector[0] === '>' && (selector = selector.substring(1));\n  if (el) {\n    try {\n      if (el.matches) {\n        return el.matches(selector);\n      } else if (el.msMatchesSelector) {\n        return el.msMatchesSelector(selector);\n      } else if (el.webkitMatchesSelector) {\n        return el.webkitMatchesSelector(selector);\n      }\n    } catch (_) {\n      return false;\n    }\n  }\n  return false;\n}\nfunction getParentOrHost(el) {\n  return el.host && el !== document && el.host.nodeType ? el.host : el.parentNode;\n}\nfunction closest( /**HTMLElement*/\nel, /**String*/\nselector, /**HTMLElement*/\nctx, includeCTX) {\n  if (el) {\n    ctx = ctx || document;\n    do {\n      if (selector != null && (selector[0] === '>' ? el.parentNode === ctx && matches(el, selector) : matches(el, selector)) || includeCTX && el === ctx) {\n        return el;\n      }\n      if (el === ctx) break;\n      /* jshint boss:true */\n    } while (el = getParentOrHost(el));\n  }\n  return null;\n}\nvar R_SPACE = /\\s+/g;\nfunction toggleClass(el, name, state) {\n  if (el && name) {\n    if (el.classList) {\n      el.classList[state ? 'add' : 'remove'](name);\n    } else {\n      var className = (' ' + el.className + ' ').replace(R_SPACE, ' ').replace(' ' + name + ' ', ' ');\n      el.className = (className + (state ? ' ' + name : '')).replace(R_SPACE, ' ');\n    }\n  }\n}\nfunction css(el, prop, val) {\n  var style = el && el.style;\n  if (style) {\n    if (val === void 0) {\n      if (document.defaultView && document.defaultView.getComputedStyle) {\n        val = document.defaultView.getComputedStyle(el, '');\n      } else if (el.currentStyle) {\n        val = el.currentStyle;\n      }\n      return prop === void 0 ? val : val[prop];\n    } else {\n      if (!(prop in style) && prop.indexOf('webkit') === -1) {\n        prop = '-webkit-' + prop;\n      }\n      style[prop] = val + (typeof val === 'string' ? '' : 'px');\n    }\n  }\n}\nfunction matrix(el, selfOnly) {\n  var appliedTransforms = '';\n  if (typeof el === 'string') {\n    appliedTransforms = el;\n  } else {\n    do {\n      var transform = css(el, 'transform');\n      if (transform && transform !== 'none') {\n        appliedTransforms = transform + ' ' + appliedTransforms;\n      }\n      /* jshint boss:true */\n    } while (!selfOnly && (el = el.parentNode));\n  }\n  var matrixFn = window.DOMMatrix || window.WebKitCSSMatrix || window.CSSMatrix || window.MSCSSMatrix;\n  /*jshint -W056 */\n\n  return matrixFn && new matrixFn(appliedTransforms);\n}\nfunction find(ctx, tagName, iterator) {\n  if (ctx) {\n    var list = ctx.getElementsByTagName(tagName),\n      i = 0,\n      n = list.length;\n    if (iterator) {\n      for (; i < n; i++) {\n        iterator(list[i], i);\n      }\n    }\n    return list;\n  }\n  return [];\n}\nfunction getWindowScrollingElement() {\n  var scrollingElement = document.scrollingElement;\n  if (scrollingElement) {\n    return scrollingElement;\n  } else {\n    return document.documentElement;\n  }\n}\n/**\r\n * Returns the \"bounding client rect\" of given element\r\n * @param  {HTMLElement} el                       The element whose boundingClientRect is wanted\r\n * @param  {[Boolean]} relativeToContainingBlock  Whether the rect should be relative to the containing block of (including) the container\r\n * @param  {[Boolean]} relativeToNonStaticParent  Whether the rect should be relative to the relative parent of (including) the contaienr\r\n * @param  {[Boolean]} undoScale                  Whether the container's scale() should be undone\r\n * @param  {[HTMLElement]} container              The parent the element will be placed in\r\n * @return {Object}                               The boundingClientRect of el, with specified adjustments\r\n */\n\nfunction getRect(el, relativeToContainingBlock, relativeToNonStaticParent, undoScale, container) {\n  if (!el.getBoundingClientRect && el !== window) return;\n  var elRect, top, left, bottom, right, height, width;\n  if (el !== window && el !== getWindowScrollingElement()) {\n    elRect = el.getBoundingClientRect();\n    top = elRect.top;\n    left = elRect.left;\n    bottom = elRect.bottom;\n    right = elRect.right;\n    height = elRect.height;\n    width = elRect.width;\n  } else {\n    top = 0;\n    left = 0;\n    bottom = window.innerHeight;\n    right = window.innerWidth;\n    height = window.innerHeight;\n    width = window.innerWidth;\n  }\n  if ((relativeToContainingBlock || relativeToNonStaticParent) && el !== window) {\n    // Adjust for translate()\n    container = container || el.parentNode; // solves #1123 (see: https://stackoverflow.com/a/37953806/6088312)\n    // Not needed on <= IE11\n\n    if (!IE11OrLess) {\n      do {\n        if (container && container.getBoundingClientRect && (css(container, 'transform') !== 'none' || relativeToNonStaticParent && css(container, 'position') !== 'static')) {\n          var containerRect = container.getBoundingClientRect(); // Set relative to edges of padding box of container\n\n          top -= containerRect.top + parseInt(css(container, 'border-top-width'));\n          left -= containerRect.left + parseInt(css(container, 'border-left-width'));\n          bottom = top + elRect.height;\n          right = left + elRect.width;\n          break;\n        }\n        /* jshint boss:true */\n      } while (container = container.parentNode);\n    }\n  }\n  if (undoScale && el !== window) {\n    // Adjust for scale()\n    var elMatrix = matrix(container || el),\n      scaleX = elMatrix && elMatrix.a,\n      scaleY = elMatrix && elMatrix.d;\n    if (elMatrix) {\n      top /= scaleY;\n      left /= scaleX;\n      width /= scaleX;\n      height /= scaleY;\n      bottom = top + height;\n      right = left + width;\n    }\n  }\n  return {\n    top: top,\n    left: left,\n    bottom: bottom,\n    right: right,\n    width: width,\n    height: height\n  };\n}\n/**\r\n * Checks if a side of an element is scrolled past a side of its parents\r\n * @param  {HTMLElement}  el           The element who's side being scrolled out of view is in question\r\n * @param  {String}       elSide       Side of the element in question ('top', 'left', 'right', 'bottom')\r\n * @param  {String}       parentSide   Side of the parent in question ('top', 'left', 'right', 'bottom')\r\n * @return {HTMLElement}               The parent scroll element that the el's side is scrolled past, or null if there is no such element\r\n */\n\nfunction isScrolledPast(el, elSide, parentSide) {\n  var parent = getParentAutoScrollElement(el, true),\n    elSideVal = getRect(el)[elSide];\n  /* jshint boss:true */\n\n  while (parent) {\n    var parentSideVal = getRect(parent)[parentSide],\n      visible = void 0;\n    if (parentSide === 'top' || parentSide === 'left') {\n      visible = elSideVal >= parentSideVal;\n    } else {\n      visible = elSideVal <= parentSideVal;\n    }\n    if (!visible) return parent;\n    if (parent === getWindowScrollingElement()) break;\n    parent = getParentAutoScrollElement(parent, false);\n  }\n  return false;\n}\n/**\r\n * Gets nth child of el, ignoring hidden children, sortable's elements (does not ignore clone if it's visible)\r\n * and non-draggable elements\r\n * @param  {HTMLElement} el       The parent element\r\n * @param  {Number} childNum      The index of the child\r\n * @param  {Object} options       Parent Sortable's options\r\n * @return {HTMLElement}          The child at index childNum, or null if not found\r\n */\n\nfunction getChild(el, childNum, options) {\n  var currentChild = 0,\n    i = 0,\n    children = el.children;\n  while (i < children.length) {\n    if (children[i].style.display !== 'none' && children[i] !== Sortable.ghost && children[i] !== Sortable.dragged && closest(children[i], options.draggable, el, false)) {\n      if (currentChild === childNum) {\n        return children[i];\n      }\n      currentChild++;\n    }\n    i++;\n  }\n  return null;\n}\n/**\r\n * Gets the last child in the el, ignoring ghostEl or invisible elements (clones)\r\n * @param  {HTMLElement} el       Parent element\r\n * @param  {selector} selector    Any other elements that should be ignored\r\n * @return {HTMLElement}          The last child, ignoring ghostEl\r\n */\n\nfunction lastChild(el, selector) {\n  var last = el.lastElementChild;\n  while (last && (last === Sortable.ghost || css(last, 'display') === 'none' || selector && !matches(last, selector))) {\n    last = last.previousElementSibling;\n  }\n  return last || null;\n}\n/**\r\n * Returns the index of an element within its parent for a selected set of\r\n * elements\r\n * @param  {HTMLElement} el\r\n * @param  {selector} selector\r\n * @return {number}\r\n */\n\nfunction index(el, selector) {\n  var index = 0;\n  if (!el || !el.parentNode) {\n    return -1;\n  }\n  /* jshint boss:true */\n\n  while (el = el.previousElementSibling) {\n    if (el.nodeName.toUpperCase() !== 'TEMPLATE' && el !== Sortable.clone && (!selector || matches(el, selector))) {\n      index++;\n    }\n  }\n  return index;\n}\n/**\r\n * Returns the scroll offset of the given element, added with all the scroll offsets of parent elements.\r\n * The value is returned in real pixels.\r\n * @param  {HTMLElement} el\r\n * @return {Array}             Offsets in the format of [left, top]\r\n */\n\nfunction getRelativeScrollOffset(el) {\n  var offsetLeft = 0,\n    offsetTop = 0,\n    winScroller = getWindowScrollingElement();\n  if (el) {\n    do {\n      var elMatrix = matrix(el),\n        scaleX = elMatrix.a,\n        scaleY = elMatrix.d;\n      offsetLeft += el.scrollLeft * scaleX;\n      offsetTop += el.scrollTop * scaleY;\n    } while (el !== winScroller && (el = el.parentNode));\n  }\n  return [offsetLeft, offsetTop];\n}\n/**\r\n * Returns the index of the object within the given array\r\n * @param  {Array} arr   Array that may or may not hold the object\r\n * @param  {Object} obj  An object that has a key-value pair unique to and identical to a key-value pair in the object you want to find\r\n * @return {Number}      The index of the object in the array, or -1\r\n */\n\nfunction indexOfObject(arr, obj) {\n  for (var i in arr) {\n    if (!arr.hasOwnProperty(i)) continue;\n    for (var key in obj) {\n      if (obj.hasOwnProperty(key) && obj[key] === arr[i][key]) return Number(i);\n    }\n  }\n  return -1;\n}\nfunction getParentAutoScrollElement(el, includeSelf) {\n  // skip to window\n  if (!el || !el.getBoundingClientRect) return getWindowScrollingElement();\n  var elem = el;\n  var gotSelf = false;\n  do {\n    // we don't need to get elem css if it isn't even overflowing in the first place (performance)\n    if (elem.clientWidth < elem.scrollWidth || elem.clientHeight < elem.scrollHeight) {\n      var elemCSS = css(elem);\n      if (elem.clientWidth < elem.scrollWidth && (elemCSS.overflowX == 'auto' || elemCSS.overflowX == 'scroll') || elem.clientHeight < elem.scrollHeight && (elemCSS.overflowY == 'auto' || elemCSS.overflowY == 'scroll')) {\n        if (!elem.getBoundingClientRect || elem === document.body) return getWindowScrollingElement();\n        if (gotSelf || includeSelf) return elem;\n        gotSelf = true;\n      }\n    }\n    /* jshint boss:true */\n  } while (elem = elem.parentNode);\n  return getWindowScrollingElement();\n}\nfunction extend(dst, src) {\n  if (dst && src) {\n    for (var key in src) {\n      if (src.hasOwnProperty(key)) {\n        dst[key] = src[key];\n      }\n    }\n  }\n  return dst;\n}\nfunction isRectEqual(rect1, rect2) {\n  return Math.round(rect1.top) === Math.round(rect2.top) && Math.round(rect1.left) === Math.round(rect2.left) && Math.round(rect1.height) === Math.round(rect2.height) && Math.round(rect1.width) === Math.round(rect2.width);\n}\nvar _throttleTimeout;\nfunction throttle(callback, ms) {\n  return function () {\n    if (!_throttleTimeout) {\n      var args = arguments,\n        _this = this;\n      if (args.length === 1) {\n        callback.call(_this, args[0]);\n      } else {\n        callback.apply(_this, args);\n      }\n      _throttleTimeout = setTimeout(function () {\n        _throttleTimeout = void 0;\n      }, ms);\n    }\n  };\n}\nfunction cancelThrottle() {\n  clearTimeout(_throttleTimeout);\n  _throttleTimeout = void 0;\n}\nfunction scrollBy(el, x, y) {\n  el.scrollLeft += x;\n  el.scrollTop += y;\n}\nfunction clone(el) {\n  var Polymer = window.Polymer;\n  var $ = window.jQuery || window.Zepto;\n  if (Polymer && Polymer.dom) {\n    return Polymer.dom(el).cloneNode(true);\n  } else if ($) {\n    return $(el).clone(true)[0];\n  } else {\n    return el.cloneNode(true);\n  }\n}\nfunction setRect(el, rect) {\n  css(el, 'position', 'absolute');\n  css(el, 'top', rect.top);\n  css(el, 'left', rect.left);\n  css(el, 'width', rect.width);\n  css(el, 'height', rect.height);\n}\nfunction unsetRect(el) {\n  css(el, 'position', '');\n  css(el, 'top', '');\n  css(el, 'left', '');\n  css(el, 'width', '');\n  css(el, 'height', '');\n}\nvar expando = 'Sortable' + new Date().getTime();\nfunction AnimationStateManager() {\n  var animationStates = [],\n    animationCallbackId;\n  return {\n    captureAnimationState: function captureAnimationState() {\n      animationStates = [];\n      if (!this.options.animation) return;\n      var children = [].slice.call(this.el.children);\n      children.forEach(function (child) {\n        if (css(child, 'display') === 'none' || child === Sortable.ghost) return;\n        animationStates.push({\n          target: child,\n          rect: getRect(child)\n        });\n        var fromRect = _objectSpread({}, animationStates[animationStates.length - 1].rect); // If animating: compensate for current animation\n\n        if (child.thisAnimationDuration) {\n          var childMatrix = matrix(child, true);\n          if (childMatrix) {\n            fromRect.top -= childMatrix.f;\n            fromRect.left -= childMatrix.e;\n          }\n        }\n        child.fromRect = fromRect;\n      });\n    },\n    addAnimationState: function addAnimationState(state) {\n      animationStates.push(state);\n    },\n    removeAnimationState: function removeAnimationState(target) {\n      animationStates.splice(indexOfObject(animationStates, {\n        target: target\n      }), 1);\n    },\n    animateAll: function animateAll(callback) {\n      var _this = this;\n      if (!this.options.animation) {\n        clearTimeout(animationCallbackId);\n        if (typeof callback === 'function') callback();\n        return;\n      }\n      var animating = false,\n        animationTime = 0;\n      animationStates.forEach(function (state) {\n        var time = 0,\n          target = state.target,\n          fromRect = target.fromRect,\n          toRect = getRect(target),\n          prevFromRect = target.prevFromRect,\n          prevToRect = target.prevToRect,\n          animatingRect = state.rect,\n          targetMatrix = matrix(target, true);\n        if (targetMatrix) {\n          // Compensate for current animation\n          toRect.top -= targetMatrix.f;\n          toRect.left -= targetMatrix.e;\n        }\n        target.toRect = toRect;\n        if (target.thisAnimationDuration) {\n          // Could also check if animatingRect is between fromRect and toRect\n          if (isRectEqual(prevFromRect, toRect) && !isRectEqual(fromRect, toRect) &&\n          // Make sure animatingRect is on line between toRect & fromRect\n          (animatingRect.top - toRect.top) / (animatingRect.left - toRect.left) === (fromRect.top - toRect.top) / (fromRect.left - toRect.left)) {\n            // If returning to same place as started from animation and on same axis\n            time = calculateRealTime(animatingRect, prevFromRect, prevToRect, _this.options);\n          }\n        } // if fromRect != toRect: animate\n\n        if (!isRectEqual(toRect, fromRect)) {\n          target.prevFromRect = fromRect;\n          target.prevToRect = toRect;\n          if (!time) {\n            time = _this.options.animation;\n          }\n          _this.animate(target, animatingRect, toRect, time);\n        }\n        if (time) {\n          animating = true;\n          animationTime = Math.max(animationTime, time);\n          clearTimeout(target.animationResetTimer);\n          target.animationResetTimer = setTimeout(function () {\n            target.animationTime = 0;\n            target.prevFromRect = null;\n            target.fromRect = null;\n            target.prevToRect = null;\n            target.thisAnimationDuration = null;\n          }, time);\n          target.thisAnimationDuration = time;\n        }\n      });\n      clearTimeout(animationCallbackId);\n      if (!animating) {\n        if (typeof callback === 'function') callback();\n      } else {\n        animationCallbackId = setTimeout(function () {\n          if (typeof callback === 'function') callback();\n        }, animationTime);\n      }\n      animationStates = [];\n    },\n    animate: function animate(target, currentRect, toRect, duration) {\n      if (duration) {\n        css(target, 'transition', '');\n        css(target, 'transform', '');\n        var elMatrix = matrix(this.el),\n          scaleX = elMatrix && elMatrix.a,\n          scaleY = elMatrix && elMatrix.d,\n          translateX = (currentRect.left - toRect.left) / (scaleX || 1),\n          translateY = (currentRect.top - toRect.top) / (scaleY || 1);\n        target.animatingX = !!translateX;\n        target.animatingY = !!translateY;\n        css(target, 'transform', 'translate3d(' + translateX + 'px,' + translateY + 'px,0)');\n        repaint(target); // repaint\n\n        css(target, 'transition', 'transform ' + duration + 'ms' + (this.options.easing ? ' ' + this.options.easing : ''));\n        css(target, 'transform', 'translate3d(0,0,0)');\n        typeof target.animated === 'number' && clearTimeout(target.animated);\n        target.animated = setTimeout(function () {\n          css(target, 'transition', '');\n          css(target, 'transform', '');\n          target.animated = false;\n          target.animatingX = false;\n          target.animatingY = false;\n        }, duration);\n      }\n    }\n  };\n}\nfunction repaint(target) {\n  return target.offsetWidth;\n}\nfunction calculateRealTime(animatingRect, fromRect, toRect, options) {\n  return Math.sqrt(Math.pow(fromRect.top - animatingRect.top, 2) + Math.pow(fromRect.left - animatingRect.left, 2)) / Math.sqrt(Math.pow(fromRect.top - toRect.top, 2) + Math.pow(fromRect.left - toRect.left, 2)) * options.animation;\n}\nvar plugins = [];\nvar defaults = {\n  initializeByDefault: true\n};\nvar PluginManager = {\n  mount: function mount(plugin) {\n    // Set default static properties\n    for (var option in defaults) {\n      if (defaults.hasOwnProperty(option) && !(option in plugin)) {\n        plugin[option] = defaults[option];\n      }\n    }\n    plugins.push(plugin);\n  },\n  pluginEvent: function pluginEvent(eventName, sortable, evt) {\n    var _this = this;\n    this.eventCanceled = false;\n    evt.cancel = function () {\n      _this.eventCanceled = true;\n    };\n    var eventNameGlobal = eventName + 'Global';\n    plugins.forEach(function (plugin) {\n      if (!sortable[plugin.pluginName]) return; // Fire global events if it exists in this sortable\n\n      if (sortable[plugin.pluginName][eventNameGlobal]) {\n        sortable[plugin.pluginName][eventNameGlobal](_objectSpread({\n          sortable: sortable\n        }, evt));\n      } // Only fire plugin event if plugin is enabled in this sortable,\n      // and plugin has event defined\n\n      if (sortable.options[plugin.pluginName] && sortable[plugin.pluginName][eventName]) {\n        sortable[plugin.pluginName][eventName](_objectSpread({\n          sortable: sortable\n        }, evt));\n      }\n    });\n  },\n  initializePlugins: function initializePlugins(sortable, el, defaults, options) {\n    plugins.forEach(function (plugin) {\n      var pluginName = plugin.pluginName;\n      if (!sortable.options[pluginName] && !plugin.initializeByDefault) return;\n      var initialized = new plugin(sortable, el, sortable.options);\n      initialized.sortable = sortable;\n      initialized.options = sortable.options;\n      sortable[pluginName] = initialized; // Add default options from plugin\n\n      _extends(defaults, initialized.defaults);\n    });\n    for (var option in sortable.options) {\n      if (!sortable.options.hasOwnProperty(option)) continue;\n      var modified = this.modifyOption(sortable, option, sortable.options[option]);\n      if (typeof modified !== 'undefined') {\n        sortable.options[option] = modified;\n      }\n    }\n  },\n  getEventProperties: function getEventProperties(name, sortable) {\n    var eventProperties = {};\n    plugins.forEach(function (plugin) {\n      if (typeof plugin.eventProperties !== 'function') return;\n      _extends(eventProperties, plugin.eventProperties.call(sortable[plugin.pluginName], name));\n    });\n    return eventProperties;\n  },\n  modifyOption: function modifyOption(sortable, name, value) {\n    var modifiedValue;\n    plugins.forEach(function (plugin) {\n      // Plugin must exist on the Sortable\n      if (!sortable[plugin.pluginName]) return; // If static option listener exists for this option, call in the context of the Sortable's instance of this plugin\n\n      if (plugin.optionListeners && typeof plugin.optionListeners[name] === 'function') {\n        modifiedValue = plugin.optionListeners[name].call(sortable[plugin.pluginName], value);\n      }\n    });\n    return modifiedValue;\n  }\n};\nfunction dispatchEvent(_ref) {\n  var sortable = _ref.sortable,\n    rootEl = _ref.rootEl,\n    name = _ref.name,\n    targetEl = _ref.targetEl,\n    cloneEl = _ref.cloneEl,\n    toEl = _ref.toEl,\n    fromEl = _ref.fromEl,\n    oldIndex = _ref.oldIndex,\n    newIndex = _ref.newIndex,\n    oldDraggableIndex = _ref.oldDraggableIndex,\n    newDraggableIndex = _ref.newDraggableIndex,\n    originalEvent = _ref.originalEvent,\n    putSortable = _ref.putSortable,\n    extraEventProperties = _ref.extraEventProperties;\n  sortable = sortable || rootEl && rootEl[expando];\n  if (!sortable) return;\n  var evt,\n    options = sortable.options,\n    onName = 'on' + name.charAt(0).toUpperCase() + name.substr(1); // Support for new CustomEvent feature\n\n  if (window.CustomEvent && !IE11OrLess && !Edge) {\n    evt = new CustomEvent(name, {\n      bubbles: true,\n      cancelable: true\n    });\n  } else {\n    evt = document.createEvent('Event');\n    evt.initEvent(name, true, true);\n  }\n  evt.to = toEl || rootEl;\n  evt.from = fromEl || rootEl;\n  evt.item = targetEl || rootEl;\n  evt.clone = cloneEl;\n  evt.oldIndex = oldIndex;\n  evt.newIndex = newIndex;\n  evt.oldDraggableIndex = oldDraggableIndex;\n  evt.newDraggableIndex = newDraggableIndex;\n  evt.originalEvent = originalEvent;\n  evt.pullMode = putSortable ? putSortable.lastPutMode : undefined;\n  var allEventProperties = _objectSpread({}, extraEventProperties, PluginManager.getEventProperties(name, sortable));\n  for (var option in allEventProperties) {\n    evt[option] = allEventProperties[option];\n  }\n  if (rootEl) {\n    rootEl.dispatchEvent(evt);\n  }\n  if (options[onName]) {\n    options[onName].call(sortable, evt);\n  }\n}\nvar pluginEvent = function pluginEvent(eventName, sortable) {\n  var _ref = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {},\n    originalEvent = _ref.evt,\n    data = _objectWithoutProperties(_ref, [\"evt\"]);\n  PluginManager.pluginEvent.bind(Sortable)(eventName, sortable, _objectSpread({\n    dragEl: dragEl,\n    parentEl: parentEl,\n    ghostEl: ghostEl,\n    rootEl: rootEl,\n    nextEl: nextEl,\n    lastDownEl: lastDownEl,\n    cloneEl: cloneEl,\n    cloneHidden: cloneHidden,\n    dragStarted: moved,\n    putSortable: putSortable,\n    activeSortable: Sortable.active,\n    originalEvent: originalEvent,\n    oldIndex: oldIndex,\n    oldDraggableIndex: oldDraggableIndex,\n    newIndex: newIndex,\n    newDraggableIndex: newDraggableIndex,\n    hideGhostForTarget: _hideGhostForTarget,\n    unhideGhostForTarget: _unhideGhostForTarget,\n    cloneNowHidden: function cloneNowHidden() {\n      cloneHidden = true;\n    },\n    cloneNowShown: function cloneNowShown() {\n      cloneHidden = false;\n    },\n    dispatchSortableEvent: function dispatchSortableEvent(name) {\n      _dispatchEvent({\n        sortable: sortable,\n        name: name,\n        originalEvent: originalEvent\n      });\n    }\n  }, data));\n};\nfunction _dispatchEvent(info) {\n  dispatchEvent(_objectSpread({\n    putSortable: putSortable,\n    cloneEl: cloneEl,\n    targetEl: dragEl,\n    rootEl: rootEl,\n    oldIndex: oldIndex,\n    oldDraggableIndex: oldDraggableIndex,\n    newIndex: newIndex,\n    newDraggableIndex: newDraggableIndex\n  }, info));\n}\nvar dragEl,\n  parentEl,\n  ghostEl,\n  rootEl,\n  nextEl,\n  lastDownEl,\n  cloneEl,\n  cloneHidden,\n  oldIndex,\n  newIndex,\n  oldDraggableIndex,\n  newDraggableIndex,\n  activeGroup,\n  putSortable,\n  awaitingDragStarted = false,\n  ignoreNextClick = false,\n  sortables = [],\n  tapEvt,\n  touchEvt,\n  lastDx,\n  lastDy,\n  tapDistanceLeft,\n  tapDistanceTop,\n  moved,\n  lastTarget,\n  lastDirection,\n  pastFirstInvertThresh = false,\n  isCircumstantialInvert = false,\n  targetMoveDistance,\n  // For positioning ghost absolutely\n  ghostRelativeParent,\n  ghostRelativeParentInitialScroll = [],\n  // (left, top)\n  _silent = false,\n  savedInputChecked = [];\n/** @const */\n\nvar documentExists = typeof document !== 'undefined',\n  PositionGhostAbsolutely = IOS,\n  CSSFloatProperty = Edge || IE11OrLess ? 'cssFloat' : 'float',\n  // This will not pass for IE9, because IE9 DnD only works on anchors\n  supportDraggable = documentExists && !ChromeForAndroid && !IOS && 'draggable' in document.createElement('div'),\n  supportCssPointerEvents = function () {\n    if (!documentExists) return; // false when <= IE11\n\n    if (IE11OrLess) {\n      return false;\n    }\n    var el = document.createElement('x');\n    el.style.cssText = 'pointer-events:auto';\n    return el.style.pointerEvents === 'auto';\n  }(),\n  _detectDirection = function _detectDirection(el, options) {\n    var elCSS = css(el),\n      elWidth = parseInt(elCSS.width) - parseInt(elCSS.paddingLeft) - parseInt(elCSS.paddingRight) - parseInt(elCSS.borderLeftWidth) - parseInt(elCSS.borderRightWidth),\n      child1 = getChild(el, 0, options),\n      child2 = getChild(el, 1, options),\n      firstChildCSS = child1 && css(child1),\n      secondChildCSS = child2 && css(child2),\n      firstChildWidth = firstChildCSS && parseInt(firstChildCSS.marginLeft) + parseInt(firstChildCSS.marginRight) + getRect(child1).width,\n      secondChildWidth = secondChildCSS && parseInt(secondChildCSS.marginLeft) + parseInt(secondChildCSS.marginRight) + getRect(child2).width;\n    if (elCSS.display === 'flex') {\n      return elCSS.flexDirection === 'column' || elCSS.flexDirection === 'column-reverse' ? 'vertical' : 'horizontal';\n    }\n    if (elCSS.display === 'grid') {\n      return elCSS.gridTemplateColumns.split(' ').length <= 1 ? 'vertical' : 'horizontal';\n    }\n    if (child1 && firstChildCSS[\"float\"] && firstChildCSS[\"float\"] !== 'none') {\n      var touchingSideChild2 = firstChildCSS[\"float\"] === 'left' ? 'left' : 'right';\n      return child2 && (secondChildCSS.clear === 'both' || secondChildCSS.clear === touchingSideChild2) ? 'vertical' : 'horizontal';\n    }\n    return child1 && (firstChildCSS.display === 'block' || firstChildCSS.display === 'flex' || firstChildCSS.display === 'table' || firstChildCSS.display === 'grid' || firstChildWidth >= elWidth && elCSS[CSSFloatProperty] === 'none' || child2 && elCSS[CSSFloatProperty] === 'none' && firstChildWidth + secondChildWidth > elWidth) ? 'vertical' : 'horizontal';\n  },\n  _dragElInRowColumn = function _dragElInRowColumn(dragRect, targetRect, vertical) {\n    var dragElS1Opp = vertical ? dragRect.left : dragRect.top,\n      dragElS2Opp = vertical ? dragRect.right : dragRect.bottom,\n      dragElOppLength = vertical ? dragRect.width : dragRect.height,\n      targetS1Opp = vertical ? targetRect.left : targetRect.top,\n      targetS2Opp = vertical ? targetRect.right : targetRect.bottom,\n      targetOppLength = vertical ? targetRect.width : targetRect.height;\n    return dragElS1Opp === targetS1Opp || dragElS2Opp === targetS2Opp || dragElS1Opp + dragElOppLength / 2 === targetS1Opp + targetOppLength / 2;\n  },\n  /**\n   * Detects first nearest empty sortable to X and Y position using emptyInsertThreshold.\n   * @param  {Number} x      X position\n   * @param  {Number} y      Y position\n   * @return {HTMLElement}   Element of the first found nearest Sortable\n   */\n  _detectNearestEmptySortable = function _detectNearestEmptySortable(x, y) {\n    var ret;\n    sortables.some(function (sortable) {\n      if (lastChild(sortable)) return;\n      var rect = getRect(sortable),\n        threshold = sortable[expando].options.emptyInsertThreshold,\n        insideHorizontally = x >= rect.left - threshold && x <= rect.right + threshold,\n        insideVertically = y >= rect.top - threshold && y <= rect.bottom + threshold;\n      if (threshold && insideHorizontally && insideVertically) {\n        return ret = sortable;\n      }\n    });\n    return ret;\n  },\n  _prepareGroup = function _prepareGroup(options) {\n    function toFn(value, pull) {\n      return function (to, from, dragEl, evt) {\n        var sameGroup = to.options.group.name && from.options.group.name && to.options.group.name === from.options.group.name;\n        if (value == null && (pull || sameGroup)) {\n          // Default pull value\n          // Default pull and put value if same group\n          return true;\n        } else if (value == null || value === false) {\n          return false;\n        } else if (pull && value === 'clone') {\n          return value;\n        } else if (typeof value === 'function') {\n          return toFn(value(to, from, dragEl, evt), pull)(to, from, dragEl, evt);\n        } else {\n          var otherGroup = (pull ? to : from).options.group.name;\n          return value === true || typeof value === 'string' && value === otherGroup || value.join && value.indexOf(otherGroup) > -1;\n        }\n      };\n    }\n    var group = {};\n    var originalGroup = options.group;\n    if (!originalGroup || _typeof(originalGroup) != 'object') {\n      originalGroup = {\n        name: originalGroup\n      };\n    }\n    group.name = originalGroup.name;\n    group.checkPull = toFn(originalGroup.pull, true);\n    group.checkPut = toFn(originalGroup.put);\n    group.revertClone = originalGroup.revertClone;\n    options.group = group;\n  },\n  _hideGhostForTarget = function _hideGhostForTarget() {\n    if (!supportCssPointerEvents && ghostEl) {\n      css(ghostEl, 'display', 'none');\n    }\n  },\n  _unhideGhostForTarget = function _unhideGhostForTarget() {\n    if (!supportCssPointerEvents && ghostEl) {\n      css(ghostEl, 'display', '');\n    }\n  }; // #1184 fix - Prevent click event on fallback if dragged but item not changed position\n\nif (documentExists) {\n  document.addEventListener('click', function (evt) {\n    if (ignoreNextClick) {\n      evt.preventDefault();\n      evt.stopPropagation && evt.stopPropagation();\n      evt.stopImmediatePropagation && evt.stopImmediatePropagation();\n      ignoreNextClick = false;\n      return false;\n    }\n  }, true);\n}\nvar nearestEmptyInsertDetectEvent = function nearestEmptyInsertDetectEvent(evt) {\n  if (dragEl) {\n    evt = evt.touches ? evt.touches[0] : evt;\n    var nearest = _detectNearestEmptySortable(evt.clientX, evt.clientY);\n    if (nearest) {\n      // Create imitation event\n      var event = {};\n      for (var i in evt) {\n        if (evt.hasOwnProperty(i)) {\n          event[i] = evt[i];\n        }\n      }\n      event.target = event.rootEl = nearest;\n      event.preventDefault = void 0;\n      event.stopPropagation = void 0;\n      nearest[expando]._onDragOver(event);\n    }\n  }\n};\nvar _checkOutsideTargetEl = function _checkOutsideTargetEl(evt) {\n  if (dragEl) {\n    dragEl.parentNode[expando]._isOutsideThisEl(evt.target);\n  }\n};\n/**\n * @class  Sortable\n * @param  {HTMLElement}  el\n * @param  {Object}       [options]\n */\n\nfunction Sortable(el, options) {\n  if (!(el && el.nodeType && el.nodeType === 1)) {\n    throw \"Sortable: `el` must be an HTMLElement, not \".concat({}.toString.call(el));\n  }\n  this.el = el; // root element\n\n  this.options = options = _extends({}, options); // Export instance\n\n  el[expando] = this;\n  var defaults = {\n    group: null,\n    sort: true,\n    disabled: false,\n    store: null,\n    handle: null,\n    draggable: /^[uo]l$/i.test(el.nodeName) ? '>li' : '>*',\n    swapThreshold: 1,\n    // percentage; 0 <= x <= 1\n    invertSwap: false,\n    // invert always\n    invertedSwapThreshold: null,\n    // will be set to same as swapThreshold if default\n    removeCloneOnHide: true,\n    direction: function direction() {\n      return _detectDirection(el, this.options);\n    },\n    ghostClass: 'sortable-ghost',\n    chosenClass: 'sortable-chosen',\n    dragClass: 'sortable-drag',\n    ignore: 'a, img',\n    filter: null,\n    preventOnFilter: true,\n    animation: 0,\n    easing: null,\n    setData: function setData(dataTransfer, dragEl) {\n      dataTransfer.setData('Text', dragEl.textContent);\n    },\n    dropBubble: false,\n    dragoverBubble: false,\n    dataIdAttr: 'data-id',\n    delay: 0,\n    delayOnTouchOnly: false,\n    touchStartThreshold: (Number.parseInt ? Number : window).parseInt(window.devicePixelRatio, 10) || 1,\n    forceFallback: false,\n    fallbackClass: 'sortable-fallback',\n    fallbackOnBody: false,\n    fallbackTolerance: 0,\n    fallbackOffset: {\n      x: 0,\n      y: 0\n    },\n    supportPointer: Sortable.supportPointer !== false && 'PointerEvent' in window,\n    emptyInsertThreshold: 5\n  };\n  PluginManager.initializePlugins(this, el, defaults); // Set default options\n\n  for (var name in defaults) {\n    !(name in options) && (options[name] = defaults[name]);\n  }\n  _prepareGroup(options); // Bind all private methods\n\n  for (var fn in this) {\n    if (fn.charAt(0) === '_' && typeof this[fn] === 'function') {\n      this[fn] = this[fn].bind(this);\n    }\n  } // Setup drag mode\n\n  this.nativeDraggable = options.forceFallback ? false : supportDraggable;\n  if (this.nativeDraggable) {\n    // Touch start threshold cannot be greater than the native dragstart threshold\n    this.options.touchStartThreshold = 1;\n  } // Bind events\n\n  if (options.supportPointer) {\n    on(el, 'pointerdown', this._onTapStart);\n  } else {\n    on(el, 'mousedown', this._onTapStart);\n    on(el, 'touchstart', this._onTapStart);\n  }\n  if (this.nativeDraggable) {\n    on(el, 'dragover', this);\n    on(el, 'dragenter', this);\n  }\n  sortables.push(this.el); // Restore sorting\n\n  options.store && options.store.get && this.sort(options.store.get(this) || []); // Add animation state manager\n\n  _extends(this, AnimationStateManager());\n}\nSortable.prototype = /** @lends Sortable.prototype */\n{\n  constructor: Sortable,\n  _isOutsideThisEl: function _isOutsideThisEl(target) {\n    if (!this.el.contains(target) && target !== this.el) {\n      lastTarget = null;\n    }\n  },\n  _getDirection: function _getDirection(evt, target) {\n    return typeof this.options.direction === 'function' ? this.options.direction.call(this, evt, target, dragEl) : this.options.direction;\n  },\n  _onTapStart: function _onTapStart( /** Event|TouchEvent */\n  evt) {\n    if (!evt.cancelable) return;\n    var _this = this,\n      el = this.el,\n      options = this.options,\n      preventOnFilter = options.preventOnFilter,\n      type = evt.type,\n      touch = evt.touches && evt.touches[0] || evt.pointerType && evt.pointerType === 'touch' && evt,\n      target = (touch || evt).target,\n      originalTarget = evt.target.shadowRoot && (evt.path && evt.path[0] || evt.composedPath && evt.composedPath()[0]) || target,\n      filter = options.filter;\n    _saveInputCheckedState(el); // Don't trigger start event when an element is been dragged, otherwise the evt.oldindex always wrong when set option.group.\n\n    if (dragEl) {\n      return;\n    }\n    if (/mousedown|pointerdown/.test(type) && evt.button !== 0 || options.disabled) {\n      return; // only left button and enabled\n    } // cancel dnd if original target is content editable\n\n    if (originalTarget.isContentEditable) {\n      return;\n    }\n    target = closest(target, options.draggable, el, false);\n    if (target && target.animated) {\n      return;\n    }\n    if (lastDownEl === target) {\n      // Ignoring duplicate `down`\n      return;\n    } // Get the index of the dragged element within its parent\n\n    oldIndex = index(target);\n    oldDraggableIndex = index(target, options.draggable); // Check filter\n\n    if (typeof filter === 'function') {\n      if (filter.call(this, evt, target, this)) {\n        _dispatchEvent({\n          sortable: _this,\n          rootEl: originalTarget,\n          name: 'filter',\n          targetEl: target,\n          toEl: el,\n          fromEl: el\n        });\n        pluginEvent('filter', _this, {\n          evt: evt\n        });\n        preventOnFilter && evt.cancelable && evt.preventDefault();\n        return; // cancel dnd\n      }\n    } else if (filter) {\n      filter = filter.split(',').some(function (criteria) {\n        criteria = closest(originalTarget, criteria.trim(), el, false);\n        if (criteria) {\n          _dispatchEvent({\n            sortable: _this,\n            rootEl: criteria,\n            name: 'filter',\n            targetEl: target,\n            fromEl: el,\n            toEl: el\n          });\n          pluginEvent('filter', _this, {\n            evt: evt\n          });\n          return true;\n        }\n      });\n      if (filter) {\n        preventOnFilter && evt.cancelable && evt.preventDefault();\n        return; // cancel dnd\n      }\n    }\n\n    if (options.handle && !closest(originalTarget, options.handle, el, false)) {\n      return;\n    } // Prepare `dragstart`\n\n    this._prepareDragStart(evt, touch, target);\n  },\n  _prepareDragStart: function _prepareDragStart( /** Event */\n  evt, /** Touch */\n  touch, /** HTMLElement */\n  target) {\n    var _this = this,\n      el = _this.el,\n      options = _this.options,\n      ownerDocument = el.ownerDocument,\n      dragStartFn;\n    if (target && !dragEl && target.parentNode === el) {\n      var dragRect = getRect(target);\n      rootEl = el;\n      dragEl = target;\n      parentEl = dragEl.parentNode;\n      nextEl = dragEl.nextSibling;\n      lastDownEl = target;\n      activeGroup = options.group;\n      Sortable.dragged = dragEl;\n      tapEvt = {\n        target: dragEl,\n        clientX: (touch || evt).clientX,\n        clientY: (touch || evt).clientY\n      };\n      tapDistanceLeft = tapEvt.clientX - dragRect.left;\n      tapDistanceTop = tapEvt.clientY - dragRect.top;\n      this._lastX = (touch || evt).clientX;\n      this._lastY = (touch || evt).clientY;\n      dragEl.style['will-change'] = 'all';\n      dragStartFn = function dragStartFn() {\n        pluginEvent('delayEnded', _this, {\n          evt: evt\n        });\n        if (Sortable.eventCanceled) {\n          _this._onDrop();\n          return;\n        } // Delayed drag has been triggered\n        // we can re-enable the events: touchmove/mousemove\n\n        _this._disableDelayedDragEvents();\n        if (!FireFox && _this.nativeDraggable) {\n          dragEl.draggable = true;\n        } // Bind the events: dragstart/dragend\n\n        _this._triggerDragStart(evt, touch); // Drag start event\n\n        _dispatchEvent({\n          sortable: _this,\n          name: 'choose',\n          originalEvent: evt\n        }); // Chosen item\n\n        toggleClass(dragEl, options.chosenClass, true);\n      }; // Disable \"draggable\"\n\n      options.ignore.split(',').forEach(function (criteria) {\n        find(dragEl, criteria.trim(), _disableDraggable);\n      });\n      on(ownerDocument, 'dragover', nearestEmptyInsertDetectEvent);\n      on(ownerDocument, 'mousemove', nearestEmptyInsertDetectEvent);\n      on(ownerDocument, 'touchmove', nearestEmptyInsertDetectEvent);\n      on(ownerDocument, 'mouseup', _this._onDrop);\n      on(ownerDocument, 'touchend', _this._onDrop);\n      on(ownerDocument, 'touchcancel', _this._onDrop); // Make dragEl draggable (must be before delay for FireFox)\n\n      if (FireFox && this.nativeDraggable) {\n        this.options.touchStartThreshold = 4;\n        dragEl.draggable = true;\n      }\n      pluginEvent('delayStart', this, {\n        evt: evt\n      }); // Delay is impossible for native DnD in Edge or IE\n\n      if (options.delay && (!options.delayOnTouchOnly || touch) && (!this.nativeDraggable || !(Edge || IE11OrLess))) {\n        if (Sortable.eventCanceled) {\n          this._onDrop();\n          return;\n        } // If the user moves the pointer or let go the click or touch\n        // before the delay has been reached:\n        // disable the delayed drag\n\n        on(ownerDocument, 'mouseup', _this._disableDelayedDrag);\n        on(ownerDocument, 'touchend', _this._disableDelayedDrag);\n        on(ownerDocument, 'touchcancel', _this._disableDelayedDrag);\n        on(ownerDocument, 'mousemove', _this._delayedDragTouchMoveHandler);\n        on(ownerDocument, 'touchmove', _this._delayedDragTouchMoveHandler);\n        options.supportPointer && on(ownerDocument, 'pointermove', _this._delayedDragTouchMoveHandler);\n        _this._dragStartTimer = setTimeout(dragStartFn, options.delay);\n      } else {\n        dragStartFn();\n      }\n    }\n  },\n  _delayedDragTouchMoveHandler: function _delayedDragTouchMoveHandler( /** TouchEvent|PointerEvent **/\n  e) {\n    var touch = e.touches ? e.touches[0] : e;\n    if (Math.max(Math.abs(touch.clientX - this._lastX), Math.abs(touch.clientY - this._lastY)) >= Math.floor(this.options.touchStartThreshold / (this.nativeDraggable && window.devicePixelRatio || 1))) {\n      this._disableDelayedDrag();\n    }\n  },\n  _disableDelayedDrag: function _disableDelayedDrag() {\n    dragEl && _disableDraggable(dragEl);\n    clearTimeout(this._dragStartTimer);\n    this._disableDelayedDragEvents();\n  },\n  _disableDelayedDragEvents: function _disableDelayedDragEvents() {\n    var ownerDocument = this.el.ownerDocument;\n    off(ownerDocument, 'mouseup', this._disableDelayedDrag);\n    off(ownerDocument, 'touchend', this._disableDelayedDrag);\n    off(ownerDocument, 'touchcancel', this._disableDelayedDrag);\n    off(ownerDocument, 'mousemove', this._delayedDragTouchMoveHandler);\n    off(ownerDocument, 'touchmove', this._delayedDragTouchMoveHandler);\n    off(ownerDocument, 'pointermove', this._delayedDragTouchMoveHandler);\n  },\n  _triggerDragStart: function _triggerDragStart( /** Event */\n  evt, /** Touch */\n  touch) {\n    touch = touch || evt.pointerType == 'touch' && evt;\n    if (!this.nativeDraggable || touch) {\n      if (this.options.supportPointer) {\n        on(document, 'pointermove', this._onTouchMove);\n      } else if (touch) {\n        on(document, 'touchmove', this._onTouchMove);\n      } else {\n        on(document, 'mousemove', this._onTouchMove);\n      }\n    } else {\n      on(dragEl, 'dragend', this);\n      on(rootEl, 'dragstart', this._onDragStart);\n    }\n    try {\n      if (document.selection) {\n        // Timeout neccessary for IE9\n        _nextTick(function () {\n          document.selection.empty();\n        });\n      } else {\n        window.getSelection().removeAllRanges();\n      }\n    } catch (err) {}\n  },\n  _dragStarted: function _dragStarted(fallback, evt) {\n    awaitingDragStarted = false;\n    if (rootEl && dragEl) {\n      pluginEvent('dragStarted', this, {\n        evt: evt\n      });\n      if (this.nativeDraggable) {\n        on(document, 'dragover', _checkOutsideTargetEl);\n      }\n      var options = this.options; // Apply effect\n\n      !fallback && toggleClass(dragEl, options.dragClass, false);\n      toggleClass(dragEl, options.ghostClass, true);\n      Sortable.active = this;\n      fallback && this._appendGhost(); // Drag start event\n\n      _dispatchEvent({\n        sortable: this,\n        name: 'start',\n        originalEvent: evt\n      });\n    } else {\n      this._nulling();\n    }\n  },\n  _emulateDragOver: function _emulateDragOver() {\n    if (touchEvt) {\n      this._lastX = touchEvt.clientX;\n      this._lastY = touchEvt.clientY;\n      _hideGhostForTarget();\n      var target = document.elementFromPoint(touchEvt.clientX, touchEvt.clientY);\n      var parent = target;\n      while (target && target.shadowRoot) {\n        target = target.shadowRoot.elementFromPoint(touchEvt.clientX, touchEvt.clientY);\n        if (target === parent) break;\n        parent = target;\n      }\n      dragEl.parentNode[expando]._isOutsideThisEl(target);\n      if (parent) {\n        do {\n          if (parent[expando]) {\n            var inserted = void 0;\n            inserted = parent[expando]._onDragOver({\n              clientX: touchEvt.clientX,\n              clientY: touchEvt.clientY,\n              target: target,\n              rootEl: parent\n            });\n            if (inserted && !this.options.dragoverBubble) {\n              break;\n            }\n          }\n          target = parent; // store last element\n        }\n        /* jshint boss:true */ while (parent = parent.parentNode);\n      }\n      _unhideGhostForTarget();\n    }\n  },\n  _onTouchMove: function _onTouchMove( /**TouchEvent*/\n  evt) {\n    if (tapEvt) {\n      var options = this.options,\n        fallbackTolerance = options.fallbackTolerance,\n        fallbackOffset = options.fallbackOffset,\n        touch = evt.touches ? evt.touches[0] : evt,\n        ghostMatrix = ghostEl && matrix(ghostEl, true),\n        scaleX = ghostEl && ghostMatrix && ghostMatrix.a,\n        scaleY = ghostEl && ghostMatrix && ghostMatrix.d,\n        relativeScrollOffset = PositionGhostAbsolutely && ghostRelativeParent && getRelativeScrollOffset(ghostRelativeParent),\n        dx = (touch.clientX - tapEvt.clientX + fallbackOffset.x) / (scaleX || 1) + (relativeScrollOffset ? relativeScrollOffset[0] - ghostRelativeParentInitialScroll[0] : 0) / (scaleX || 1),\n        dy = (touch.clientY - tapEvt.clientY + fallbackOffset.y) / (scaleY || 1) + (relativeScrollOffset ? relativeScrollOffset[1] - ghostRelativeParentInitialScroll[1] : 0) / (scaleY || 1); // only set the status to dragging, when we are actually dragging\n\n      if (!Sortable.active && !awaitingDragStarted) {\n        if (fallbackTolerance && Math.max(Math.abs(touch.clientX - this._lastX), Math.abs(touch.clientY - this._lastY)) < fallbackTolerance) {\n          return;\n        }\n        this._onDragStart(evt, true);\n      }\n      if (ghostEl) {\n        if (ghostMatrix) {\n          ghostMatrix.e += dx - (lastDx || 0);\n          ghostMatrix.f += dy - (lastDy || 0);\n        } else {\n          ghostMatrix = {\n            a: 1,\n            b: 0,\n            c: 0,\n            d: 1,\n            e: dx,\n            f: dy\n          };\n        }\n        var cssMatrix = \"matrix(\".concat(ghostMatrix.a, \",\").concat(ghostMatrix.b, \",\").concat(ghostMatrix.c, \",\").concat(ghostMatrix.d, \",\").concat(ghostMatrix.e, \",\").concat(ghostMatrix.f, \")\");\n        css(ghostEl, 'webkitTransform', cssMatrix);\n        css(ghostEl, 'mozTransform', cssMatrix);\n        css(ghostEl, 'msTransform', cssMatrix);\n        css(ghostEl, 'transform', cssMatrix);\n        lastDx = dx;\n        lastDy = dy;\n        touchEvt = touch;\n      }\n      evt.cancelable && evt.preventDefault();\n    }\n  },\n  _appendGhost: function _appendGhost() {\n    // Bug if using scale(): https://stackoverflow.com/questions/2637058\n    // Not being adjusted for\n    if (!ghostEl) {\n      var container = this.options.fallbackOnBody ? document.body : rootEl,\n        rect = getRect(dragEl, true, PositionGhostAbsolutely, true, container),\n        options = this.options; // Position absolutely\n\n      if (PositionGhostAbsolutely) {\n        // Get relatively positioned parent\n        ghostRelativeParent = container;\n        while (css(ghostRelativeParent, 'position') === 'static' && css(ghostRelativeParent, 'transform') === 'none' && ghostRelativeParent !== document) {\n          ghostRelativeParent = ghostRelativeParent.parentNode;\n        }\n        if (ghostRelativeParent !== document.body && ghostRelativeParent !== document.documentElement) {\n          if (ghostRelativeParent === document) ghostRelativeParent = getWindowScrollingElement();\n          rect.top += ghostRelativeParent.scrollTop;\n          rect.left += ghostRelativeParent.scrollLeft;\n        } else {\n          ghostRelativeParent = getWindowScrollingElement();\n        }\n        ghostRelativeParentInitialScroll = getRelativeScrollOffset(ghostRelativeParent);\n      }\n      ghostEl = dragEl.cloneNode(true);\n      toggleClass(ghostEl, options.ghostClass, false);\n      toggleClass(ghostEl, options.fallbackClass, true);\n      toggleClass(ghostEl, options.dragClass, true);\n      css(ghostEl, 'transition', '');\n      css(ghostEl, 'transform', '');\n      css(ghostEl, 'box-sizing', 'border-box');\n      css(ghostEl, 'margin', 0);\n      css(ghostEl, 'top', rect.top);\n      css(ghostEl, 'left', rect.left);\n      css(ghostEl, 'width', rect.width);\n      css(ghostEl, 'height', rect.height);\n      css(ghostEl, 'opacity', '0.8');\n      css(ghostEl, 'position', PositionGhostAbsolutely ? 'absolute' : 'fixed');\n      css(ghostEl, 'zIndex', '100000');\n      css(ghostEl, 'pointerEvents', 'none');\n      Sortable.ghost = ghostEl;\n      container.appendChild(ghostEl); // Set transform-origin\n\n      css(ghostEl, 'transform-origin', tapDistanceLeft / parseInt(ghostEl.style.width) * 100 + '% ' + tapDistanceTop / parseInt(ghostEl.style.height) * 100 + '%');\n    }\n  },\n  _onDragStart: function _onDragStart( /**Event*/\n  evt, /**boolean*/\n  fallback) {\n    var _this = this;\n    var dataTransfer = evt.dataTransfer;\n    var options = _this.options;\n    pluginEvent('dragStart', this, {\n      evt: evt\n    });\n    if (Sortable.eventCanceled) {\n      this._onDrop();\n      return;\n    }\n    pluginEvent('setupClone', this);\n    if (!Sortable.eventCanceled) {\n      cloneEl = clone(dragEl);\n      cloneEl.draggable = false;\n      cloneEl.style['will-change'] = '';\n      this._hideClone();\n      toggleClass(cloneEl, this.options.chosenClass, false);\n      Sortable.clone = cloneEl;\n    } // #1143: IFrame support workaround\n\n    _this.cloneId = _nextTick(function () {\n      pluginEvent('clone', _this);\n      if (Sortable.eventCanceled) return;\n      if (!_this.options.removeCloneOnHide) {\n        rootEl.insertBefore(cloneEl, dragEl);\n      }\n      _this._hideClone();\n      _dispatchEvent({\n        sortable: _this,\n        name: 'clone'\n      });\n    });\n    !fallback && toggleClass(dragEl, options.dragClass, true); // Set proper drop events\n\n    if (fallback) {\n      ignoreNextClick = true;\n      _this._loopId = setInterval(_this._emulateDragOver, 50);\n    } else {\n      // Undo what was set in _prepareDragStart before drag started\n      off(document, 'mouseup', _this._onDrop);\n      off(document, 'touchend', _this._onDrop);\n      off(document, 'touchcancel', _this._onDrop);\n      if (dataTransfer) {\n        dataTransfer.effectAllowed = 'move';\n        options.setData && options.setData.call(_this, dataTransfer, dragEl);\n      }\n      on(document, 'drop', _this); // #1276 fix:\n\n      css(dragEl, 'transform', 'translateZ(0)');\n    }\n    awaitingDragStarted = true;\n    _this._dragStartId = _nextTick(_this._dragStarted.bind(_this, fallback, evt));\n    on(document, 'selectstart', _this);\n    moved = true;\n    if (Safari) {\n      css(document.body, 'user-select', 'none');\n    }\n  },\n  // Returns true - if no further action is needed (either inserted or another condition)\n  _onDragOver: function _onDragOver( /**Event*/\n  evt) {\n    var el = this.el,\n      target = evt.target,\n      dragRect,\n      targetRect,\n      revert,\n      options = this.options,\n      group = options.group,\n      activeSortable = Sortable.active,\n      isOwner = activeGroup === group,\n      canSort = options.sort,\n      fromSortable = putSortable || activeSortable,\n      vertical,\n      _this = this,\n      completedFired = false;\n    if (_silent) return;\n    function dragOverEvent(name, extra) {\n      pluginEvent(name, _this, _objectSpread({\n        evt: evt,\n        isOwner: isOwner,\n        axis: vertical ? 'vertical' : 'horizontal',\n        revert: revert,\n        dragRect: dragRect,\n        targetRect: targetRect,\n        canSort: canSort,\n        fromSortable: fromSortable,\n        target: target,\n        completed: completed,\n        onMove: function onMove(target, after) {\n          return _onMove(rootEl, el, dragEl, dragRect, target, getRect(target), evt, after);\n        },\n        changed: changed\n      }, extra));\n    } // Capture animation state\n\n    function capture() {\n      dragOverEvent('dragOverAnimationCapture');\n      _this.captureAnimationState();\n      if (_this !== fromSortable) {\n        fromSortable.captureAnimationState();\n      }\n    } // Return invocation when dragEl is inserted (or completed)\n\n    function completed(insertion) {\n      dragOverEvent('dragOverCompleted', {\n        insertion: insertion\n      });\n      if (insertion) {\n        // Clones must be hidden before folding animation to capture dragRectAbsolute properly\n        if (isOwner) {\n          activeSortable._hideClone();\n        } else {\n          activeSortable._showClone(_this);\n        }\n        if (_this !== fromSortable) {\n          // Set ghost class to new sortable's ghost class\n          toggleClass(dragEl, putSortable ? putSortable.options.ghostClass : activeSortable.options.ghostClass, false);\n          toggleClass(dragEl, options.ghostClass, true);\n        }\n        if (putSortable !== _this && _this !== Sortable.active) {\n          putSortable = _this;\n        } else if (_this === Sortable.active && putSortable) {\n          putSortable = null;\n        } // Animation\n\n        if (fromSortable === _this) {\n          _this._ignoreWhileAnimating = target;\n        }\n        _this.animateAll(function () {\n          dragOverEvent('dragOverAnimationComplete');\n          _this._ignoreWhileAnimating = null;\n        });\n        if (_this !== fromSortable) {\n          fromSortable.animateAll();\n          fromSortable._ignoreWhileAnimating = null;\n        }\n      } // Null lastTarget if it is not inside a previously swapped element\n\n      if (target === dragEl && !dragEl.animated || target === el && !target.animated) {\n        lastTarget = null;\n      } // no bubbling and not fallback\n\n      if (!options.dragoverBubble && !evt.rootEl && target !== document) {\n        dragEl.parentNode[expando]._isOutsideThisEl(evt.target); // Do not detect for empty insert if already inserted\n\n        !insertion && nearestEmptyInsertDetectEvent(evt);\n      }\n      !options.dragoverBubble && evt.stopPropagation && evt.stopPropagation();\n      return completedFired = true;\n    } // Call when dragEl has been inserted\n\n    function changed() {\n      newIndex = index(dragEl);\n      newDraggableIndex = index(dragEl, options.draggable);\n      _dispatchEvent({\n        sortable: _this,\n        name: 'change',\n        toEl: el,\n        newIndex: newIndex,\n        newDraggableIndex: newDraggableIndex,\n        originalEvent: evt\n      });\n    }\n    if (evt.preventDefault !== void 0) {\n      evt.cancelable && evt.preventDefault();\n    }\n    target = closest(target, options.draggable, el, true);\n    dragOverEvent('dragOver');\n    if (Sortable.eventCanceled) return completedFired;\n    if (dragEl.contains(evt.target) || target.animated && target.animatingX && target.animatingY || _this._ignoreWhileAnimating === target) {\n      return completed(false);\n    }\n    ignoreNextClick = false;\n    if (activeSortable && !options.disabled && (isOwner ? canSort || (revert = !rootEl.contains(dragEl)) // Reverting item into the original list\n    : putSortable === this || (this.lastPutMode = activeGroup.checkPull(this, activeSortable, dragEl, evt)) && group.checkPut(this, activeSortable, dragEl, evt))) {\n      vertical = this._getDirection(evt, target) === 'vertical';\n      dragRect = getRect(dragEl);\n      dragOverEvent('dragOverValid');\n      if (Sortable.eventCanceled) return completedFired;\n      if (revert) {\n        parentEl = rootEl; // actualization\n\n        capture();\n        this._hideClone();\n        dragOverEvent('revert');\n        if (!Sortable.eventCanceled) {\n          if (nextEl) {\n            rootEl.insertBefore(dragEl, nextEl);\n          } else {\n            rootEl.appendChild(dragEl);\n          }\n        }\n        return completed(true);\n      }\n      var elLastChild = lastChild(el, options.draggable);\n      if (!elLastChild || _ghostIsLast(evt, vertical, this) && !elLastChild.animated) {\n        // If already at end of list: Do not insert\n        if (elLastChild === dragEl) {\n          return completed(false);\n        } // assign target only if condition is true\n\n        if (elLastChild && el === evt.target) {\n          target = elLastChild;\n        }\n        if (target) {\n          targetRect = getRect(target);\n        }\n        if (_onMove(rootEl, el, dragEl, dragRect, target, targetRect, evt, !!target) !== false) {\n          capture();\n          el.appendChild(dragEl);\n          parentEl = el; // actualization\n\n          changed();\n          return completed(true);\n        }\n      } else if (target.parentNode === el) {\n        targetRect = getRect(target);\n        var direction = 0,\n          targetBeforeFirstSwap,\n          differentLevel = dragEl.parentNode !== el,\n          differentRowCol = !_dragElInRowColumn(dragEl.animated && dragEl.toRect || dragRect, target.animated && target.toRect || targetRect, vertical),\n          side1 = vertical ? 'top' : 'left',\n          scrolledPastTop = isScrolledPast(target, 'top', 'top') || isScrolledPast(dragEl, 'top', 'top'),\n          scrollBefore = scrolledPastTop ? scrolledPastTop.scrollTop : void 0;\n        if (lastTarget !== target) {\n          targetBeforeFirstSwap = targetRect[side1];\n          pastFirstInvertThresh = false;\n          isCircumstantialInvert = !differentRowCol && options.invertSwap || differentLevel;\n        }\n        direction = _getSwapDirection(evt, target, targetRect, vertical, differentRowCol ? 1 : options.swapThreshold, options.invertedSwapThreshold == null ? options.swapThreshold : options.invertedSwapThreshold, isCircumstantialInvert, lastTarget === target);\n        var sibling;\n        if (direction !== 0) {\n          // Check if target is beside dragEl in respective direction (ignoring hidden elements)\n          var dragIndex = index(dragEl);\n          do {\n            dragIndex -= direction;\n            sibling = parentEl.children[dragIndex];\n          } while (sibling && (css(sibling, 'display') === 'none' || sibling === ghostEl));\n        } // If dragEl is already beside target: Do not insert\n\n        if (direction === 0 || sibling === target) {\n          return completed(false);\n        }\n        lastTarget = target;\n        lastDirection = direction;\n        var nextSibling = target.nextElementSibling,\n          after = false;\n        after = direction === 1;\n        var moveVector = _onMove(rootEl, el, dragEl, dragRect, target, targetRect, evt, after);\n        if (moveVector !== false) {\n          if (moveVector === 1 || moveVector === -1) {\n            after = moveVector === 1;\n          }\n          _silent = true;\n          setTimeout(_unsilent, 30);\n          capture();\n          if (after && !nextSibling) {\n            el.appendChild(dragEl);\n          } else {\n            target.parentNode.insertBefore(dragEl, after ? nextSibling : target);\n          } // Undo chrome's scroll adjustment (has no effect on other browsers)\n\n          if (scrolledPastTop) {\n            scrollBy(scrolledPastTop, 0, scrollBefore - scrolledPastTop.scrollTop);\n          }\n          parentEl = dragEl.parentNode; // actualization\n          // must be done before animation\n\n          if (targetBeforeFirstSwap !== undefined && !isCircumstantialInvert) {\n            targetMoveDistance = Math.abs(targetBeforeFirstSwap - getRect(target)[side1]);\n          }\n          changed();\n          return completed(true);\n        }\n      }\n      if (el.contains(dragEl)) {\n        return completed(false);\n      }\n    }\n    return false;\n  },\n  _ignoreWhileAnimating: null,\n  _offMoveEvents: function _offMoveEvents() {\n    off(document, 'mousemove', this._onTouchMove);\n    off(document, 'touchmove', this._onTouchMove);\n    off(document, 'pointermove', this._onTouchMove);\n    off(document, 'dragover', nearestEmptyInsertDetectEvent);\n    off(document, 'mousemove', nearestEmptyInsertDetectEvent);\n    off(document, 'touchmove', nearestEmptyInsertDetectEvent);\n  },\n  _offUpEvents: function _offUpEvents() {\n    var ownerDocument = this.el.ownerDocument;\n    off(ownerDocument, 'mouseup', this._onDrop);\n    off(ownerDocument, 'touchend', this._onDrop);\n    off(ownerDocument, 'pointerup', this._onDrop);\n    off(ownerDocument, 'touchcancel', this._onDrop);\n    off(document, 'selectstart', this);\n  },\n  _onDrop: function _onDrop( /**Event*/\n  evt) {\n    var el = this.el,\n      options = this.options; // Get the index of the dragged element within its parent\n\n    newIndex = index(dragEl);\n    newDraggableIndex = index(dragEl, options.draggable);\n    pluginEvent('drop', this, {\n      evt: evt\n    });\n    parentEl = dragEl && dragEl.parentNode; // Get again after plugin event\n\n    newIndex = index(dragEl);\n    newDraggableIndex = index(dragEl, options.draggable);\n    if (Sortable.eventCanceled) {\n      this._nulling();\n      return;\n    }\n    awaitingDragStarted = false;\n    isCircumstantialInvert = false;\n    pastFirstInvertThresh = false;\n    clearInterval(this._loopId);\n    clearTimeout(this._dragStartTimer);\n    _cancelNextTick(this.cloneId);\n    _cancelNextTick(this._dragStartId); // Unbind events\n\n    if (this.nativeDraggable) {\n      off(document, 'drop', this);\n      off(el, 'dragstart', this._onDragStart);\n    }\n    this._offMoveEvents();\n    this._offUpEvents();\n    if (Safari) {\n      css(document.body, 'user-select', '');\n    }\n    css(dragEl, 'transform', '');\n    if (evt) {\n      if (moved) {\n        evt.cancelable && evt.preventDefault();\n        !options.dropBubble && evt.stopPropagation();\n      }\n      ghostEl && ghostEl.parentNode && ghostEl.parentNode.removeChild(ghostEl);\n      if (rootEl === parentEl || putSortable && putSortable.lastPutMode !== 'clone') {\n        // Remove clone(s)\n        cloneEl && cloneEl.parentNode && cloneEl.parentNode.removeChild(cloneEl);\n      }\n      if (dragEl) {\n        if (this.nativeDraggable) {\n          off(dragEl, 'dragend', this);\n        }\n        _disableDraggable(dragEl);\n        dragEl.style['will-change'] = ''; // Remove classes\n        // ghostClass is added in dragStarted\n\n        if (moved && !awaitingDragStarted) {\n          toggleClass(dragEl, putSortable ? putSortable.options.ghostClass : this.options.ghostClass, false);\n        }\n        toggleClass(dragEl, this.options.chosenClass, false); // Drag stop event\n\n        _dispatchEvent({\n          sortable: this,\n          name: 'unchoose',\n          toEl: parentEl,\n          newIndex: null,\n          newDraggableIndex: null,\n          originalEvent: evt\n        });\n        if (rootEl !== parentEl) {\n          if (newIndex >= 0) {\n            // Add event\n            _dispatchEvent({\n              rootEl: parentEl,\n              name: 'add',\n              toEl: parentEl,\n              fromEl: rootEl,\n              originalEvent: evt\n            }); // Remove event\n\n            _dispatchEvent({\n              sortable: this,\n              name: 'remove',\n              toEl: parentEl,\n              originalEvent: evt\n            }); // drag from one list and drop into another\n\n            _dispatchEvent({\n              rootEl: parentEl,\n              name: 'sort',\n              toEl: parentEl,\n              fromEl: rootEl,\n              originalEvent: evt\n            });\n            _dispatchEvent({\n              sortable: this,\n              name: 'sort',\n              toEl: parentEl,\n              originalEvent: evt\n            });\n          }\n          putSortable && putSortable.save();\n        } else {\n          if (newIndex !== oldIndex) {\n            if (newIndex >= 0) {\n              // drag & drop within the same list\n              _dispatchEvent({\n                sortable: this,\n                name: 'update',\n                toEl: parentEl,\n                originalEvent: evt\n              });\n              _dispatchEvent({\n                sortable: this,\n                name: 'sort',\n                toEl: parentEl,\n                originalEvent: evt\n              });\n            }\n          }\n        }\n        if (Sortable.active) {\n          /* jshint eqnull:true */\n          if (newIndex == null || newIndex === -1) {\n            newIndex = oldIndex;\n            newDraggableIndex = oldDraggableIndex;\n          }\n          _dispatchEvent({\n            sortable: this,\n            name: 'end',\n            toEl: parentEl,\n            originalEvent: evt\n          }); // Save sorting\n\n          this.save();\n        }\n      }\n    }\n    this._nulling();\n  },\n  _nulling: function _nulling() {\n    pluginEvent('nulling', this);\n    rootEl = dragEl = parentEl = ghostEl = nextEl = cloneEl = lastDownEl = cloneHidden = tapEvt = touchEvt = moved = newIndex = newDraggableIndex = oldIndex = oldDraggableIndex = lastTarget = lastDirection = putSortable = activeGroup = Sortable.dragged = Sortable.ghost = Sortable.clone = Sortable.active = null;\n    savedInputChecked.forEach(function (el) {\n      el.checked = true;\n    });\n    savedInputChecked.length = lastDx = lastDy = 0;\n  },\n  handleEvent: function handleEvent( /**Event*/\n  evt) {\n    switch (evt.type) {\n      case 'drop':\n      case 'dragend':\n        this._onDrop(evt);\n        break;\n      case 'dragenter':\n      case 'dragover':\n        if (dragEl) {\n          this._onDragOver(evt);\n          _globalDragOver(evt);\n        }\n        break;\n      case 'selectstart':\n        evt.preventDefault();\n        break;\n    }\n  },\n  /**\n   * Serializes the item into an array of string.\n   * @returns {String[]}\n   */\n  toArray: function toArray() {\n    var order = [],\n      el,\n      children = this.el.children,\n      i = 0,\n      n = children.length,\n      options = this.options;\n    for (; i < n; i++) {\n      el = children[i];\n      if (closest(el, options.draggable, this.el, false)) {\n        order.push(el.getAttribute(options.dataIdAttr) || _generateId(el));\n      }\n    }\n    return order;\n  },\n  /**\n   * Sorts the elements according to the array.\n   * @param  {String[]}  order  order of the items\n   */\n  sort: function sort(order) {\n    var items = {},\n      rootEl = this.el;\n    this.toArray().forEach(function (id, i) {\n      var el = rootEl.children[i];\n      if (closest(el, this.options.draggable, rootEl, false)) {\n        items[id] = el;\n      }\n    }, this);\n    order.forEach(function (id) {\n      if (items[id]) {\n        rootEl.removeChild(items[id]);\n        rootEl.appendChild(items[id]);\n      }\n    });\n  },\n  /**\n   * Save the current sorting\n   */\n  save: function save() {\n    var store = this.options.store;\n    store && store.set && store.set(this);\n  },\n  /**\n   * For each element in the set, get the first element that matches the selector by testing the element itself and traversing up through its ancestors in the DOM tree.\n   * @param   {HTMLElement}  el\n   * @param   {String}       [selector]  default: `options.draggable`\n   * @returns {HTMLElement|null}\n   */\n  closest: function closest$1(el, selector) {\n    return closest(el, selector || this.options.draggable, this.el, false);\n  },\n  /**\n   * Set/get option\n   * @param   {string} name\n   * @param   {*}      [value]\n   * @returns {*}\n   */\n  option: function option(name, value) {\n    var options = this.options;\n    if (value === void 0) {\n      return options[name];\n    } else {\n      var modifiedValue = PluginManager.modifyOption(this, name, value);\n      if (typeof modifiedValue !== 'undefined') {\n        options[name] = modifiedValue;\n      } else {\n        options[name] = value;\n      }\n      if (name === 'group') {\n        _prepareGroup(options);\n      }\n    }\n  },\n  /**\n   * Destroy\n   */\n  destroy: function destroy() {\n    pluginEvent('destroy', this);\n    var el = this.el;\n    el[expando] = null;\n    off(el, 'mousedown', this._onTapStart);\n    off(el, 'touchstart', this._onTapStart);\n    off(el, 'pointerdown', this._onTapStart);\n    if (this.nativeDraggable) {\n      off(el, 'dragover', this);\n      off(el, 'dragenter', this);\n    } // Remove draggable attributes\n\n    Array.prototype.forEach.call(el.querySelectorAll('[draggable]'), function (el) {\n      el.removeAttribute('draggable');\n    });\n    this._onDrop();\n    this._disableDelayedDragEvents();\n    sortables.splice(sortables.indexOf(this.el), 1);\n    this.el = el = null;\n  },\n  _hideClone: function _hideClone() {\n    if (!cloneHidden) {\n      pluginEvent('hideClone', this);\n      if (Sortable.eventCanceled) return;\n      css(cloneEl, 'display', 'none');\n      if (this.options.removeCloneOnHide && cloneEl.parentNode) {\n        cloneEl.parentNode.removeChild(cloneEl);\n      }\n      cloneHidden = true;\n    }\n  },\n  _showClone: function _showClone(putSortable) {\n    if (putSortable.lastPutMode !== 'clone') {\n      this._hideClone();\n      return;\n    }\n    if (cloneHidden) {\n      pluginEvent('showClone', this);\n      if (Sortable.eventCanceled) return; // show clone at dragEl or original position\n\n      if (rootEl.contains(dragEl) && !this.options.group.revertClone) {\n        rootEl.insertBefore(cloneEl, dragEl);\n      } else if (nextEl) {\n        rootEl.insertBefore(cloneEl, nextEl);\n      } else {\n        rootEl.appendChild(cloneEl);\n      }\n      if (this.options.group.revertClone) {\n        this.animate(dragEl, cloneEl);\n      }\n      css(cloneEl, 'display', '');\n      cloneHidden = false;\n    }\n  }\n};\nfunction _globalDragOver( /**Event*/\nevt) {\n  if (evt.dataTransfer) {\n    evt.dataTransfer.dropEffect = 'move';\n  }\n  evt.cancelable && evt.preventDefault();\n}\nfunction _onMove(fromEl, toEl, dragEl, dragRect, targetEl, targetRect, originalEvent, willInsertAfter) {\n  var evt,\n    sortable = fromEl[expando],\n    onMoveFn = sortable.options.onMove,\n    retVal; // Support for new CustomEvent feature\n\n  if (window.CustomEvent && !IE11OrLess && !Edge) {\n    evt = new CustomEvent('move', {\n      bubbles: true,\n      cancelable: true\n    });\n  } else {\n    evt = document.createEvent('Event');\n    evt.initEvent('move', true, true);\n  }\n  evt.to = toEl;\n  evt.from = fromEl;\n  evt.dragged = dragEl;\n  evt.draggedRect = dragRect;\n  evt.related = targetEl || toEl;\n  evt.relatedRect = targetRect || getRect(toEl);\n  evt.willInsertAfter = willInsertAfter;\n  evt.originalEvent = originalEvent;\n  fromEl.dispatchEvent(evt);\n  if (onMoveFn) {\n    retVal = onMoveFn.call(sortable, evt, originalEvent);\n  }\n  return retVal;\n}\nfunction _disableDraggable(el) {\n  el.draggable = false;\n}\nfunction _unsilent() {\n  _silent = false;\n}\nfunction _ghostIsLast(evt, vertical, sortable) {\n  var rect = getRect(lastChild(sortable.el, sortable.options.draggable));\n  var spacer = 10;\n  return vertical ? evt.clientX > rect.right + spacer || evt.clientX <= rect.right && evt.clientY > rect.bottom && evt.clientX >= rect.left : evt.clientX > rect.right && evt.clientY > rect.top || evt.clientX <= rect.right && evt.clientY > rect.bottom + spacer;\n}\nfunction _getSwapDirection(evt, target, targetRect, vertical, swapThreshold, invertedSwapThreshold, invertSwap, isLastTarget) {\n  var mouseOnAxis = vertical ? evt.clientY : evt.clientX,\n    targetLength = vertical ? targetRect.height : targetRect.width,\n    targetS1 = vertical ? targetRect.top : targetRect.left,\n    targetS2 = vertical ? targetRect.bottom : targetRect.right,\n    invert = false;\n  if (!invertSwap) {\n    // Never invert or create dragEl shadow when target movemenet causes mouse to move past the end of regular swapThreshold\n    if (isLastTarget && targetMoveDistance < targetLength * swapThreshold) {\n      // multiplied only by swapThreshold because mouse will already be inside target by (1 - threshold) * targetLength / 2\n      // check if past first invert threshold on side opposite of lastDirection\n      if (!pastFirstInvertThresh && (lastDirection === 1 ? mouseOnAxis > targetS1 + targetLength * invertedSwapThreshold / 2 : mouseOnAxis < targetS2 - targetLength * invertedSwapThreshold / 2)) {\n        // past first invert threshold, do not restrict inverted threshold to dragEl shadow\n        pastFirstInvertThresh = true;\n      }\n      if (!pastFirstInvertThresh) {\n        // dragEl shadow (target move distance shadow)\n        if (lastDirection === 1 ? mouseOnAxis < targetS1 + targetMoveDistance // over dragEl shadow\n        : mouseOnAxis > targetS2 - targetMoveDistance) {\n          return -lastDirection;\n        }\n      } else {\n        invert = true;\n      }\n    } else {\n      // Regular\n      if (mouseOnAxis > targetS1 + targetLength * (1 - swapThreshold) / 2 && mouseOnAxis < targetS2 - targetLength * (1 - swapThreshold) / 2) {\n        return _getInsertDirection(target);\n      }\n    }\n  }\n  invert = invert || invertSwap;\n  if (invert) {\n    // Invert of regular\n    if (mouseOnAxis < targetS1 + targetLength * invertedSwapThreshold / 2 || mouseOnAxis > targetS2 - targetLength * invertedSwapThreshold / 2) {\n      return mouseOnAxis > targetS1 + targetLength / 2 ? 1 : -1;\n    }\n  }\n  return 0;\n}\n/**\n * Gets the direction dragEl must be swapped relative to target in order to make it\n * seem that dragEl has been \"inserted\" into that element's position\n * @param  {HTMLElement} target       The target whose position dragEl is being inserted at\n * @return {Number}                   Direction dragEl must be swapped\n */\n\nfunction _getInsertDirection(target) {\n  if (index(dragEl) < index(target)) {\n    return 1;\n  } else {\n    return -1;\n  }\n}\n/**\n * Generate id\n * @param   {HTMLElement} el\n * @returns {String}\n * @private\n */\n\nfunction _generateId(el) {\n  var str = el.tagName + el.className + el.src + el.href + el.textContent,\n    i = str.length,\n    sum = 0;\n  while (i--) {\n    sum += str.charCodeAt(i);\n  }\n  return sum.toString(36);\n}\nfunction _saveInputCheckedState(root) {\n  savedInputChecked.length = 0;\n  var inputs = root.getElementsByTagName('input');\n  var idx = inputs.length;\n  while (idx--) {\n    var el = inputs[idx];\n    el.checked && savedInputChecked.push(el);\n  }\n}\nfunction _nextTick(fn) {\n  return setTimeout(fn, 0);\n}\nfunction _cancelNextTick(id) {\n  return clearTimeout(id);\n} // Fixed #973:\n\nif (documentExists) {\n  on(document, 'touchmove', function (evt) {\n    if ((Sortable.active || awaitingDragStarted) && evt.cancelable) {\n      evt.preventDefault();\n    }\n  });\n} // Export utils\n\nSortable.utils = {\n  on: on,\n  off: off,\n  css: css,\n  find: find,\n  is: function is(el, selector) {\n    return !!closest(el, selector, el, false);\n  },\n  extend: extend,\n  throttle: throttle,\n  closest: closest,\n  toggleClass: toggleClass,\n  clone: clone,\n  index: index,\n  nextTick: _nextTick,\n  cancelNextTick: _cancelNextTick,\n  detectDirection: _detectDirection,\n  getChild: getChild\n};\n/**\n * Get the Sortable instance of an element\n * @param  {HTMLElement} element The element\n * @return {Sortable|undefined}         The instance of Sortable\n */\n\nSortable.get = function (element) {\n  return element[expando];\n};\n/**\n * Mount a plugin to Sortable\n * @param  {...SortablePlugin|SortablePlugin[]} plugins       Plugins being mounted\n */\n\nSortable.mount = function () {\n  for (var _len = arguments.length, plugins = new Array(_len), _key = 0; _key < _len; _key++) {\n    plugins[_key] = arguments[_key];\n  }\n  if (plugins[0].constructor === Array) plugins = plugins[0];\n  plugins.forEach(function (plugin) {\n    if (!plugin.prototype || !plugin.prototype.constructor) {\n      throw \"Sortable: Mounted plugin must be a constructor function, not \".concat({}.toString.call(plugin));\n    }\n    if (plugin.utils) Sortable.utils = _objectSpread({}, Sortable.utils, plugin.utils);\n    PluginManager.mount(plugin);\n  });\n};\n/**\n * Create sortable instance\n * @param {HTMLElement}  el\n * @param {Object}      [options]\n */\n\nSortable.create = function (el, options) {\n  return new Sortable(el, options);\n}; // Export\n\nSortable.version = version;\nvar autoScrolls = [],\n  scrollEl,\n  scrollRootEl,\n  scrolling = false,\n  lastAutoScrollX,\n  lastAutoScrollY,\n  touchEvt$1,\n  pointerElemChangedInterval;\nfunction AutoScrollPlugin() {\n  function AutoScroll() {\n    this.defaults = {\n      scroll: true,\n      scrollSensitivity: 30,\n      scrollSpeed: 10,\n      bubbleScroll: true\n    }; // Bind all private methods\n\n    for (var fn in this) {\n      if (fn.charAt(0) === '_' && typeof this[fn] === 'function') {\n        this[fn] = this[fn].bind(this);\n      }\n    }\n  }\n  AutoScroll.prototype = {\n    dragStarted: function dragStarted(_ref) {\n      var originalEvent = _ref.originalEvent;\n      if (this.sortable.nativeDraggable) {\n        on(document, 'dragover', this._handleAutoScroll);\n      } else {\n        if (this.options.supportPointer) {\n          on(document, 'pointermove', this._handleFallbackAutoScroll);\n        } else if (originalEvent.touches) {\n          on(document, 'touchmove', this._handleFallbackAutoScroll);\n        } else {\n          on(document, 'mousemove', this._handleFallbackAutoScroll);\n        }\n      }\n    },\n    dragOverCompleted: function dragOverCompleted(_ref2) {\n      var originalEvent = _ref2.originalEvent;\n\n      // For when bubbling is canceled and using fallback (fallback 'touchmove' always reached)\n      if (!this.options.dragOverBubble && !originalEvent.rootEl) {\n        this._handleAutoScroll(originalEvent);\n      }\n    },\n    drop: function drop() {\n      if (this.sortable.nativeDraggable) {\n        off(document, 'dragover', this._handleAutoScroll);\n      } else {\n        off(document, 'pointermove', this._handleFallbackAutoScroll);\n        off(document, 'touchmove', this._handleFallbackAutoScroll);\n        off(document, 'mousemove', this._handleFallbackAutoScroll);\n      }\n      clearPointerElemChangedInterval();\n      clearAutoScrolls();\n      cancelThrottle();\n    },\n    nulling: function nulling() {\n      touchEvt$1 = scrollRootEl = scrollEl = scrolling = pointerElemChangedInterval = lastAutoScrollX = lastAutoScrollY = null;\n      autoScrolls.length = 0;\n    },\n    _handleFallbackAutoScroll: function _handleFallbackAutoScroll(evt) {\n      this._handleAutoScroll(evt, true);\n    },\n    _handleAutoScroll: function _handleAutoScroll(evt, fallback) {\n      var _this = this;\n      var x = (evt.touches ? evt.touches[0] : evt).clientX,\n        y = (evt.touches ? evt.touches[0] : evt).clientY,\n        elem = document.elementFromPoint(x, y);\n      touchEvt$1 = evt; // IE does not seem to have native autoscroll,\n      // Edge's autoscroll seems too conditional,\n      // MACOS Safari does not have autoscroll,\n      // Firefox and Chrome are good\n\n      if (fallback || Edge || IE11OrLess || Safari) {\n        autoScroll(evt, this.options, elem, fallback); // Listener for pointer element change\n\n        var ogElemScroller = getParentAutoScrollElement(elem, true);\n        if (scrolling && (!pointerElemChangedInterval || x !== lastAutoScrollX || y !== lastAutoScrollY)) {\n          pointerElemChangedInterval && clearPointerElemChangedInterval(); // Detect for pointer elem change, emulating native DnD behaviour\n\n          pointerElemChangedInterval = setInterval(function () {\n            var newElem = getParentAutoScrollElement(document.elementFromPoint(x, y), true);\n            if (newElem !== ogElemScroller) {\n              ogElemScroller = newElem;\n              clearAutoScrolls();\n            }\n            autoScroll(evt, _this.options, newElem, fallback);\n          }, 10);\n          lastAutoScrollX = x;\n          lastAutoScrollY = y;\n        }\n      } else {\n        // if DnD is enabled (and browser has good autoscrolling), first autoscroll will already scroll, so get parent autoscroll of first autoscroll\n        if (!this.options.bubbleScroll || getParentAutoScrollElement(elem, true) === getWindowScrollingElement()) {\n          clearAutoScrolls();\n          return;\n        }\n        autoScroll(evt, this.options, getParentAutoScrollElement(elem, false), false);\n      }\n    }\n  };\n  return _extends(AutoScroll, {\n    pluginName: 'scroll',\n    initializeByDefault: true\n  });\n}\nfunction clearAutoScrolls() {\n  autoScrolls.forEach(function (autoScroll) {\n    clearInterval(autoScroll.pid);\n  });\n  autoScrolls = [];\n}\nfunction clearPointerElemChangedInterval() {\n  clearInterval(pointerElemChangedInterval);\n}\nvar autoScroll = throttle(function (evt, options, rootEl, isFallback) {\n  // Bug: https://bugzilla.mozilla.org/show_bug.cgi?id=505521\n  if (!options.scroll) return;\n  var x = (evt.touches ? evt.touches[0] : evt).clientX,\n    y = (evt.touches ? evt.touches[0] : evt).clientY,\n    sens = options.scrollSensitivity,\n    speed = options.scrollSpeed,\n    winScroller = getWindowScrollingElement();\n  var scrollThisInstance = false,\n    scrollCustomFn; // New scroll root, set scrollEl\n\n  if (scrollRootEl !== rootEl) {\n    scrollRootEl = rootEl;\n    clearAutoScrolls();\n    scrollEl = options.scroll;\n    scrollCustomFn = options.scrollFn;\n    if (scrollEl === true) {\n      scrollEl = getParentAutoScrollElement(rootEl, true);\n    }\n  }\n  var layersOut = 0;\n  var currentParent = scrollEl;\n  do {\n    var el = currentParent,\n      rect = getRect(el),\n      top = rect.top,\n      bottom = rect.bottom,\n      left = rect.left,\n      right = rect.right,\n      width = rect.width,\n      height = rect.height,\n      canScrollX = void 0,\n      canScrollY = void 0,\n      scrollWidth = el.scrollWidth,\n      scrollHeight = el.scrollHeight,\n      elCSS = css(el),\n      scrollPosX = el.scrollLeft,\n      scrollPosY = el.scrollTop;\n    if (el === winScroller) {\n      canScrollX = width < scrollWidth && (elCSS.overflowX === 'auto' || elCSS.overflowX === 'scroll' || elCSS.overflowX === 'visible');\n      canScrollY = height < scrollHeight && (elCSS.overflowY === 'auto' || elCSS.overflowY === 'scroll' || elCSS.overflowY === 'visible');\n    } else {\n      canScrollX = width < scrollWidth && (elCSS.overflowX === 'auto' || elCSS.overflowX === 'scroll');\n      canScrollY = height < scrollHeight && (elCSS.overflowY === 'auto' || elCSS.overflowY === 'scroll');\n    }\n    var vx = canScrollX && (Math.abs(right - x) <= sens && scrollPosX + width < scrollWidth) - (Math.abs(left - x) <= sens && !!scrollPosX);\n    var vy = canScrollY && (Math.abs(bottom - y) <= sens && scrollPosY + height < scrollHeight) - (Math.abs(top - y) <= sens && !!scrollPosY);\n    if (!autoScrolls[layersOut]) {\n      for (var i = 0; i <= layersOut; i++) {\n        if (!autoScrolls[i]) {\n          autoScrolls[i] = {};\n        }\n      }\n    }\n    if (autoScrolls[layersOut].vx != vx || autoScrolls[layersOut].vy != vy || autoScrolls[layersOut].el !== el) {\n      autoScrolls[layersOut].el = el;\n      autoScrolls[layersOut].vx = vx;\n      autoScrolls[layersOut].vy = vy;\n      clearInterval(autoScrolls[layersOut].pid);\n      if (vx != 0 || vy != 0) {\n        scrollThisInstance = true;\n        /* jshint loopfunc:true */\n\n        autoScrolls[layersOut].pid = setInterval(function () {\n          // emulate drag over during autoscroll (fallback), emulating native DnD behaviour\n          if (isFallback && this.layer === 0) {\n            Sortable.active._onTouchMove(touchEvt$1); // To move ghost if it is positioned absolutely\n          }\n\n          var scrollOffsetY = autoScrolls[this.layer].vy ? autoScrolls[this.layer].vy * speed : 0;\n          var scrollOffsetX = autoScrolls[this.layer].vx ? autoScrolls[this.layer].vx * speed : 0;\n          if (typeof scrollCustomFn === 'function') {\n            if (scrollCustomFn.call(Sortable.dragged.parentNode[expando], scrollOffsetX, scrollOffsetY, evt, touchEvt$1, autoScrolls[this.layer].el) !== 'continue') {\n              return;\n            }\n          }\n          scrollBy(autoScrolls[this.layer].el, scrollOffsetX, scrollOffsetY);\n        }.bind({\n          layer: layersOut\n        }), 24);\n      }\n    }\n    layersOut++;\n  } while (options.bubbleScroll && currentParent !== winScroller && (currentParent = getParentAutoScrollElement(currentParent, false)));\n  scrolling = scrollThisInstance; // in case another function catches scrolling as false in between when it is not\n}, 30);\nvar drop = function drop(_ref) {\n  var originalEvent = _ref.originalEvent,\n    putSortable = _ref.putSortable,\n    dragEl = _ref.dragEl,\n    activeSortable = _ref.activeSortable,\n    dispatchSortableEvent = _ref.dispatchSortableEvent,\n    hideGhostForTarget = _ref.hideGhostForTarget,\n    unhideGhostForTarget = _ref.unhideGhostForTarget;\n  if (!originalEvent) return;\n  var toSortable = putSortable || activeSortable;\n  hideGhostForTarget();\n  var touch = originalEvent.changedTouches && originalEvent.changedTouches.length ? originalEvent.changedTouches[0] : originalEvent;\n  var target = document.elementFromPoint(touch.clientX, touch.clientY);\n  unhideGhostForTarget();\n  if (toSortable && !toSortable.el.contains(target)) {\n    dispatchSortableEvent('spill');\n    this.onSpill({\n      dragEl: dragEl,\n      putSortable: putSortable\n    });\n  }\n};\nfunction Revert() {}\nRevert.prototype = {\n  startIndex: null,\n  dragStart: function dragStart(_ref2) {\n    var oldDraggableIndex = _ref2.oldDraggableIndex;\n    this.startIndex = oldDraggableIndex;\n  },\n  onSpill: function onSpill(_ref3) {\n    var dragEl = _ref3.dragEl,\n      putSortable = _ref3.putSortable;\n    this.sortable.captureAnimationState();\n    if (putSortable) {\n      putSortable.captureAnimationState();\n    }\n    var nextSibling = getChild(this.sortable.el, this.startIndex, this.options);\n    if (nextSibling) {\n      this.sortable.el.insertBefore(dragEl, nextSibling);\n    } else {\n      this.sortable.el.appendChild(dragEl);\n    }\n    this.sortable.animateAll();\n    if (putSortable) {\n      putSortable.animateAll();\n    }\n  },\n  drop: drop\n};\n_extends(Revert, {\n  pluginName: 'revertOnSpill'\n});\nfunction Remove() {}\nRemove.prototype = {\n  onSpill: function onSpill(_ref4) {\n    var dragEl = _ref4.dragEl,\n      putSortable = _ref4.putSortable;\n    var parentSortable = putSortable || this.sortable;\n    parentSortable.captureAnimationState();\n    dragEl.parentNode && dragEl.parentNode.removeChild(dragEl);\n    parentSortable.animateAll();\n  },\n  drop: drop\n};\n_extends(Remove, {\n  pluginName: 'removeOnSpill'\n});\nvar lastSwapEl;\nfunction SwapPlugin() {\n  function Swap() {\n    this.defaults = {\n      swapClass: 'sortable-swap-highlight'\n    };\n  }\n  Swap.prototype = {\n    dragStart: function dragStart(_ref) {\n      var dragEl = _ref.dragEl;\n      lastSwapEl = dragEl;\n    },\n    dragOverValid: function dragOverValid(_ref2) {\n      var completed = _ref2.completed,\n        target = _ref2.target,\n        onMove = _ref2.onMove,\n        activeSortable = _ref2.activeSortable,\n        changed = _ref2.changed,\n        cancel = _ref2.cancel;\n      if (!activeSortable.options.swap) return;\n      var el = this.sortable.el,\n        options = this.options;\n      if (target && target !== el) {\n        var prevSwapEl = lastSwapEl;\n        if (onMove(target) !== false) {\n          toggleClass(target, options.swapClass, true);\n          lastSwapEl = target;\n        } else {\n          lastSwapEl = null;\n        }\n        if (prevSwapEl && prevSwapEl !== lastSwapEl) {\n          toggleClass(prevSwapEl, options.swapClass, false);\n        }\n      }\n      changed();\n      completed(true);\n      cancel();\n    },\n    drop: function drop(_ref3) {\n      var activeSortable = _ref3.activeSortable,\n        putSortable = _ref3.putSortable,\n        dragEl = _ref3.dragEl;\n      var toSortable = putSortable || this.sortable;\n      var options = this.options;\n      lastSwapEl && toggleClass(lastSwapEl, options.swapClass, false);\n      if (lastSwapEl && (options.swap || putSortable && putSortable.options.swap)) {\n        if (dragEl !== lastSwapEl) {\n          toSortable.captureAnimationState();\n          if (toSortable !== activeSortable) activeSortable.captureAnimationState();\n          swapNodes(dragEl, lastSwapEl);\n          toSortable.animateAll();\n          if (toSortable !== activeSortable) activeSortable.animateAll();\n        }\n      }\n    },\n    nulling: function nulling() {\n      lastSwapEl = null;\n    }\n  };\n  return _extends(Swap, {\n    pluginName: 'swap',\n    eventProperties: function eventProperties() {\n      return {\n        swapItem: lastSwapEl\n      };\n    }\n  });\n}\nfunction swapNodes(n1, n2) {\n  var p1 = n1.parentNode,\n    p2 = n2.parentNode,\n    i1,\n    i2;\n  if (!p1 || !p2 || p1.isEqualNode(n2) || p2.isEqualNode(n1)) return;\n  i1 = index(n1);\n  i2 = index(n2);\n  if (p1.isEqualNode(p2) && i1 < i2) {\n    i2++;\n  }\n  p1.insertBefore(n2, p1.children[i1]);\n  p2.insertBefore(n1, p2.children[i2]);\n}\nvar multiDragElements = [],\n  multiDragClones = [],\n  lastMultiDragSelect,\n  // for selection with modifier key down (SHIFT)\n  multiDragSortable,\n  initialFolding = false,\n  // Initial multi-drag fold when drag started\n  folding = false,\n  // Folding any other time\n  dragStarted = false,\n  dragEl$1,\n  clonesFromRect,\n  clonesHidden;\nfunction MultiDragPlugin() {\n  function MultiDrag(sortable) {\n    // Bind all private methods\n    for (var fn in this) {\n      if (fn.charAt(0) === '_' && typeof this[fn] === 'function') {\n        this[fn] = this[fn].bind(this);\n      }\n    }\n    if (sortable.options.supportPointer) {\n      on(document, 'pointerup', this._deselectMultiDrag);\n    } else {\n      on(document, 'mouseup', this._deselectMultiDrag);\n      on(document, 'touchend', this._deselectMultiDrag);\n    }\n    on(document, 'keydown', this._checkKeyDown);\n    on(document, 'keyup', this._checkKeyUp);\n    this.defaults = {\n      selectedClass: 'sortable-selected',\n      multiDragKey: null,\n      setData: function setData(dataTransfer, dragEl) {\n        var data = '';\n        if (multiDragElements.length && multiDragSortable === sortable) {\n          multiDragElements.forEach(function (multiDragElement, i) {\n            data += (!i ? '' : ', ') + multiDragElement.textContent;\n          });\n        } else {\n          data = dragEl.textContent;\n        }\n        dataTransfer.setData('Text', data);\n      }\n    };\n  }\n  MultiDrag.prototype = {\n    multiDragKeyDown: false,\n    isMultiDrag: false,\n    delayStartGlobal: function delayStartGlobal(_ref) {\n      var dragged = _ref.dragEl;\n      dragEl$1 = dragged;\n    },\n    delayEnded: function delayEnded() {\n      this.isMultiDrag = ~multiDragElements.indexOf(dragEl$1);\n    },\n    setupClone: function setupClone(_ref2) {\n      var sortable = _ref2.sortable,\n        cancel = _ref2.cancel;\n      if (!this.isMultiDrag) return;\n      for (var i = 0; i < multiDragElements.length; i++) {\n        multiDragClones.push(clone(multiDragElements[i]));\n        multiDragClones[i].sortableIndex = multiDragElements[i].sortableIndex;\n        multiDragClones[i].draggable = false;\n        multiDragClones[i].style['will-change'] = '';\n        toggleClass(multiDragClones[i], this.options.selectedClass, false);\n        multiDragElements[i] === dragEl$1 && toggleClass(multiDragClones[i], this.options.chosenClass, false);\n      }\n      sortable._hideClone();\n      cancel();\n    },\n    clone: function clone(_ref3) {\n      var sortable = _ref3.sortable,\n        rootEl = _ref3.rootEl,\n        dispatchSortableEvent = _ref3.dispatchSortableEvent,\n        cancel = _ref3.cancel;\n      if (!this.isMultiDrag) return;\n      if (!this.options.removeCloneOnHide) {\n        if (multiDragElements.length && multiDragSortable === sortable) {\n          insertMultiDragClones(true, rootEl);\n          dispatchSortableEvent('clone');\n          cancel();\n        }\n      }\n    },\n    showClone: function showClone(_ref4) {\n      var cloneNowShown = _ref4.cloneNowShown,\n        rootEl = _ref4.rootEl,\n        cancel = _ref4.cancel;\n      if (!this.isMultiDrag) return;\n      insertMultiDragClones(false, rootEl);\n      multiDragClones.forEach(function (clone) {\n        css(clone, 'display', '');\n      });\n      cloneNowShown();\n      clonesHidden = false;\n      cancel();\n    },\n    hideClone: function hideClone(_ref5) {\n      var _this = this;\n      var sortable = _ref5.sortable,\n        cloneNowHidden = _ref5.cloneNowHidden,\n        cancel = _ref5.cancel;\n      if (!this.isMultiDrag) return;\n      multiDragClones.forEach(function (clone) {\n        css(clone, 'display', 'none');\n        if (_this.options.removeCloneOnHide && clone.parentNode) {\n          clone.parentNode.removeChild(clone);\n        }\n      });\n      cloneNowHidden();\n      clonesHidden = true;\n      cancel();\n    },\n    dragStartGlobal: function dragStartGlobal(_ref6) {\n      var sortable = _ref6.sortable;\n      if (!this.isMultiDrag && multiDragSortable) {\n        multiDragSortable.multiDrag._deselectMultiDrag();\n      }\n      multiDragElements.forEach(function (multiDragElement) {\n        multiDragElement.sortableIndex = index(multiDragElement);\n      }); // Sort multi-drag elements\n\n      multiDragElements = multiDragElements.sort(function (a, b) {\n        return a.sortableIndex - b.sortableIndex;\n      });\n      dragStarted = true;\n    },\n    dragStarted: function dragStarted(_ref7) {\n      var _this2 = this;\n      var sortable = _ref7.sortable;\n      if (!this.isMultiDrag) return;\n      if (this.options.sort) {\n        // Capture rects,\n        // hide multi drag elements (by positioning them absolute),\n        // set multi drag elements rects to dragRect,\n        // show multi drag elements,\n        // animate to rects,\n        // unset rects & remove from DOM\n        sortable.captureAnimationState();\n        if (this.options.animation) {\n          multiDragElements.forEach(function (multiDragElement) {\n            if (multiDragElement === dragEl$1) return;\n            css(multiDragElement, 'position', 'absolute');\n          });\n          var dragRect = getRect(dragEl$1, false, true, true);\n          multiDragElements.forEach(function (multiDragElement) {\n            if (multiDragElement === dragEl$1) return;\n            setRect(multiDragElement, dragRect);\n          });\n          folding = true;\n          initialFolding = true;\n        }\n      }\n      sortable.animateAll(function () {\n        folding = false;\n        initialFolding = false;\n        if (_this2.options.animation) {\n          multiDragElements.forEach(function (multiDragElement) {\n            unsetRect(multiDragElement);\n          });\n        } // Remove all auxiliary multidrag items from el, if sorting enabled\n\n        if (_this2.options.sort) {\n          removeMultiDragElements();\n        }\n      });\n    },\n    dragOver: function dragOver(_ref8) {\n      var target = _ref8.target,\n        completed = _ref8.completed,\n        cancel = _ref8.cancel;\n      if (folding && ~multiDragElements.indexOf(target)) {\n        completed(false);\n        cancel();\n      }\n    },\n    revert: function revert(_ref9) {\n      var fromSortable = _ref9.fromSortable,\n        rootEl = _ref9.rootEl,\n        sortable = _ref9.sortable,\n        dragRect = _ref9.dragRect;\n      if (multiDragElements.length > 1) {\n        // Setup unfold animation\n        multiDragElements.forEach(function (multiDragElement) {\n          sortable.addAnimationState({\n            target: multiDragElement,\n            rect: folding ? getRect(multiDragElement) : dragRect\n          });\n          unsetRect(multiDragElement);\n          multiDragElement.fromRect = dragRect;\n          fromSortable.removeAnimationState(multiDragElement);\n        });\n        folding = false;\n        insertMultiDragElements(!this.options.removeCloneOnHide, rootEl);\n      }\n    },\n    dragOverCompleted: function dragOverCompleted(_ref10) {\n      var sortable = _ref10.sortable,\n        isOwner = _ref10.isOwner,\n        insertion = _ref10.insertion,\n        activeSortable = _ref10.activeSortable,\n        parentEl = _ref10.parentEl,\n        putSortable = _ref10.putSortable;\n      var options = this.options;\n      if (insertion) {\n        // Clones must be hidden before folding animation to capture dragRectAbsolute properly\n        if (isOwner) {\n          activeSortable._hideClone();\n        }\n        initialFolding = false; // If leaving sort:false root, or already folding - Fold to new location\n\n        if (options.animation && multiDragElements.length > 1 && (folding || !isOwner && !activeSortable.options.sort && !putSortable)) {\n          // Fold: Set all multi drag elements's rects to dragEl's rect when multi-drag elements are invisible\n          var dragRectAbsolute = getRect(dragEl$1, false, true, true);\n          multiDragElements.forEach(function (multiDragElement) {\n            if (multiDragElement === dragEl$1) return;\n            setRect(multiDragElement, dragRectAbsolute); // Move element(s) to end of parentEl so that it does not interfere with multi-drag clones insertion if they are inserted\n            // while folding, and so that we can capture them again because old sortable will no longer be fromSortable\n\n            parentEl.appendChild(multiDragElement);\n          });\n          folding = true;\n        } // Clones must be shown (and check to remove multi drags) after folding when interfering multiDragElements are moved out\n\n        if (!isOwner) {\n          // Only remove if not folding (folding will remove them anyways)\n          if (!folding) {\n            removeMultiDragElements();\n          }\n          if (multiDragElements.length > 1) {\n            var clonesHiddenBefore = clonesHidden;\n            activeSortable._showClone(sortable); // Unfold animation for clones if showing from hidden\n\n            if (activeSortable.options.animation && !clonesHidden && clonesHiddenBefore) {\n              multiDragClones.forEach(function (clone) {\n                activeSortable.addAnimationState({\n                  target: clone,\n                  rect: clonesFromRect\n                });\n                clone.fromRect = clonesFromRect;\n                clone.thisAnimationDuration = null;\n              });\n            }\n          } else {\n            activeSortable._showClone(sortable);\n          }\n        }\n      }\n    },\n    dragOverAnimationCapture: function dragOverAnimationCapture(_ref11) {\n      var dragRect = _ref11.dragRect,\n        isOwner = _ref11.isOwner,\n        activeSortable = _ref11.activeSortable;\n      multiDragElements.forEach(function (multiDragElement) {\n        multiDragElement.thisAnimationDuration = null;\n      });\n      if (activeSortable.options.animation && !isOwner && activeSortable.multiDrag.isMultiDrag) {\n        clonesFromRect = _extends({}, dragRect);\n        var dragMatrix = matrix(dragEl$1, true);\n        clonesFromRect.top -= dragMatrix.f;\n        clonesFromRect.left -= dragMatrix.e;\n      }\n    },\n    dragOverAnimationComplete: function dragOverAnimationComplete() {\n      if (folding) {\n        folding = false;\n        removeMultiDragElements();\n      }\n    },\n    drop: function drop(_ref12) {\n      var evt = _ref12.originalEvent,\n        rootEl = _ref12.rootEl,\n        parentEl = _ref12.parentEl,\n        sortable = _ref12.sortable,\n        dispatchSortableEvent = _ref12.dispatchSortableEvent,\n        oldIndex = _ref12.oldIndex,\n        putSortable = _ref12.putSortable;\n      var toSortable = putSortable || this.sortable;\n      if (!evt) return;\n      var options = this.options,\n        children = parentEl.children; // Multi-drag selection\n\n      if (!dragStarted) {\n        if (options.multiDragKey && !this.multiDragKeyDown) {\n          this._deselectMultiDrag();\n        }\n        toggleClass(dragEl$1, options.selectedClass, !~multiDragElements.indexOf(dragEl$1));\n        if (!~multiDragElements.indexOf(dragEl$1)) {\n          multiDragElements.push(dragEl$1);\n          dispatchEvent({\n            sortable: sortable,\n            rootEl: rootEl,\n            name: 'select',\n            targetEl: dragEl$1,\n            originalEvt: evt\n          }); // Modifier activated, select from last to dragEl\n\n          if (evt.shiftKey && lastMultiDragSelect && sortable.el.contains(lastMultiDragSelect)) {\n            var lastIndex = index(lastMultiDragSelect),\n              currentIndex = index(dragEl$1);\n            if (~lastIndex && ~currentIndex && lastIndex !== currentIndex) {\n              // Must include lastMultiDragSelect (select it), in case modified selection from no selection\n              // (but previous selection existed)\n              var n, i;\n              if (currentIndex > lastIndex) {\n                i = lastIndex;\n                n = currentIndex;\n              } else {\n                i = currentIndex;\n                n = lastIndex + 1;\n              }\n              for (; i < n; i++) {\n                if (~multiDragElements.indexOf(children[i])) continue;\n                toggleClass(children[i], options.selectedClass, true);\n                multiDragElements.push(children[i]);\n                dispatchEvent({\n                  sortable: sortable,\n                  rootEl: rootEl,\n                  name: 'select',\n                  targetEl: children[i],\n                  originalEvt: evt\n                });\n              }\n            }\n          } else {\n            lastMultiDragSelect = dragEl$1;\n          }\n          multiDragSortable = toSortable;\n        } else {\n          multiDragElements.splice(multiDragElements.indexOf(dragEl$1), 1);\n          lastMultiDragSelect = null;\n          dispatchEvent({\n            sortable: sortable,\n            rootEl: rootEl,\n            name: 'deselect',\n            targetEl: dragEl$1,\n            originalEvt: evt\n          });\n        }\n      } // Multi-drag drop\n\n      if (dragStarted && this.isMultiDrag) {\n        // Do not \"unfold\" after around dragEl if reverted\n        if ((parentEl[expando].options.sort || parentEl !== rootEl) && multiDragElements.length > 1) {\n          var dragRect = getRect(dragEl$1),\n            multiDragIndex = index(dragEl$1, ':not(.' + this.options.selectedClass + ')');\n          if (!initialFolding && options.animation) dragEl$1.thisAnimationDuration = null;\n          toSortable.captureAnimationState();\n          if (!initialFolding) {\n            if (options.animation) {\n              dragEl$1.fromRect = dragRect;\n              multiDragElements.forEach(function (multiDragElement) {\n                multiDragElement.thisAnimationDuration = null;\n                if (multiDragElement !== dragEl$1) {\n                  var rect = folding ? getRect(multiDragElement) : dragRect;\n                  multiDragElement.fromRect = rect; // Prepare unfold animation\n\n                  toSortable.addAnimationState({\n                    target: multiDragElement,\n                    rect: rect\n                  });\n                }\n              });\n            } // Multi drag elements are not necessarily removed from the DOM on drop, so to reinsert\n            // properly they must all be removed\n\n            removeMultiDragElements();\n            multiDragElements.forEach(function (multiDragElement) {\n              if (children[multiDragIndex]) {\n                parentEl.insertBefore(multiDragElement, children[multiDragIndex]);\n              } else {\n                parentEl.appendChild(multiDragElement);\n              }\n              multiDragIndex++;\n            }); // If initial folding is done, the elements may have changed position because they are now\n            // unfolding around dragEl, even though dragEl may not have his index changed, so update event\n            // must be fired here as Sortable will not.\n\n            if (oldIndex === index(dragEl$1)) {\n              var update = false;\n              multiDragElements.forEach(function (multiDragElement) {\n                if (multiDragElement.sortableIndex !== index(multiDragElement)) {\n                  update = true;\n                  return;\n                }\n              });\n              if (update) {\n                dispatchSortableEvent('update');\n              }\n            }\n          } // Must be done after capturing individual rects (scroll bar)\n\n          multiDragElements.forEach(function (multiDragElement) {\n            unsetRect(multiDragElement);\n          });\n          toSortable.animateAll();\n        }\n        multiDragSortable = toSortable;\n      } // Remove clones if necessary\n\n      if (rootEl === parentEl || putSortable && putSortable.lastPutMode !== 'clone') {\n        multiDragClones.forEach(function (clone) {\n          clone.parentNode && clone.parentNode.removeChild(clone);\n        });\n      }\n    },\n    nullingGlobal: function nullingGlobal() {\n      this.isMultiDrag = dragStarted = false;\n      multiDragClones.length = 0;\n    },\n    destroyGlobal: function destroyGlobal() {\n      this._deselectMultiDrag();\n      off(document, 'pointerup', this._deselectMultiDrag);\n      off(document, 'mouseup', this._deselectMultiDrag);\n      off(document, 'touchend', this._deselectMultiDrag);\n      off(document, 'keydown', this._checkKeyDown);\n      off(document, 'keyup', this._checkKeyUp);\n    },\n    _deselectMultiDrag: function _deselectMultiDrag(evt) {\n      if (typeof dragStarted !== \"undefined\" && dragStarted) return; // Only deselect if selection is in this sortable\n\n      if (multiDragSortable !== this.sortable) return; // Only deselect if target is not item in this sortable\n\n      if (evt && closest(evt.target, this.options.draggable, this.sortable.el, false)) return; // Only deselect if left click\n\n      if (evt && evt.button !== 0) return;\n      while (multiDragElements.length) {\n        var el = multiDragElements[0];\n        toggleClass(el, this.options.selectedClass, false);\n        multiDragElements.shift();\n        dispatchEvent({\n          sortable: this.sortable,\n          rootEl: this.sortable.el,\n          name: 'deselect',\n          targetEl: el,\n          originalEvt: evt\n        });\n      }\n    },\n    _checkKeyDown: function _checkKeyDown(evt) {\n      if (evt.key === this.options.multiDragKey) {\n        this.multiDragKeyDown = true;\n      }\n    },\n    _checkKeyUp: function _checkKeyUp(evt) {\n      if (evt.key === this.options.multiDragKey) {\n        this.multiDragKeyDown = false;\n      }\n    }\n  };\n  return _extends(MultiDrag, {\n    // Static methods & properties\n    pluginName: 'multiDrag',\n    utils: {\n      /**\r\n       * Selects the provided multi-drag item\r\n       * @param  {HTMLElement} el    The element to be selected\r\n       */\n      select: function select(el) {\n        var sortable = el.parentNode[expando];\n        if (!sortable || !sortable.options.multiDrag || ~multiDragElements.indexOf(el)) return;\n        if (multiDragSortable && multiDragSortable !== sortable) {\n          multiDragSortable.multiDrag._deselectMultiDrag();\n          multiDragSortable = sortable;\n        }\n        toggleClass(el, sortable.options.selectedClass, true);\n        multiDragElements.push(el);\n      },\n      /**\r\n       * Deselects the provided multi-drag item\r\n       * @param  {HTMLElement} el    The element to be deselected\r\n       */\n      deselect: function deselect(el) {\n        var sortable = el.parentNode[expando],\n          index = multiDragElements.indexOf(el);\n        if (!sortable || !sortable.options.multiDrag || !~index) return;\n        toggleClass(el, sortable.options.selectedClass, false);\n        multiDragElements.splice(index, 1);\n      }\n    },\n    eventProperties: function eventProperties() {\n      var _this3 = this;\n      var oldIndicies = [],\n        newIndicies = [];\n      multiDragElements.forEach(function (multiDragElement) {\n        oldIndicies.push({\n          multiDragElement: multiDragElement,\n          index: multiDragElement.sortableIndex\n        }); // multiDragElements will already be sorted if folding\n\n        var newIndex;\n        if (folding && multiDragElement !== dragEl$1) {\n          newIndex = -1;\n        } else if (folding) {\n          newIndex = index(multiDragElement, ':not(.' + _this3.options.selectedClass + ')');\n        } else {\n          newIndex = index(multiDragElement);\n        }\n        newIndicies.push({\n          multiDragElement: multiDragElement,\n          index: newIndex\n        });\n      });\n      return {\n        items: _toConsumableArray(multiDragElements),\n        clones: [].concat(multiDragClones),\n        oldIndicies: oldIndicies,\n        newIndicies: newIndicies\n      };\n    },\n    optionListeners: {\n      multiDragKey: function multiDragKey(key) {\n        key = key.toLowerCase();\n        if (key === 'ctrl') {\n          key = 'Control';\n        } else if (key.length > 1) {\n          key = key.charAt(0).toUpperCase() + key.substr(1);\n        }\n        return key;\n      }\n    }\n  });\n}\nfunction insertMultiDragElements(clonesInserted, rootEl) {\n  multiDragElements.forEach(function (multiDragElement, i) {\n    var target = rootEl.children[multiDragElement.sortableIndex + (clonesInserted ? Number(i) : 0)];\n    if (target) {\n      rootEl.insertBefore(multiDragElement, target);\n    } else {\n      rootEl.appendChild(multiDragElement);\n    }\n  });\n}\n/**\r\n * Insert multi-drag clones\r\n * @param  {[Boolean]} elementsInserted  Whether the multi-drag elements are inserted\r\n * @param  {HTMLElement} rootEl\r\n */\n\nfunction insertMultiDragClones(elementsInserted, rootEl) {\n  multiDragClones.forEach(function (clone, i) {\n    var target = rootEl.children[clone.sortableIndex + (elementsInserted ? Number(i) : 0)];\n    if (target) {\n      rootEl.insertBefore(clone, target);\n    } else {\n      rootEl.appendChild(clone);\n    }\n  });\n}\nfunction removeMultiDragElements() {\n  multiDragElements.forEach(function (multiDragElement) {\n    if (multiDragElement === dragEl$1) return;\n    multiDragElement.parentNode && multiDragElement.parentNode.removeChild(multiDragElement);\n  });\n}\nSortable.mount(new AutoScrollPlugin());\nSortable.mount(Remove, Revert);\nexport default Sortable;\nexport { MultiDragPlugin as MultiDrag, Sortable, SwapPlugin as Swap };","map":{"version":3,"names":["_typeof","obj","Symbol","iterator","constructor","prototype","_defineProperty","key","value","Object","defineProperty","enumerable","configurable","writable","_extends","assign","target","i","arguments","length","source","hasOwnProperty","call","apply","_objectSpread","ownKeys","keys","getOwnPropertySymbols","concat","filter","sym","getOwnPropertyDescriptor","forEach","_objectWithoutPropertiesLoose","excluded","sourceKeys","indexOf","_objectWithoutProperties","sourceSymbolKeys","propertyIsEnumerable","_toConsumableArray","arr","_arrayWithoutHoles","_iterableToArray","_nonIterableSpread","Array","isArray","arr2","iter","toString","from","TypeError","version","userAgent","pattern","window","navigator","match","IE11OrLess","Edge","FireFox","Safari","IOS","ChromeForAndroid","captureMode","capture","passive","on","el","event","fn","addEventListener","off","removeEventListener","matches","selector","substring","msMatchesSelector","webkitMatchesSelector","_","getParentOrHost","host","document","nodeType","parentNode","closest","ctx","includeCTX","R_SPACE","toggleClass","name","state","classList","className","replace","css","prop","val","style","defaultView","getComputedStyle","currentStyle","matrix","selfOnly","appliedTransforms","transform","matrixFn","DOMMatrix","WebKitCSSMatrix","CSSMatrix","MSCSSMatrix","find","tagName","list","getElementsByTagName","n","getWindowScrollingElement","scrollingElement","documentElement","getRect","relativeToContainingBlock","relativeToNonStaticParent","undoScale","container","getBoundingClientRect","elRect","top","left","bottom","right","height","width","innerHeight","innerWidth","containerRect","parseInt","elMatrix","scaleX","a","scaleY","d","isScrolledPast","elSide","parentSide","parent","getParentAutoScrollElement","elSideVal","parentSideVal","visible","getChild","childNum","options","currentChild","children","display","Sortable","ghost","dragged","draggable","lastChild","last","lastElementChild","previousElementSibling","index","nodeName","toUpperCase","clone","getRelativeScrollOffset","offsetLeft","offsetTop","winScroller","scrollLeft","scrollTop","indexOfObject","Number","includeSelf","elem","gotSelf","clientWidth","scrollWidth","clientHeight","scrollHeight","elemCSS","overflowX","overflowY","body","extend","dst","src","isRectEqual","rect1","rect2","Math","round","_throttleTimeout","throttle","callback","ms","args","_this","setTimeout","cancelThrottle","clearTimeout","scrollBy","x","y","Polymer","$","jQuery","Zepto","dom","cloneNode","setRect","rect","unsetRect","expando","Date","getTime","AnimationStateManager","animationStates","animationCallbackId","captureAnimationState","animation","slice","child","push","fromRect","thisAnimationDuration","childMatrix","f","e","addAnimationState","removeAnimationState","splice","animateAll","animating","animationTime","time","toRect","prevFromRect","prevToRect","animatingRect","targetMatrix","calculateRealTime","animate","max","animationResetTimer","currentRect","duration","translateX","translateY","animatingX","animatingY","repaint","easing","animated","offsetWidth","sqrt","pow","plugins","defaults","initializeByDefault","PluginManager","mount","plugin","option","pluginEvent","eventName","sortable","evt","eventCanceled","cancel","eventNameGlobal","pluginName","initializePlugins","initialized","modified","modifyOption","getEventProperties","eventProperties","modifiedValue","optionListeners","dispatchEvent","_ref","rootEl","targetEl","cloneEl","toEl","fromEl","oldIndex","newIndex","oldDraggableIndex","newDraggableIndex","originalEvent","putSortable","extraEventProperties","onName","charAt","substr","CustomEvent","bubbles","cancelable","createEvent","initEvent","to","item","pullMode","lastPutMode","undefined","allEventProperties","data","bind","dragEl","parentEl","ghostEl","nextEl","lastDownEl","cloneHidden","dragStarted","moved","activeSortable","active","hideGhostForTarget","_hideGhostForTarget","unhideGhostForTarget","_unhideGhostForTarget","cloneNowHidden","cloneNowShown","dispatchSortableEvent","_dispatchEvent","info","activeGroup","awaitingDragStarted","ignoreNextClick","sortables","tapEvt","touchEvt","lastDx","lastDy","tapDistanceLeft","tapDistanceTop","lastTarget","lastDirection","pastFirstInvertThresh","isCircumstantialInvert","targetMoveDistance","ghostRelativeParent","ghostRelativeParentInitialScroll","_silent","savedInputChecked","documentExists","PositionGhostAbsolutely","CSSFloatProperty","supportDraggable","createElement","supportCssPointerEvents","cssText","pointerEvents","_detectDirection","elCSS","elWidth","paddingLeft","paddingRight","borderLeftWidth","borderRightWidth","child1","child2","firstChildCSS","secondChildCSS","firstChildWidth","marginLeft","marginRight","secondChildWidth","flexDirection","gridTemplateColumns","split","touchingSideChild2","clear","_dragElInRowColumn","dragRect","targetRect","vertical","dragElS1Opp","dragElS2Opp","dragElOppLength","targetS1Opp","targetS2Opp","targetOppLength","_detectNearestEmptySortable","ret","some","threshold","emptyInsertThreshold","insideHorizontally","insideVertically","_prepareGroup","toFn","pull","sameGroup","group","otherGroup","join","originalGroup","checkPull","checkPut","put","revertClone","preventDefault","stopPropagation","stopImmediatePropagation","nearestEmptyInsertDetectEvent","touches","nearest","clientX","clientY","_onDragOver","_checkOutsideTargetEl","_isOutsideThisEl","sort","disabled","store","handle","test","swapThreshold","invertSwap","invertedSwapThreshold","removeCloneOnHide","direction","ghostClass","chosenClass","dragClass","ignore","preventOnFilter","setData","dataTransfer","textContent","dropBubble","dragoverBubble","dataIdAttr","delay","delayOnTouchOnly","touchStartThreshold","devicePixelRatio","forceFallback","fallbackClass","fallbackOnBody","fallbackTolerance","fallbackOffset","supportPointer","nativeDraggable","_onTapStart","get","contains","_getDirection","type","touch","pointerType","originalTarget","shadowRoot","path","composedPath","_saveInputCheckedState","button","isContentEditable","criteria","trim","_prepareDragStart","ownerDocument","dragStartFn","nextSibling","_lastX","_lastY","_onDrop","_disableDelayedDragEvents","_triggerDragStart","_disableDraggable","_disableDelayedDrag","_delayedDragTouchMoveHandler","_dragStartTimer","abs","floor","_onTouchMove","_onDragStart","selection","_nextTick","empty","getSelection","removeAllRanges","err","_dragStarted","fallback","_appendGhost","_nulling","_emulateDragOver","elementFromPoint","inserted","ghostMatrix","relativeScrollOffset","dx","dy","b","c","cssMatrix","appendChild","_hideClone","cloneId","insertBefore","_loopId","setInterval","effectAllowed","_dragStartId","revert","isOwner","canSort","fromSortable","completedFired","dragOverEvent","extra","axis","completed","onMove","after","_onMove","changed","insertion","_showClone","_ignoreWhileAnimating","elLastChild","_ghostIsLast","targetBeforeFirstSwap","differentLevel","differentRowCol","side1","scrolledPastTop","scrollBefore","_getSwapDirection","sibling","dragIndex","nextElementSibling","moveVector","_unsilent","_offMoveEvents","_offUpEvents","clearInterval","_cancelNextTick","removeChild","save","checked","handleEvent","_globalDragOver","toArray","order","getAttribute","_generateId","items","id","set","closest$1","destroy","querySelectorAll","removeAttribute","dropEffect","willInsertAfter","onMoveFn","retVal","draggedRect","related","relatedRect","spacer","isLastTarget","mouseOnAxis","targetLength","targetS1","targetS2","invert","_getInsertDirection","str","href","sum","charCodeAt","root","inputs","idx","utils","is","nextTick","cancelNextTick","detectDirection","element","_len","_key","create","autoScrolls","scrollEl","scrollRootEl","scrolling","lastAutoScrollX","lastAutoScrollY","touchEvt$1","pointerElemChangedInterval","AutoScrollPlugin","AutoScroll","scroll","scrollSensitivity","scrollSpeed","bubbleScroll","_handleAutoScroll","_handleFallbackAutoScroll","dragOverCompleted","_ref2","dragOverBubble","drop","clearPointerElemChangedInterval","clearAutoScrolls","nulling","autoScroll","ogElemScroller","newElem","pid","isFallback","sens","speed","scrollThisInstance","scrollCustomFn","scrollFn","layersOut","currentParent","canScrollX","canScrollY","scrollPosX","scrollPosY","vx","vy","layer","scrollOffsetY","scrollOffsetX","toSortable","changedTouches","onSpill","Revert","startIndex","dragStart","_ref3","Remove","_ref4","parentSortable","lastSwapEl","SwapPlugin","Swap","swapClass","dragOverValid","swap","prevSwapEl","swapNodes","swapItem","n1","n2","p1","p2","i1","i2","isEqualNode","multiDragElements","multiDragClones","lastMultiDragSelect","multiDragSortable","initialFolding","folding","dragEl$1","clonesFromRect","clonesHidden","MultiDragPlugin","MultiDrag","_deselectMultiDrag","_checkKeyDown","_checkKeyUp","selectedClass","multiDragKey","multiDragElement","multiDragKeyDown","isMultiDrag","delayStartGlobal","delayEnded","setupClone","sortableIndex","insertMultiDragClones","showClone","hideClone","_ref5","dragStartGlobal","_ref6","multiDrag","_ref7","_this2","removeMultiDragElements","dragOver","_ref8","_ref9","insertMultiDragElements","_ref10","dragRectAbsolute","clonesHiddenBefore","dragOverAnimationCapture","_ref11","dragMatrix","dragOverAnimationComplete","_ref12","originalEvt","shiftKey","lastIndex","currentIndex","multiDragIndex","update","nullingGlobal","destroyGlobal","shift","select","deselect","_this3","oldIndicies","newIndicies","clones","toLowerCase","clonesInserted","elementsInserted"],"sources":["/Users/yanbinru/Desktop/代码/github/vue3-knowledge/node_modules/sortablejs/modular/sortable.esm.js"],"sourcesContent":["/**!\n * Sortable 1.10.2\n * @author\tRubaXa   <trash@rubaxa.org>\n * @author\towenm    <owen23355@gmail.com>\n * @license MIT\n */\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function (obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function (obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) arr2[i] = arr[i];\n\n    return arr2;\n  }\n}\n\nfunction _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}\n\nvar version = \"1.10.2\";\n\nfunction userAgent(pattern) {\n  if (typeof window !== 'undefined' && window.navigator) {\n    return !!\n    /*@__PURE__*/\n    navigator.userAgent.match(pattern);\n  }\n}\n\nvar IE11OrLess = userAgent(/(?:Trident.*rv[ :]?11\\.|msie|iemobile|Windows Phone)/i);\nvar Edge = userAgent(/Edge/i);\nvar FireFox = userAgent(/firefox/i);\nvar Safari = userAgent(/safari/i) && !userAgent(/chrome/i) && !userAgent(/android/i);\nvar IOS = userAgent(/iP(ad|od|hone)/i);\nvar ChromeForAndroid = userAgent(/chrome/i) && userAgent(/android/i);\n\nvar captureMode = {\n  capture: false,\n  passive: false\n};\n\nfunction on(el, event, fn) {\n  el.addEventListener(event, fn, !IE11OrLess && captureMode);\n}\n\nfunction off(el, event, fn) {\n  el.removeEventListener(event, fn, !IE11OrLess && captureMode);\n}\n\nfunction matches(\n/**HTMLElement*/\nel,\n/**String*/\nselector) {\n  if (!selector) return;\n  selector[0] === '>' && (selector = selector.substring(1));\n\n  if (el) {\n    try {\n      if (el.matches) {\n        return el.matches(selector);\n      } else if (el.msMatchesSelector) {\n        return el.msMatchesSelector(selector);\n      } else if (el.webkitMatchesSelector) {\n        return el.webkitMatchesSelector(selector);\n      }\n    } catch (_) {\n      return false;\n    }\n  }\n\n  return false;\n}\n\nfunction getParentOrHost(el) {\n  return el.host && el !== document && el.host.nodeType ? el.host : el.parentNode;\n}\n\nfunction closest(\n/**HTMLElement*/\nel,\n/**String*/\nselector,\n/**HTMLElement*/\nctx, includeCTX) {\n  if (el) {\n    ctx = ctx || document;\n\n    do {\n      if (selector != null && (selector[0] === '>' ? el.parentNode === ctx && matches(el, selector) : matches(el, selector)) || includeCTX && el === ctx) {\n        return el;\n      }\n\n      if (el === ctx) break;\n      /* jshint boss:true */\n    } while (el = getParentOrHost(el));\n  }\n\n  return null;\n}\n\nvar R_SPACE = /\\s+/g;\n\nfunction toggleClass(el, name, state) {\n  if (el && name) {\n    if (el.classList) {\n      el.classList[state ? 'add' : 'remove'](name);\n    } else {\n      var className = (' ' + el.className + ' ').replace(R_SPACE, ' ').replace(' ' + name + ' ', ' ');\n      el.className = (className + (state ? ' ' + name : '')).replace(R_SPACE, ' ');\n    }\n  }\n}\n\nfunction css(el, prop, val) {\n  var style = el && el.style;\n\n  if (style) {\n    if (val === void 0) {\n      if (document.defaultView && document.defaultView.getComputedStyle) {\n        val = document.defaultView.getComputedStyle(el, '');\n      } else if (el.currentStyle) {\n        val = el.currentStyle;\n      }\n\n      return prop === void 0 ? val : val[prop];\n    } else {\n      if (!(prop in style) && prop.indexOf('webkit') === -1) {\n        prop = '-webkit-' + prop;\n      }\n\n      style[prop] = val + (typeof val === 'string' ? '' : 'px');\n    }\n  }\n}\n\nfunction matrix(el, selfOnly) {\n  var appliedTransforms = '';\n\n  if (typeof el === 'string') {\n    appliedTransforms = el;\n  } else {\n    do {\n      var transform = css(el, 'transform');\n\n      if (transform && transform !== 'none') {\n        appliedTransforms = transform + ' ' + appliedTransforms;\n      }\n      /* jshint boss:true */\n\n    } while (!selfOnly && (el = el.parentNode));\n  }\n\n  var matrixFn = window.DOMMatrix || window.WebKitCSSMatrix || window.CSSMatrix || window.MSCSSMatrix;\n  /*jshint -W056 */\n\n  return matrixFn && new matrixFn(appliedTransforms);\n}\n\nfunction find(ctx, tagName, iterator) {\n  if (ctx) {\n    var list = ctx.getElementsByTagName(tagName),\n        i = 0,\n        n = list.length;\n\n    if (iterator) {\n      for (; i < n; i++) {\n        iterator(list[i], i);\n      }\n    }\n\n    return list;\n  }\n\n  return [];\n}\n\nfunction getWindowScrollingElement() {\n  var scrollingElement = document.scrollingElement;\n\n  if (scrollingElement) {\n    return scrollingElement;\n  } else {\n    return document.documentElement;\n  }\n}\n/**\r\n * Returns the \"bounding client rect\" of given element\r\n * @param  {HTMLElement} el                       The element whose boundingClientRect is wanted\r\n * @param  {[Boolean]} relativeToContainingBlock  Whether the rect should be relative to the containing block of (including) the container\r\n * @param  {[Boolean]} relativeToNonStaticParent  Whether the rect should be relative to the relative parent of (including) the contaienr\r\n * @param  {[Boolean]} undoScale                  Whether the container's scale() should be undone\r\n * @param  {[HTMLElement]} container              The parent the element will be placed in\r\n * @return {Object}                               The boundingClientRect of el, with specified adjustments\r\n */\n\n\nfunction getRect(el, relativeToContainingBlock, relativeToNonStaticParent, undoScale, container) {\n  if (!el.getBoundingClientRect && el !== window) return;\n  var elRect, top, left, bottom, right, height, width;\n\n  if (el !== window && el !== getWindowScrollingElement()) {\n    elRect = el.getBoundingClientRect();\n    top = elRect.top;\n    left = elRect.left;\n    bottom = elRect.bottom;\n    right = elRect.right;\n    height = elRect.height;\n    width = elRect.width;\n  } else {\n    top = 0;\n    left = 0;\n    bottom = window.innerHeight;\n    right = window.innerWidth;\n    height = window.innerHeight;\n    width = window.innerWidth;\n  }\n\n  if ((relativeToContainingBlock || relativeToNonStaticParent) && el !== window) {\n    // Adjust for translate()\n    container = container || el.parentNode; // solves #1123 (see: https://stackoverflow.com/a/37953806/6088312)\n    // Not needed on <= IE11\n\n    if (!IE11OrLess) {\n      do {\n        if (container && container.getBoundingClientRect && (css(container, 'transform') !== 'none' || relativeToNonStaticParent && css(container, 'position') !== 'static')) {\n          var containerRect = container.getBoundingClientRect(); // Set relative to edges of padding box of container\n\n          top -= containerRect.top + parseInt(css(container, 'border-top-width'));\n          left -= containerRect.left + parseInt(css(container, 'border-left-width'));\n          bottom = top + elRect.height;\n          right = left + elRect.width;\n          break;\n        }\n        /* jshint boss:true */\n\n      } while (container = container.parentNode);\n    }\n  }\n\n  if (undoScale && el !== window) {\n    // Adjust for scale()\n    var elMatrix = matrix(container || el),\n        scaleX = elMatrix && elMatrix.a,\n        scaleY = elMatrix && elMatrix.d;\n\n    if (elMatrix) {\n      top /= scaleY;\n      left /= scaleX;\n      width /= scaleX;\n      height /= scaleY;\n      bottom = top + height;\n      right = left + width;\n    }\n  }\n\n  return {\n    top: top,\n    left: left,\n    bottom: bottom,\n    right: right,\n    width: width,\n    height: height\n  };\n}\n/**\r\n * Checks if a side of an element is scrolled past a side of its parents\r\n * @param  {HTMLElement}  el           The element who's side being scrolled out of view is in question\r\n * @param  {String}       elSide       Side of the element in question ('top', 'left', 'right', 'bottom')\r\n * @param  {String}       parentSide   Side of the parent in question ('top', 'left', 'right', 'bottom')\r\n * @return {HTMLElement}               The parent scroll element that the el's side is scrolled past, or null if there is no such element\r\n */\n\n\nfunction isScrolledPast(el, elSide, parentSide) {\n  var parent = getParentAutoScrollElement(el, true),\n      elSideVal = getRect(el)[elSide];\n  /* jshint boss:true */\n\n  while (parent) {\n    var parentSideVal = getRect(parent)[parentSide],\n        visible = void 0;\n\n    if (parentSide === 'top' || parentSide === 'left') {\n      visible = elSideVal >= parentSideVal;\n    } else {\n      visible = elSideVal <= parentSideVal;\n    }\n\n    if (!visible) return parent;\n    if (parent === getWindowScrollingElement()) break;\n    parent = getParentAutoScrollElement(parent, false);\n  }\n\n  return false;\n}\n/**\r\n * Gets nth child of el, ignoring hidden children, sortable's elements (does not ignore clone if it's visible)\r\n * and non-draggable elements\r\n * @param  {HTMLElement} el       The parent element\r\n * @param  {Number} childNum      The index of the child\r\n * @param  {Object} options       Parent Sortable's options\r\n * @return {HTMLElement}          The child at index childNum, or null if not found\r\n */\n\n\nfunction getChild(el, childNum, options) {\n  var currentChild = 0,\n      i = 0,\n      children = el.children;\n\n  while (i < children.length) {\n    if (children[i].style.display !== 'none' && children[i] !== Sortable.ghost && children[i] !== Sortable.dragged && closest(children[i], options.draggable, el, false)) {\n      if (currentChild === childNum) {\n        return children[i];\n      }\n\n      currentChild++;\n    }\n\n    i++;\n  }\n\n  return null;\n}\n/**\r\n * Gets the last child in the el, ignoring ghostEl or invisible elements (clones)\r\n * @param  {HTMLElement} el       Parent element\r\n * @param  {selector} selector    Any other elements that should be ignored\r\n * @return {HTMLElement}          The last child, ignoring ghostEl\r\n */\n\n\nfunction lastChild(el, selector) {\n  var last = el.lastElementChild;\n\n  while (last && (last === Sortable.ghost || css(last, 'display') === 'none' || selector && !matches(last, selector))) {\n    last = last.previousElementSibling;\n  }\n\n  return last || null;\n}\n/**\r\n * Returns the index of an element within its parent for a selected set of\r\n * elements\r\n * @param  {HTMLElement} el\r\n * @param  {selector} selector\r\n * @return {number}\r\n */\n\n\nfunction index(el, selector) {\n  var index = 0;\n\n  if (!el || !el.parentNode) {\n    return -1;\n  }\n  /* jshint boss:true */\n\n\n  while (el = el.previousElementSibling) {\n    if (el.nodeName.toUpperCase() !== 'TEMPLATE' && el !== Sortable.clone && (!selector || matches(el, selector))) {\n      index++;\n    }\n  }\n\n  return index;\n}\n/**\r\n * Returns the scroll offset of the given element, added with all the scroll offsets of parent elements.\r\n * The value is returned in real pixels.\r\n * @param  {HTMLElement} el\r\n * @return {Array}             Offsets in the format of [left, top]\r\n */\n\n\nfunction getRelativeScrollOffset(el) {\n  var offsetLeft = 0,\n      offsetTop = 0,\n      winScroller = getWindowScrollingElement();\n\n  if (el) {\n    do {\n      var elMatrix = matrix(el),\n          scaleX = elMatrix.a,\n          scaleY = elMatrix.d;\n      offsetLeft += el.scrollLeft * scaleX;\n      offsetTop += el.scrollTop * scaleY;\n    } while (el !== winScroller && (el = el.parentNode));\n  }\n\n  return [offsetLeft, offsetTop];\n}\n/**\r\n * Returns the index of the object within the given array\r\n * @param  {Array} arr   Array that may or may not hold the object\r\n * @param  {Object} obj  An object that has a key-value pair unique to and identical to a key-value pair in the object you want to find\r\n * @return {Number}      The index of the object in the array, or -1\r\n */\n\n\nfunction indexOfObject(arr, obj) {\n  for (var i in arr) {\n    if (!arr.hasOwnProperty(i)) continue;\n\n    for (var key in obj) {\n      if (obj.hasOwnProperty(key) && obj[key] === arr[i][key]) return Number(i);\n    }\n  }\n\n  return -1;\n}\n\nfunction getParentAutoScrollElement(el, includeSelf) {\n  // skip to window\n  if (!el || !el.getBoundingClientRect) return getWindowScrollingElement();\n  var elem = el;\n  var gotSelf = false;\n\n  do {\n    // we don't need to get elem css if it isn't even overflowing in the first place (performance)\n    if (elem.clientWidth < elem.scrollWidth || elem.clientHeight < elem.scrollHeight) {\n      var elemCSS = css(elem);\n\n      if (elem.clientWidth < elem.scrollWidth && (elemCSS.overflowX == 'auto' || elemCSS.overflowX == 'scroll') || elem.clientHeight < elem.scrollHeight && (elemCSS.overflowY == 'auto' || elemCSS.overflowY == 'scroll')) {\n        if (!elem.getBoundingClientRect || elem === document.body) return getWindowScrollingElement();\n        if (gotSelf || includeSelf) return elem;\n        gotSelf = true;\n      }\n    }\n    /* jshint boss:true */\n\n  } while (elem = elem.parentNode);\n\n  return getWindowScrollingElement();\n}\n\nfunction extend(dst, src) {\n  if (dst && src) {\n    for (var key in src) {\n      if (src.hasOwnProperty(key)) {\n        dst[key] = src[key];\n      }\n    }\n  }\n\n  return dst;\n}\n\nfunction isRectEqual(rect1, rect2) {\n  return Math.round(rect1.top) === Math.round(rect2.top) && Math.round(rect1.left) === Math.round(rect2.left) && Math.round(rect1.height) === Math.round(rect2.height) && Math.round(rect1.width) === Math.round(rect2.width);\n}\n\nvar _throttleTimeout;\n\nfunction throttle(callback, ms) {\n  return function () {\n    if (!_throttleTimeout) {\n      var args = arguments,\n          _this = this;\n\n      if (args.length === 1) {\n        callback.call(_this, args[0]);\n      } else {\n        callback.apply(_this, args);\n      }\n\n      _throttleTimeout = setTimeout(function () {\n        _throttleTimeout = void 0;\n      }, ms);\n    }\n  };\n}\n\nfunction cancelThrottle() {\n  clearTimeout(_throttleTimeout);\n  _throttleTimeout = void 0;\n}\n\nfunction scrollBy(el, x, y) {\n  el.scrollLeft += x;\n  el.scrollTop += y;\n}\n\nfunction clone(el) {\n  var Polymer = window.Polymer;\n  var $ = window.jQuery || window.Zepto;\n\n  if (Polymer && Polymer.dom) {\n    return Polymer.dom(el).cloneNode(true);\n  } else if ($) {\n    return $(el).clone(true)[0];\n  } else {\n    return el.cloneNode(true);\n  }\n}\n\nfunction setRect(el, rect) {\n  css(el, 'position', 'absolute');\n  css(el, 'top', rect.top);\n  css(el, 'left', rect.left);\n  css(el, 'width', rect.width);\n  css(el, 'height', rect.height);\n}\n\nfunction unsetRect(el) {\n  css(el, 'position', '');\n  css(el, 'top', '');\n  css(el, 'left', '');\n  css(el, 'width', '');\n  css(el, 'height', '');\n}\n\nvar expando = 'Sortable' + new Date().getTime();\n\nfunction AnimationStateManager() {\n  var animationStates = [],\n      animationCallbackId;\n  return {\n    captureAnimationState: function captureAnimationState() {\n      animationStates = [];\n      if (!this.options.animation) return;\n      var children = [].slice.call(this.el.children);\n      children.forEach(function (child) {\n        if (css(child, 'display') === 'none' || child === Sortable.ghost) return;\n        animationStates.push({\n          target: child,\n          rect: getRect(child)\n        });\n\n        var fromRect = _objectSpread({}, animationStates[animationStates.length - 1].rect); // If animating: compensate for current animation\n\n\n        if (child.thisAnimationDuration) {\n          var childMatrix = matrix(child, true);\n\n          if (childMatrix) {\n            fromRect.top -= childMatrix.f;\n            fromRect.left -= childMatrix.e;\n          }\n        }\n\n        child.fromRect = fromRect;\n      });\n    },\n    addAnimationState: function addAnimationState(state) {\n      animationStates.push(state);\n    },\n    removeAnimationState: function removeAnimationState(target) {\n      animationStates.splice(indexOfObject(animationStates, {\n        target: target\n      }), 1);\n    },\n    animateAll: function animateAll(callback) {\n      var _this = this;\n\n      if (!this.options.animation) {\n        clearTimeout(animationCallbackId);\n        if (typeof callback === 'function') callback();\n        return;\n      }\n\n      var animating = false,\n          animationTime = 0;\n      animationStates.forEach(function (state) {\n        var time = 0,\n            target = state.target,\n            fromRect = target.fromRect,\n            toRect = getRect(target),\n            prevFromRect = target.prevFromRect,\n            prevToRect = target.prevToRect,\n            animatingRect = state.rect,\n            targetMatrix = matrix(target, true);\n\n        if (targetMatrix) {\n          // Compensate for current animation\n          toRect.top -= targetMatrix.f;\n          toRect.left -= targetMatrix.e;\n        }\n\n        target.toRect = toRect;\n\n        if (target.thisAnimationDuration) {\n          // Could also check if animatingRect is between fromRect and toRect\n          if (isRectEqual(prevFromRect, toRect) && !isRectEqual(fromRect, toRect) && // Make sure animatingRect is on line between toRect & fromRect\n          (animatingRect.top - toRect.top) / (animatingRect.left - toRect.left) === (fromRect.top - toRect.top) / (fromRect.left - toRect.left)) {\n            // If returning to same place as started from animation and on same axis\n            time = calculateRealTime(animatingRect, prevFromRect, prevToRect, _this.options);\n          }\n        } // if fromRect != toRect: animate\n\n\n        if (!isRectEqual(toRect, fromRect)) {\n          target.prevFromRect = fromRect;\n          target.prevToRect = toRect;\n\n          if (!time) {\n            time = _this.options.animation;\n          }\n\n          _this.animate(target, animatingRect, toRect, time);\n        }\n\n        if (time) {\n          animating = true;\n          animationTime = Math.max(animationTime, time);\n          clearTimeout(target.animationResetTimer);\n          target.animationResetTimer = setTimeout(function () {\n            target.animationTime = 0;\n            target.prevFromRect = null;\n            target.fromRect = null;\n            target.prevToRect = null;\n            target.thisAnimationDuration = null;\n          }, time);\n          target.thisAnimationDuration = time;\n        }\n      });\n      clearTimeout(animationCallbackId);\n\n      if (!animating) {\n        if (typeof callback === 'function') callback();\n      } else {\n        animationCallbackId = setTimeout(function () {\n          if (typeof callback === 'function') callback();\n        }, animationTime);\n      }\n\n      animationStates = [];\n    },\n    animate: function animate(target, currentRect, toRect, duration) {\n      if (duration) {\n        css(target, 'transition', '');\n        css(target, 'transform', '');\n        var elMatrix = matrix(this.el),\n            scaleX = elMatrix && elMatrix.a,\n            scaleY = elMatrix && elMatrix.d,\n            translateX = (currentRect.left - toRect.left) / (scaleX || 1),\n            translateY = (currentRect.top - toRect.top) / (scaleY || 1);\n        target.animatingX = !!translateX;\n        target.animatingY = !!translateY;\n        css(target, 'transform', 'translate3d(' + translateX + 'px,' + translateY + 'px,0)');\n        repaint(target); // repaint\n\n        css(target, 'transition', 'transform ' + duration + 'ms' + (this.options.easing ? ' ' + this.options.easing : ''));\n        css(target, 'transform', 'translate3d(0,0,0)');\n        typeof target.animated === 'number' && clearTimeout(target.animated);\n        target.animated = setTimeout(function () {\n          css(target, 'transition', '');\n          css(target, 'transform', '');\n          target.animated = false;\n          target.animatingX = false;\n          target.animatingY = false;\n        }, duration);\n      }\n    }\n  };\n}\n\nfunction repaint(target) {\n  return target.offsetWidth;\n}\n\nfunction calculateRealTime(animatingRect, fromRect, toRect, options) {\n  return Math.sqrt(Math.pow(fromRect.top - animatingRect.top, 2) + Math.pow(fromRect.left - animatingRect.left, 2)) / Math.sqrt(Math.pow(fromRect.top - toRect.top, 2) + Math.pow(fromRect.left - toRect.left, 2)) * options.animation;\n}\n\nvar plugins = [];\nvar defaults = {\n  initializeByDefault: true\n};\nvar PluginManager = {\n  mount: function mount(plugin) {\n    // Set default static properties\n    for (var option in defaults) {\n      if (defaults.hasOwnProperty(option) && !(option in plugin)) {\n        plugin[option] = defaults[option];\n      }\n    }\n\n    plugins.push(plugin);\n  },\n  pluginEvent: function pluginEvent(eventName, sortable, evt) {\n    var _this = this;\n\n    this.eventCanceled = false;\n\n    evt.cancel = function () {\n      _this.eventCanceled = true;\n    };\n\n    var eventNameGlobal = eventName + 'Global';\n    plugins.forEach(function (plugin) {\n      if (!sortable[plugin.pluginName]) return; // Fire global events if it exists in this sortable\n\n      if (sortable[plugin.pluginName][eventNameGlobal]) {\n        sortable[plugin.pluginName][eventNameGlobal](_objectSpread({\n          sortable: sortable\n        }, evt));\n      } // Only fire plugin event if plugin is enabled in this sortable,\n      // and plugin has event defined\n\n\n      if (sortable.options[plugin.pluginName] && sortable[plugin.pluginName][eventName]) {\n        sortable[plugin.pluginName][eventName](_objectSpread({\n          sortable: sortable\n        }, evt));\n      }\n    });\n  },\n  initializePlugins: function initializePlugins(sortable, el, defaults, options) {\n    plugins.forEach(function (plugin) {\n      var pluginName = plugin.pluginName;\n      if (!sortable.options[pluginName] && !plugin.initializeByDefault) return;\n      var initialized = new plugin(sortable, el, sortable.options);\n      initialized.sortable = sortable;\n      initialized.options = sortable.options;\n      sortable[pluginName] = initialized; // Add default options from plugin\n\n      _extends(defaults, initialized.defaults);\n    });\n\n    for (var option in sortable.options) {\n      if (!sortable.options.hasOwnProperty(option)) continue;\n      var modified = this.modifyOption(sortable, option, sortable.options[option]);\n\n      if (typeof modified !== 'undefined') {\n        sortable.options[option] = modified;\n      }\n    }\n  },\n  getEventProperties: function getEventProperties(name, sortable) {\n    var eventProperties = {};\n    plugins.forEach(function (plugin) {\n      if (typeof plugin.eventProperties !== 'function') return;\n\n      _extends(eventProperties, plugin.eventProperties.call(sortable[plugin.pluginName], name));\n    });\n    return eventProperties;\n  },\n  modifyOption: function modifyOption(sortable, name, value) {\n    var modifiedValue;\n    plugins.forEach(function (plugin) {\n      // Plugin must exist on the Sortable\n      if (!sortable[plugin.pluginName]) return; // If static option listener exists for this option, call in the context of the Sortable's instance of this plugin\n\n      if (plugin.optionListeners && typeof plugin.optionListeners[name] === 'function') {\n        modifiedValue = plugin.optionListeners[name].call(sortable[plugin.pluginName], value);\n      }\n    });\n    return modifiedValue;\n  }\n};\n\nfunction dispatchEvent(_ref) {\n  var sortable = _ref.sortable,\n      rootEl = _ref.rootEl,\n      name = _ref.name,\n      targetEl = _ref.targetEl,\n      cloneEl = _ref.cloneEl,\n      toEl = _ref.toEl,\n      fromEl = _ref.fromEl,\n      oldIndex = _ref.oldIndex,\n      newIndex = _ref.newIndex,\n      oldDraggableIndex = _ref.oldDraggableIndex,\n      newDraggableIndex = _ref.newDraggableIndex,\n      originalEvent = _ref.originalEvent,\n      putSortable = _ref.putSortable,\n      extraEventProperties = _ref.extraEventProperties;\n  sortable = sortable || rootEl && rootEl[expando];\n  if (!sortable) return;\n  var evt,\n      options = sortable.options,\n      onName = 'on' + name.charAt(0).toUpperCase() + name.substr(1); // Support for new CustomEvent feature\n\n  if (window.CustomEvent && !IE11OrLess && !Edge) {\n    evt = new CustomEvent(name, {\n      bubbles: true,\n      cancelable: true\n    });\n  } else {\n    evt = document.createEvent('Event');\n    evt.initEvent(name, true, true);\n  }\n\n  evt.to = toEl || rootEl;\n  evt.from = fromEl || rootEl;\n  evt.item = targetEl || rootEl;\n  evt.clone = cloneEl;\n  evt.oldIndex = oldIndex;\n  evt.newIndex = newIndex;\n  evt.oldDraggableIndex = oldDraggableIndex;\n  evt.newDraggableIndex = newDraggableIndex;\n  evt.originalEvent = originalEvent;\n  evt.pullMode = putSortable ? putSortable.lastPutMode : undefined;\n\n  var allEventProperties = _objectSpread({}, extraEventProperties, PluginManager.getEventProperties(name, sortable));\n\n  for (var option in allEventProperties) {\n    evt[option] = allEventProperties[option];\n  }\n\n  if (rootEl) {\n    rootEl.dispatchEvent(evt);\n  }\n\n  if (options[onName]) {\n    options[onName].call(sortable, evt);\n  }\n}\n\nvar pluginEvent = function pluginEvent(eventName, sortable) {\n  var _ref = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {},\n      originalEvent = _ref.evt,\n      data = _objectWithoutProperties(_ref, [\"evt\"]);\n\n  PluginManager.pluginEvent.bind(Sortable)(eventName, sortable, _objectSpread({\n    dragEl: dragEl,\n    parentEl: parentEl,\n    ghostEl: ghostEl,\n    rootEl: rootEl,\n    nextEl: nextEl,\n    lastDownEl: lastDownEl,\n    cloneEl: cloneEl,\n    cloneHidden: cloneHidden,\n    dragStarted: moved,\n    putSortable: putSortable,\n    activeSortable: Sortable.active,\n    originalEvent: originalEvent,\n    oldIndex: oldIndex,\n    oldDraggableIndex: oldDraggableIndex,\n    newIndex: newIndex,\n    newDraggableIndex: newDraggableIndex,\n    hideGhostForTarget: _hideGhostForTarget,\n    unhideGhostForTarget: _unhideGhostForTarget,\n    cloneNowHidden: function cloneNowHidden() {\n      cloneHidden = true;\n    },\n    cloneNowShown: function cloneNowShown() {\n      cloneHidden = false;\n    },\n    dispatchSortableEvent: function dispatchSortableEvent(name) {\n      _dispatchEvent({\n        sortable: sortable,\n        name: name,\n        originalEvent: originalEvent\n      });\n    }\n  }, data));\n};\n\nfunction _dispatchEvent(info) {\n  dispatchEvent(_objectSpread({\n    putSortable: putSortable,\n    cloneEl: cloneEl,\n    targetEl: dragEl,\n    rootEl: rootEl,\n    oldIndex: oldIndex,\n    oldDraggableIndex: oldDraggableIndex,\n    newIndex: newIndex,\n    newDraggableIndex: newDraggableIndex\n  }, info));\n}\n\nvar dragEl,\n    parentEl,\n    ghostEl,\n    rootEl,\n    nextEl,\n    lastDownEl,\n    cloneEl,\n    cloneHidden,\n    oldIndex,\n    newIndex,\n    oldDraggableIndex,\n    newDraggableIndex,\n    activeGroup,\n    putSortable,\n    awaitingDragStarted = false,\n    ignoreNextClick = false,\n    sortables = [],\n    tapEvt,\n    touchEvt,\n    lastDx,\n    lastDy,\n    tapDistanceLeft,\n    tapDistanceTop,\n    moved,\n    lastTarget,\n    lastDirection,\n    pastFirstInvertThresh = false,\n    isCircumstantialInvert = false,\n    targetMoveDistance,\n    // For positioning ghost absolutely\nghostRelativeParent,\n    ghostRelativeParentInitialScroll = [],\n    // (left, top)\n_silent = false,\n    savedInputChecked = [];\n/** @const */\n\nvar documentExists = typeof document !== 'undefined',\n    PositionGhostAbsolutely = IOS,\n    CSSFloatProperty = Edge || IE11OrLess ? 'cssFloat' : 'float',\n    // This will not pass for IE9, because IE9 DnD only works on anchors\nsupportDraggable = documentExists && !ChromeForAndroid && !IOS && 'draggable' in document.createElement('div'),\n    supportCssPointerEvents = function () {\n  if (!documentExists) return; // false when <= IE11\n\n  if (IE11OrLess) {\n    return false;\n  }\n\n  var el = document.createElement('x');\n  el.style.cssText = 'pointer-events:auto';\n  return el.style.pointerEvents === 'auto';\n}(),\n    _detectDirection = function _detectDirection(el, options) {\n  var elCSS = css(el),\n      elWidth = parseInt(elCSS.width) - parseInt(elCSS.paddingLeft) - parseInt(elCSS.paddingRight) - parseInt(elCSS.borderLeftWidth) - parseInt(elCSS.borderRightWidth),\n      child1 = getChild(el, 0, options),\n      child2 = getChild(el, 1, options),\n      firstChildCSS = child1 && css(child1),\n      secondChildCSS = child2 && css(child2),\n      firstChildWidth = firstChildCSS && parseInt(firstChildCSS.marginLeft) + parseInt(firstChildCSS.marginRight) + getRect(child1).width,\n      secondChildWidth = secondChildCSS && parseInt(secondChildCSS.marginLeft) + parseInt(secondChildCSS.marginRight) + getRect(child2).width;\n\n  if (elCSS.display === 'flex') {\n    return elCSS.flexDirection === 'column' || elCSS.flexDirection === 'column-reverse' ? 'vertical' : 'horizontal';\n  }\n\n  if (elCSS.display === 'grid') {\n    return elCSS.gridTemplateColumns.split(' ').length <= 1 ? 'vertical' : 'horizontal';\n  }\n\n  if (child1 && firstChildCSS[\"float\"] && firstChildCSS[\"float\"] !== 'none') {\n    var touchingSideChild2 = firstChildCSS[\"float\"] === 'left' ? 'left' : 'right';\n    return child2 && (secondChildCSS.clear === 'both' || secondChildCSS.clear === touchingSideChild2) ? 'vertical' : 'horizontal';\n  }\n\n  return child1 && (firstChildCSS.display === 'block' || firstChildCSS.display === 'flex' || firstChildCSS.display === 'table' || firstChildCSS.display === 'grid' || firstChildWidth >= elWidth && elCSS[CSSFloatProperty] === 'none' || child2 && elCSS[CSSFloatProperty] === 'none' && firstChildWidth + secondChildWidth > elWidth) ? 'vertical' : 'horizontal';\n},\n    _dragElInRowColumn = function _dragElInRowColumn(dragRect, targetRect, vertical) {\n  var dragElS1Opp = vertical ? dragRect.left : dragRect.top,\n      dragElS2Opp = vertical ? dragRect.right : dragRect.bottom,\n      dragElOppLength = vertical ? dragRect.width : dragRect.height,\n      targetS1Opp = vertical ? targetRect.left : targetRect.top,\n      targetS2Opp = vertical ? targetRect.right : targetRect.bottom,\n      targetOppLength = vertical ? targetRect.width : targetRect.height;\n  return dragElS1Opp === targetS1Opp || dragElS2Opp === targetS2Opp || dragElS1Opp + dragElOppLength / 2 === targetS1Opp + targetOppLength / 2;\n},\n\n/**\n * Detects first nearest empty sortable to X and Y position using emptyInsertThreshold.\n * @param  {Number} x      X position\n * @param  {Number} y      Y position\n * @return {HTMLElement}   Element of the first found nearest Sortable\n */\n_detectNearestEmptySortable = function _detectNearestEmptySortable(x, y) {\n  var ret;\n  sortables.some(function (sortable) {\n    if (lastChild(sortable)) return;\n    var rect = getRect(sortable),\n        threshold = sortable[expando].options.emptyInsertThreshold,\n        insideHorizontally = x >= rect.left - threshold && x <= rect.right + threshold,\n        insideVertically = y >= rect.top - threshold && y <= rect.bottom + threshold;\n\n    if (threshold && insideHorizontally && insideVertically) {\n      return ret = sortable;\n    }\n  });\n  return ret;\n},\n    _prepareGroup = function _prepareGroup(options) {\n  function toFn(value, pull) {\n    return function (to, from, dragEl, evt) {\n      var sameGroup = to.options.group.name && from.options.group.name && to.options.group.name === from.options.group.name;\n\n      if (value == null && (pull || sameGroup)) {\n        // Default pull value\n        // Default pull and put value if same group\n        return true;\n      } else if (value == null || value === false) {\n        return false;\n      } else if (pull && value === 'clone') {\n        return value;\n      } else if (typeof value === 'function') {\n        return toFn(value(to, from, dragEl, evt), pull)(to, from, dragEl, evt);\n      } else {\n        var otherGroup = (pull ? to : from).options.group.name;\n        return value === true || typeof value === 'string' && value === otherGroup || value.join && value.indexOf(otherGroup) > -1;\n      }\n    };\n  }\n\n  var group = {};\n  var originalGroup = options.group;\n\n  if (!originalGroup || _typeof(originalGroup) != 'object') {\n    originalGroup = {\n      name: originalGroup\n    };\n  }\n\n  group.name = originalGroup.name;\n  group.checkPull = toFn(originalGroup.pull, true);\n  group.checkPut = toFn(originalGroup.put);\n  group.revertClone = originalGroup.revertClone;\n  options.group = group;\n},\n    _hideGhostForTarget = function _hideGhostForTarget() {\n  if (!supportCssPointerEvents && ghostEl) {\n    css(ghostEl, 'display', 'none');\n  }\n},\n    _unhideGhostForTarget = function _unhideGhostForTarget() {\n  if (!supportCssPointerEvents && ghostEl) {\n    css(ghostEl, 'display', '');\n  }\n}; // #1184 fix - Prevent click event on fallback if dragged but item not changed position\n\n\nif (documentExists) {\n  document.addEventListener('click', function (evt) {\n    if (ignoreNextClick) {\n      evt.preventDefault();\n      evt.stopPropagation && evt.stopPropagation();\n      evt.stopImmediatePropagation && evt.stopImmediatePropagation();\n      ignoreNextClick = false;\n      return false;\n    }\n  }, true);\n}\n\nvar nearestEmptyInsertDetectEvent = function nearestEmptyInsertDetectEvent(evt) {\n  if (dragEl) {\n    evt = evt.touches ? evt.touches[0] : evt;\n\n    var nearest = _detectNearestEmptySortable(evt.clientX, evt.clientY);\n\n    if (nearest) {\n      // Create imitation event\n      var event = {};\n\n      for (var i in evt) {\n        if (evt.hasOwnProperty(i)) {\n          event[i] = evt[i];\n        }\n      }\n\n      event.target = event.rootEl = nearest;\n      event.preventDefault = void 0;\n      event.stopPropagation = void 0;\n\n      nearest[expando]._onDragOver(event);\n    }\n  }\n};\n\nvar _checkOutsideTargetEl = function _checkOutsideTargetEl(evt) {\n  if (dragEl) {\n    dragEl.parentNode[expando]._isOutsideThisEl(evt.target);\n  }\n};\n/**\n * @class  Sortable\n * @param  {HTMLElement}  el\n * @param  {Object}       [options]\n */\n\n\nfunction Sortable(el, options) {\n  if (!(el && el.nodeType && el.nodeType === 1)) {\n    throw \"Sortable: `el` must be an HTMLElement, not \".concat({}.toString.call(el));\n  }\n\n  this.el = el; // root element\n\n  this.options = options = _extends({}, options); // Export instance\n\n  el[expando] = this;\n  var defaults = {\n    group: null,\n    sort: true,\n    disabled: false,\n    store: null,\n    handle: null,\n    draggable: /^[uo]l$/i.test(el.nodeName) ? '>li' : '>*',\n    swapThreshold: 1,\n    // percentage; 0 <= x <= 1\n    invertSwap: false,\n    // invert always\n    invertedSwapThreshold: null,\n    // will be set to same as swapThreshold if default\n    removeCloneOnHide: true,\n    direction: function direction() {\n      return _detectDirection(el, this.options);\n    },\n    ghostClass: 'sortable-ghost',\n    chosenClass: 'sortable-chosen',\n    dragClass: 'sortable-drag',\n    ignore: 'a, img',\n    filter: null,\n    preventOnFilter: true,\n    animation: 0,\n    easing: null,\n    setData: function setData(dataTransfer, dragEl) {\n      dataTransfer.setData('Text', dragEl.textContent);\n    },\n    dropBubble: false,\n    dragoverBubble: false,\n    dataIdAttr: 'data-id',\n    delay: 0,\n    delayOnTouchOnly: false,\n    touchStartThreshold: (Number.parseInt ? Number : window).parseInt(window.devicePixelRatio, 10) || 1,\n    forceFallback: false,\n    fallbackClass: 'sortable-fallback',\n    fallbackOnBody: false,\n    fallbackTolerance: 0,\n    fallbackOffset: {\n      x: 0,\n      y: 0\n    },\n    supportPointer: Sortable.supportPointer !== false && 'PointerEvent' in window,\n    emptyInsertThreshold: 5\n  };\n  PluginManager.initializePlugins(this, el, defaults); // Set default options\n\n  for (var name in defaults) {\n    !(name in options) && (options[name] = defaults[name]);\n  }\n\n  _prepareGroup(options); // Bind all private methods\n\n\n  for (var fn in this) {\n    if (fn.charAt(0) === '_' && typeof this[fn] === 'function') {\n      this[fn] = this[fn].bind(this);\n    }\n  } // Setup drag mode\n\n\n  this.nativeDraggable = options.forceFallback ? false : supportDraggable;\n\n  if (this.nativeDraggable) {\n    // Touch start threshold cannot be greater than the native dragstart threshold\n    this.options.touchStartThreshold = 1;\n  } // Bind events\n\n\n  if (options.supportPointer) {\n    on(el, 'pointerdown', this._onTapStart);\n  } else {\n    on(el, 'mousedown', this._onTapStart);\n    on(el, 'touchstart', this._onTapStart);\n  }\n\n  if (this.nativeDraggable) {\n    on(el, 'dragover', this);\n    on(el, 'dragenter', this);\n  }\n\n  sortables.push(this.el); // Restore sorting\n\n  options.store && options.store.get && this.sort(options.store.get(this) || []); // Add animation state manager\n\n  _extends(this, AnimationStateManager());\n}\n\nSortable.prototype =\n/** @lends Sortable.prototype */\n{\n  constructor: Sortable,\n  _isOutsideThisEl: function _isOutsideThisEl(target) {\n    if (!this.el.contains(target) && target !== this.el) {\n      lastTarget = null;\n    }\n  },\n  _getDirection: function _getDirection(evt, target) {\n    return typeof this.options.direction === 'function' ? this.options.direction.call(this, evt, target, dragEl) : this.options.direction;\n  },\n  _onTapStart: function _onTapStart(\n  /** Event|TouchEvent */\n  evt) {\n    if (!evt.cancelable) return;\n\n    var _this = this,\n        el = this.el,\n        options = this.options,\n        preventOnFilter = options.preventOnFilter,\n        type = evt.type,\n        touch = evt.touches && evt.touches[0] || evt.pointerType && evt.pointerType === 'touch' && evt,\n        target = (touch || evt).target,\n        originalTarget = evt.target.shadowRoot && (evt.path && evt.path[0] || evt.composedPath && evt.composedPath()[0]) || target,\n        filter = options.filter;\n\n    _saveInputCheckedState(el); // Don't trigger start event when an element is been dragged, otherwise the evt.oldindex always wrong when set option.group.\n\n\n    if (dragEl) {\n      return;\n    }\n\n    if (/mousedown|pointerdown/.test(type) && evt.button !== 0 || options.disabled) {\n      return; // only left button and enabled\n    } // cancel dnd if original target is content editable\n\n\n    if (originalTarget.isContentEditable) {\n      return;\n    }\n\n    target = closest(target, options.draggable, el, false);\n\n    if (target && target.animated) {\n      return;\n    }\n\n    if (lastDownEl === target) {\n      // Ignoring duplicate `down`\n      return;\n    } // Get the index of the dragged element within its parent\n\n\n    oldIndex = index(target);\n    oldDraggableIndex = index(target, options.draggable); // Check filter\n\n    if (typeof filter === 'function') {\n      if (filter.call(this, evt, target, this)) {\n        _dispatchEvent({\n          sortable: _this,\n          rootEl: originalTarget,\n          name: 'filter',\n          targetEl: target,\n          toEl: el,\n          fromEl: el\n        });\n\n        pluginEvent('filter', _this, {\n          evt: evt\n        });\n        preventOnFilter && evt.cancelable && evt.preventDefault();\n        return; // cancel dnd\n      }\n    } else if (filter) {\n      filter = filter.split(',').some(function (criteria) {\n        criteria = closest(originalTarget, criteria.trim(), el, false);\n\n        if (criteria) {\n          _dispatchEvent({\n            sortable: _this,\n            rootEl: criteria,\n            name: 'filter',\n            targetEl: target,\n            fromEl: el,\n            toEl: el\n          });\n\n          pluginEvent('filter', _this, {\n            evt: evt\n          });\n          return true;\n        }\n      });\n\n      if (filter) {\n        preventOnFilter && evt.cancelable && evt.preventDefault();\n        return; // cancel dnd\n      }\n    }\n\n    if (options.handle && !closest(originalTarget, options.handle, el, false)) {\n      return;\n    } // Prepare `dragstart`\n\n\n    this._prepareDragStart(evt, touch, target);\n  },\n  _prepareDragStart: function _prepareDragStart(\n  /** Event */\n  evt,\n  /** Touch */\n  touch,\n  /** HTMLElement */\n  target) {\n    var _this = this,\n        el = _this.el,\n        options = _this.options,\n        ownerDocument = el.ownerDocument,\n        dragStartFn;\n\n    if (target && !dragEl && target.parentNode === el) {\n      var dragRect = getRect(target);\n      rootEl = el;\n      dragEl = target;\n      parentEl = dragEl.parentNode;\n      nextEl = dragEl.nextSibling;\n      lastDownEl = target;\n      activeGroup = options.group;\n      Sortable.dragged = dragEl;\n      tapEvt = {\n        target: dragEl,\n        clientX: (touch || evt).clientX,\n        clientY: (touch || evt).clientY\n      };\n      tapDistanceLeft = tapEvt.clientX - dragRect.left;\n      tapDistanceTop = tapEvt.clientY - dragRect.top;\n      this._lastX = (touch || evt).clientX;\n      this._lastY = (touch || evt).clientY;\n      dragEl.style['will-change'] = 'all';\n\n      dragStartFn = function dragStartFn() {\n        pluginEvent('delayEnded', _this, {\n          evt: evt\n        });\n\n        if (Sortable.eventCanceled) {\n          _this._onDrop();\n\n          return;\n        } // Delayed drag has been triggered\n        // we can re-enable the events: touchmove/mousemove\n\n\n        _this._disableDelayedDragEvents();\n\n        if (!FireFox && _this.nativeDraggable) {\n          dragEl.draggable = true;\n        } // Bind the events: dragstart/dragend\n\n\n        _this._triggerDragStart(evt, touch); // Drag start event\n\n\n        _dispatchEvent({\n          sortable: _this,\n          name: 'choose',\n          originalEvent: evt\n        }); // Chosen item\n\n\n        toggleClass(dragEl, options.chosenClass, true);\n      }; // Disable \"draggable\"\n\n\n      options.ignore.split(',').forEach(function (criteria) {\n        find(dragEl, criteria.trim(), _disableDraggable);\n      });\n      on(ownerDocument, 'dragover', nearestEmptyInsertDetectEvent);\n      on(ownerDocument, 'mousemove', nearestEmptyInsertDetectEvent);\n      on(ownerDocument, 'touchmove', nearestEmptyInsertDetectEvent);\n      on(ownerDocument, 'mouseup', _this._onDrop);\n      on(ownerDocument, 'touchend', _this._onDrop);\n      on(ownerDocument, 'touchcancel', _this._onDrop); // Make dragEl draggable (must be before delay for FireFox)\n\n      if (FireFox && this.nativeDraggable) {\n        this.options.touchStartThreshold = 4;\n        dragEl.draggable = true;\n      }\n\n      pluginEvent('delayStart', this, {\n        evt: evt\n      }); // Delay is impossible for native DnD in Edge or IE\n\n      if (options.delay && (!options.delayOnTouchOnly || touch) && (!this.nativeDraggable || !(Edge || IE11OrLess))) {\n        if (Sortable.eventCanceled) {\n          this._onDrop();\n\n          return;\n        } // If the user moves the pointer or let go the click or touch\n        // before the delay has been reached:\n        // disable the delayed drag\n\n\n        on(ownerDocument, 'mouseup', _this._disableDelayedDrag);\n        on(ownerDocument, 'touchend', _this._disableDelayedDrag);\n        on(ownerDocument, 'touchcancel', _this._disableDelayedDrag);\n        on(ownerDocument, 'mousemove', _this._delayedDragTouchMoveHandler);\n        on(ownerDocument, 'touchmove', _this._delayedDragTouchMoveHandler);\n        options.supportPointer && on(ownerDocument, 'pointermove', _this._delayedDragTouchMoveHandler);\n        _this._dragStartTimer = setTimeout(dragStartFn, options.delay);\n      } else {\n        dragStartFn();\n      }\n    }\n  },\n  _delayedDragTouchMoveHandler: function _delayedDragTouchMoveHandler(\n  /** TouchEvent|PointerEvent **/\n  e) {\n    var touch = e.touches ? e.touches[0] : e;\n\n    if (Math.max(Math.abs(touch.clientX - this._lastX), Math.abs(touch.clientY - this._lastY)) >= Math.floor(this.options.touchStartThreshold / (this.nativeDraggable && window.devicePixelRatio || 1))) {\n      this._disableDelayedDrag();\n    }\n  },\n  _disableDelayedDrag: function _disableDelayedDrag() {\n    dragEl && _disableDraggable(dragEl);\n    clearTimeout(this._dragStartTimer);\n\n    this._disableDelayedDragEvents();\n  },\n  _disableDelayedDragEvents: function _disableDelayedDragEvents() {\n    var ownerDocument = this.el.ownerDocument;\n    off(ownerDocument, 'mouseup', this._disableDelayedDrag);\n    off(ownerDocument, 'touchend', this._disableDelayedDrag);\n    off(ownerDocument, 'touchcancel', this._disableDelayedDrag);\n    off(ownerDocument, 'mousemove', this._delayedDragTouchMoveHandler);\n    off(ownerDocument, 'touchmove', this._delayedDragTouchMoveHandler);\n    off(ownerDocument, 'pointermove', this._delayedDragTouchMoveHandler);\n  },\n  _triggerDragStart: function _triggerDragStart(\n  /** Event */\n  evt,\n  /** Touch */\n  touch) {\n    touch = touch || evt.pointerType == 'touch' && evt;\n\n    if (!this.nativeDraggable || touch) {\n      if (this.options.supportPointer) {\n        on(document, 'pointermove', this._onTouchMove);\n      } else if (touch) {\n        on(document, 'touchmove', this._onTouchMove);\n      } else {\n        on(document, 'mousemove', this._onTouchMove);\n      }\n    } else {\n      on(dragEl, 'dragend', this);\n      on(rootEl, 'dragstart', this._onDragStart);\n    }\n\n    try {\n      if (document.selection) {\n        // Timeout neccessary for IE9\n        _nextTick(function () {\n          document.selection.empty();\n        });\n      } else {\n        window.getSelection().removeAllRanges();\n      }\n    } catch (err) {}\n  },\n  _dragStarted: function _dragStarted(fallback, evt) {\n\n    awaitingDragStarted = false;\n\n    if (rootEl && dragEl) {\n      pluginEvent('dragStarted', this, {\n        evt: evt\n      });\n\n      if (this.nativeDraggable) {\n        on(document, 'dragover', _checkOutsideTargetEl);\n      }\n\n      var options = this.options; // Apply effect\n\n      !fallback && toggleClass(dragEl, options.dragClass, false);\n      toggleClass(dragEl, options.ghostClass, true);\n      Sortable.active = this;\n      fallback && this._appendGhost(); // Drag start event\n\n      _dispatchEvent({\n        sortable: this,\n        name: 'start',\n        originalEvent: evt\n      });\n    } else {\n      this._nulling();\n    }\n  },\n  _emulateDragOver: function _emulateDragOver() {\n    if (touchEvt) {\n      this._lastX = touchEvt.clientX;\n      this._lastY = touchEvt.clientY;\n\n      _hideGhostForTarget();\n\n      var target = document.elementFromPoint(touchEvt.clientX, touchEvt.clientY);\n      var parent = target;\n\n      while (target && target.shadowRoot) {\n        target = target.shadowRoot.elementFromPoint(touchEvt.clientX, touchEvt.clientY);\n        if (target === parent) break;\n        parent = target;\n      }\n\n      dragEl.parentNode[expando]._isOutsideThisEl(target);\n\n      if (parent) {\n        do {\n          if (parent[expando]) {\n            var inserted = void 0;\n            inserted = parent[expando]._onDragOver({\n              clientX: touchEvt.clientX,\n              clientY: touchEvt.clientY,\n              target: target,\n              rootEl: parent\n            });\n\n            if (inserted && !this.options.dragoverBubble) {\n              break;\n            }\n          }\n\n          target = parent; // store last element\n        }\n        /* jshint boss:true */\n        while (parent = parent.parentNode);\n      }\n\n      _unhideGhostForTarget();\n    }\n  },\n  _onTouchMove: function _onTouchMove(\n  /**TouchEvent*/\n  evt) {\n    if (tapEvt) {\n      var options = this.options,\n          fallbackTolerance = options.fallbackTolerance,\n          fallbackOffset = options.fallbackOffset,\n          touch = evt.touches ? evt.touches[0] : evt,\n          ghostMatrix = ghostEl && matrix(ghostEl, true),\n          scaleX = ghostEl && ghostMatrix && ghostMatrix.a,\n          scaleY = ghostEl && ghostMatrix && ghostMatrix.d,\n          relativeScrollOffset = PositionGhostAbsolutely && ghostRelativeParent && getRelativeScrollOffset(ghostRelativeParent),\n          dx = (touch.clientX - tapEvt.clientX + fallbackOffset.x) / (scaleX || 1) + (relativeScrollOffset ? relativeScrollOffset[0] - ghostRelativeParentInitialScroll[0] : 0) / (scaleX || 1),\n          dy = (touch.clientY - tapEvt.clientY + fallbackOffset.y) / (scaleY || 1) + (relativeScrollOffset ? relativeScrollOffset[1] - ghostRelativeParentInitialScroll[1] : 0) / (scaleY || 1); // only set the status to dragging, when we are actually dragging\n\n      if (!Sortable.active && !awaitingDragStarted) {\n        if (fallbackTolerance && Math.max(Math.abs(touch.clientX - this._lastX), Math.abs(touch.clientY - this._lastY)) < fallbackTolerance) {\n          return;\n        }\n\n        this._onDragStart(evt, true);\n      }\n\n      if (ghostEl) {\n        if (ghostMatrix) {\n          ghostMatrix.e += dx - (lastDx || 0);\n          ghostMatrix.f += dy - (lastDy || 0);\n        } else {\n          ghostMatrix = {\n            a: 1,\n            b: 0,\n            c: 0,\n            d: 1,\n            e: dx,\n            f: dy\n          };\n        }\n\n        var cssMatrix = \"matrix(\".concat(ghostMatrix.a, \",\").concat(ghostMatrix.b, \",\").concat(ghostMatrix.c, \",\").concat(ghostMatrix.d, \",\").concat(ghostMatrix.e, \",\").concat(ghostMatrix.f, \")\");\n        css(ghostEl, 'webkitTransform', cssMatrix);\n        css(ghostEl, 'mozTransform', cssMatrix);\n        css(ghostEl, 'msTransform', cssMatrix);\n        css(ghostEl, 'transform', cssMatrix);\n        lastDx = dx;\n        lastDy = dy;\n        touchEvt = touch;\n      }\n\n      evt.cancelable && evt.preventDefault();\n    }\n  },\n  _appendGhost: function _appendGhost() {\n    // Bug if using scale(): https://stackoverflow.com/questions/2637058\n    // Not being adjusted for\n    if (!ghostEl) {\n      var container = this.options.fallbackOnBody ? document.body : rootEl,\n          rect = getRect(dragEl, true, PositionGhostAbsolutely, true, container),\n          options = this.options; // Position absolutely\n\n      if (PositionGhostAbsolutely) {\n        // Get relatively positioned parent\n        ghostRelativeParent = container;\n\n        while (css(ghostRelativeParent, 'position') === 'static' && css(ghostRelativeParent, 'transform') === 'none' && ghostRelativeParent !== document) {\n          ghostRelativeParent = ghostRelativeParent.parentNode;\n        }\n\n        if (ghostRelativeParent !== document.body && ghostRelativeParent !== document.documentElement) {\n          if (ghostRelativeParent === document) ghostRelativeParent = getWindowScrollingElement();\n          rect.top += ghostRelativeParent.scrollTop;\n          rect.left += ghostRelativeParent.scrollLeft;\n        } else {\n          ghostRelativeParent = getWindowScrollingElement();\n        }\n\n        ghostRelativeParentInitialScroll = getRelativeScrollOffset(ghostRelativeParent);\n      }\n\n      ghostEl = dragEl.cloneNode(true);\n      toggleClass(ghostEl, options.ghostClass, false);\n      toggleClass(ghostEl, options.fallbackClass, true);\n      toggleClass(ghostEl, options.dragClass, true);\n      css(ghostEl, 'transition', '');\n      css(ghostEl, 'transform', '');\n      css(ghostEl, 'box-sizing', 'border-box');\n      css(ghostEl, 'margin', 0);\n      css(ghostEl, 'top', rect.top);\n      css(ghostEl, 'left', rect.left);\n      css(ghostEl, 'width', rect.width);\n      css(ghostEl, 'height', rect.height);\n      css(ghostEl, 'opacity', '0.8');\n      css(ghostEl, 'position', PositionGhostAbsolutely ? 'absolute' : 'fixed');\n      css(ghostEl, 'zIndex', '100000');\n      css(ghostEl, 'pointerEvents', 'none');\n      Sortable.ghost = ghostEl;\n      container.appendChild(ghostEl); // Set transform-origin\n\n      css(ghostEl, 'transform-origin', tapDistanceLeft / parseInt(ghostEl.style.width) * 100 + '% ' + tapDistanceTop / parseInt(ghostEl.style.height) * 100 + '%');\n    }\n  },\n  _onDragStart: function _onDragStart(\n  /**Event*/\n  evt,\n  /**boolean*/\n  fallback) {\n    var _this = this;\n\n    var dataTransfer = evt.dataTransfer;\n    var options = _this.options;\n    pluginEvent('dragStart', this, {\n      evt: evt\n    });\n\n    if (Sortable.eventCanceled) {\n      this._onDrop();\n\n      return;\n    }\n\n    pluginEvent('setupClone', this);\n\n    if (!Sortable.eventCanceled) {\n      cloneEl = clone(dragEl);\n      cloneEl.draggable = false;\n      cloneEl.style['will-change'] = '';\n\n      this._hideClone();\n\n      toggleClass(cloneEl, this.options.chosenClass, false);\n      Sortable.clone = cloneEl;\n    } // #1143: IFrame support workaround\n\n\n    _this.cloneId = _nextTick(function () {\n      pluginEvent('clone', _this);\n      if (Sortable.eventCanceled) return;\n\n      if (!_this.options.removeCloneOnHide) {\n        rootEl.insertBefore(cloneEl, dragEl);\n      }\n\n      _this._hideClone();\n\n      _dispatchEvent({\n        sortable: _this,\n        name: 'clone'\n      });\n    });\n    !fallback && toggleClass(dragEl, options.dragClass, true); // Set proper drop events\n\n    if (fallback) {\n      ignoreNextClick = true;\n      _this._loopId = setInterval(_this._emulateDragOver, 50);\n    } else {\n      // Undo what was set in _prepareDragStart before drag started\n      off(document, 'mouseup', _this._onDrop);\n      off(document, 'touchend', _this._onDrop);\n      off(document, 'touchcancel', _this._onDrop);\n\n      if (dataTransfer) {\n        dataTransfer.effectAllowed = 'move';\n        options.setData && options.setData.call(_this, dataTransfer, dragEl);\n      }\n\n      on(document, 'drop', _this); // #1276 fix:\n\n      css(dragEl, 'transform', 'translateZ(0)');\n    }\n\n    awaitingDragStarted = true;\n    _this._dragStartId = _nextTick(_this._dragStarted.bind(_this, fallback, evt));\n    on(document, 'selectstart', _this);\n    moved = true;\n\n    if (Safari) {\n      css(document.body, 'user-select', 'none');\n    }\n  },\n  // Returns true - if no further action is needed (either inserted or another condition)\n  _onDragOver: function _onDragOver(\n  /**Event*/\n  evt) {\n    var el = this.el,\n        target = evt.target,\n        dragRect,\n        targetRect,\n        revert,\n        options = this.options,\n        group = options.group,\n        activeSortable = Sortable.active,\n        isOwner = activeGroup === group,\n        canSort = options.sort,\n        fromSortable = putSortable || activeSortable,\n        vertical,\n        _this = this,\n        completedFired = false;\n\n    if (_silent) return;\n\n    function dragOverEvent(name, extra) {\n      pluginEvent(name, _this, _objectSpread({\n        evt: evt,\n        isOwner: isOwner,\n        axis: vertical ? 'vertical' : 'horizontal',\n        revert: revert,\n        dragRect: dragRect,\n        targetRect: targetRect,\n        canSort: canSort,\n        fromSortable: fromSortable,\n        target: target,\n        completed: completed,\n        onMove: function onMove(target, after) {\n          return _onMove(rootEl, el, dragEl, dragRect, target, getRect(target), evt, after);\n        },\n        changed: changed\n      }, extra));\n    } // Capture animation state\n\n\n    function capture() {\n      dragOverEvent('dragOverAnimationCapture');\n\n      _this.captureAnimationState();\n\n      if (_this !== fromSortable) {\n        fromSortable.captureAnimationState();\n      }\n    } // Return invocation when dragEl is inserted (or completed)\n\n\n    function completed(insertion) {\n      dragOverEvent('dragOverCompleted', {\n        insertion: insertion\n      });\n\n      if (insertion) {\n        // Clones must be hidden before folding animation to capture dragRectAbsolute properly\n        if (isOwner) {\n          activeSortable._hideClone();\n        } else {\n          activeSortable._showClone(_this);\n        }\n\n        if (_this !== fromSortable) {\n          // Set ghost class to new sortable's ghost class\n          toggleClass(dragEl, putSortable ? putSortable.options.ghostClass : activeSortable.options.ghostClass, false);\n          toggleClass(dragEl, options.ghostClass, true);\n        }\n\n        if (putSortable !== _this && _this !== Sortable.active) {\n          putSortable = _this;\n        } else if (_this === Sortable.active && putSortable) {\n          putSortable = null;\n        } // Animation\n\n\n        if (fromSortable === _this) {\n          _this._ignoreWhileAnimating = target;\n        }\n\n        _this.animateAll(function () {\n          dragOverEvent('dragOverAnimationComplete');\n          _this._ignoreWhileAnimating = null;\n        });\n\n        if (_this !== fromSortable) {\n          fromSortable.animateAll();\n          fromSortable._ignoreWhileAnimating = null;\n        }\n      } // Null lastTarget if it is not inside a previously swapped element\n\n\n      if (target === dragEl && !dragEl.animated || target === el && !target.animated) {\n        lastTarget = null;\n      } // no bubbling and not fallback\n\n\n      if (!options.dragoverBubble && !evt.rootEl && target !== document) {\n        dragEl.parentNode[expando]._isOutsideThisEl(evt.target); // Do not detect for empty insert if already inserted\n\n\n        !insertion && nearestEmptyInsertDetectEvent(evt);\n      }\n\n      !options.dragoverBubble && evt.stopPropagation && evt.stopPropagation();\n      return completedFired = true;\n    } // Call when dragEl has been inserted\n\n\n    function changed() {\n      newIndex = index(dragEl);\n      newDraggableIndex = index(dragEl, options.draggable);\n\n      _dispatchEvent({\n        sortable: _this,\n        name: 'change',\n        toEl: el,\n        newIndex: newIndex,\n        newDraggableIndex: newDraggableIndex,\n        originalEvent: evt\n      });\n    }\n\n    if (evt.preventDefault !== void 0) {\n      evt.cancelable && evt.preventDefault();\n    }\n\n    target = closest(target, options.draggable, el, true);\n    dragOverEvent('dragOver');\n    if (Sortable.eventCanceled) return completedFired;\n\n    if (dragEl.contains(evt.target) || target.animated && target.animatingX && target.animatingY || _this._ignoreWhileAnimating === target) {\n      return completed(false);\n    }\n\n    ignoreNextClick = false;\n\n    if (activeSortable && !options.disabled && (isOwner ? canSort || (revert = !rootEl.contains(dragEl)) // Reverting item into the original list\n    : putSortable === this || (this.lastPutMode = activeGroup.checkPull(this, activeSortable, dragEl, evt)) && group.checkPut(this, activeSortable, dragEl, evt))) {\n      vertical = this._getDirection(evt, target) === 'vertical';\n      dragRect = getRect(dragEl);\n      dragOverEvent('dragOverValid');\n      if (Sortable.eventCanceled) return completedFired;\n\n      if (revert) {\n        parentEl = rootEl; // actualization\n\n        capture();\n\n        this._hideClone();\n\n        dragOverEvent('revert');\n\n        if (!Sortable.eventCanceled) {\n          if (nextEl) {\n            rootEl.insertBefore(dragEl, nextEl);\n          } else {\n            rootEl.appendChild(dragEl);\n          }\n        }\n\n        return completed(true);\n      }\n\n      var elLastChild = lastChild(el, options.draggable);\n\n      if (!elLastChild || _ghostIsLast(evt, vertical, this) && !elLastChild.animated) {\n        // If already at end of list: Do not insert\n        if (elLastChild === dragEl) {\n          return completed(false);\n        } // assign target only if condition is true\n\n\n        if (elLastChild && el === evt.target) {\n          target = elLastChild;\n        }\n\n        if (target) {\n          targetRect = getRect(target);\n        }\n\n        if (_onMove(rootEl, el, dragEl, dragRect, target, targetRect, evt, !!target) !== false) {\n          capture();\n          el.appendChild(dragEl);\n          parentEl = el; // actualization\n\n          changed();\n          return completed(true);\n        }\n      } else if (target.parentNode === el) {\n        targetRect = getRect(target);\n        var direction = 0,\n            targetBeforeFirstSwap,\n            differentLevel = dragEl.parentNode !== el,\n            differentRowCol = !_dragElInRowColumn(dragEl.animated && dragEl.toRect || dragRect, target.animated && target.toRect || targetRect, vertical),\n            side1 = vertical ? 'top' : 'left',\n            scrolledPastTop = isScrolledPast(target, 'top', 'top') || isScrolledPast(dragEl, 'top', 'top'),\n            scrollBefore = scrolledPastTop ? scrolledPastTop.scrollTop : void 0;\n\n        if (lastTarget !== target) {\n          targetBeforeFirstSwap = targetRect[side1];\n          pastFirstInvertThresh = false;\n          isCircumstantialInvert = !differentRowCol && options.invertSwap || differentLevel;\n        }\n\n        direction = _getSwapDirection(evt, target, targetRect, vertical, differentRowCol ? 1 : options.swapThreshold, options.invertedSwapThreshold == null ? options.swapThreshold : options.invertedSwapThreshold, isCircumstantialInvert, lastTarget === target);\n        var sibling;\n\n        if (direction !== 0) {\n          // Check if target is beside dragEl in respective direction (ignoring hidden elements)\n          var dragIndex = index(dragEl);\n\n          do {\n            dragIndex -= direction;\n            sibling = parentEl.children[dragIndex];\n          } while (sibling && (css(sibling, 'display') === 'none' || sibling === ghostEl));\n        } // If dragEl is already beside target: Do not insert\n\n\n        if (direction === 0 || sibling === target) {\n          return completed(false);\n        }\n\n        lastTarget = target;\n        lastDirection = direction;\n        var nextSibling = target.nextElementSibling,\n            after = false;\n        after = direction === 1;\n\n        var moveVector = _onMove(rootEl, el, dragEl, dragRect, target, targetRect, evt, after);\n\n        if (moveVector !== false) {\n          if (moveVector === 1 || moveVector === -1) {\n            after = moveVector === 1;\n          }\n\n          _silent = true;\n          setTimeout(_unsilent, 30);\n          capture();\n\n          if (after && !nextSibling) {\n            el.appendChild(dragEl);\n          } else {\n            target.parentNode.insertBefore(dragEl, after ? nextSibling : target);\n          } // Undo chrome's scroll adjustment (has no effect on other browsers)\n\n\n          if (scrolledPastTop) {\n            scrollBy(scrolledPastTop, 0, scrollBefore - scrolledPastTop.scrollTop);\n          }\n\n          parentEl = dragEl.parentNode; // actualization\n          // must be done before animation\n\n          if (targetBeforeFirstSwap !== undefined && !isCircumstantialInvert) {\n            targetMoveDistance = Math.abs(targetBeforeFirstSwap - getRect(target)[side1]);\n          }\n\n          changed();\n          return completed(true);\n        }\n      }\n\n      if (el.contains(dragEl)) {\n        return completed(false);\n      }\n    }\n\n    return false;\n  },\n  _ignoreWhileAnimating: null,\n  _offMoveEvents: function _offMoveEvents() {\n    off(document, 'mousemove', this._onTouchMove);\n    off(document, 'touchmove', this._onTouchMove);\n    off(document, 'pointermove', this._onTouchMove);\n    off(document, 'dragover', nearestEmptyInsertDetectEvent);\n    off(document, 'mousemove', nearestEmptyInsertDetectEvent);\n    off(document, 'touchmove', nearestEmptyInsertDetectEvent);\n  },\n  _offUpEvents: function _offUpEvents() {\n    var ownerDocument = this.el.ownerDocument;\n    off(ownerDocument, 'mouseup', this._onDrop);\n    off(ownerDocument, 'touchend', this._onDrop);\n    off(ownerDocument, 'pointerup', this._onDrop);\n    off(ownerDocument, 'touchcancel', this._onDrop);\n    off(document, 'selectstart', this);\n  },\n  _onDrop: function _onDrop(\n  /**Event*/\n  evt) {\n    var el = this.el,\n        options = this.options; // Get the index of the dragged element within its parent\n\n    newIndex = index(dragEl);\n    newDraggableIndex = index(dragEl, options.draggable);\n    pluginEvent('drop', this, {\n      evt: evt\n    });\n    parentEl = dragEl && dragEl.parentNode; // Get again after plugin event\n\n    newIndex = index(dragEl);\n    newDraggableIndex = index(dragEl, options.draggable);\n\n    if (Sortable.eventCanceled) {\n      this._nulling();\n\n      return;\n    }\n\n    awaitingDragStarted = false;\n    isCircumstantialInvert = false;\n    pastFirstInvertThresh = false;\n    clearInterval(this._loopId);\n    clearTimeout(this._dragStartTimer);\n\n    _cancelNextTick(this.cloneId);\n\n    _cancelNextTick(this._dragStartId); // Unbind events\n\n\n    if (this.nativeDraggable) {\n      off(document, 'drop', this);\n      off(el, 'dragstart', this._onDragStart);\n    }\n\n    this._offMoveEvents();\n\n    this._offUpEvents();\n\n    if (Safari) {\n      css(document.body, 'user-select', '');\n    }\n\n    css(dragEl, 'transform', '');\n\n    if (evt) {\n      if (moved) {\n        evt.cancelable && evt.preventDefault();\n        !options.dropBubble && evt.stopPropagation();\n      }\n\n      ghostEl && ghostEl.parentNode && ghostEl.parentNode.removeChild(ghostEl);\n\n      if (rootEl === parentEl || putSortable && putSortable.lastPutMode !== 'clone') {\n        // Remove clone(s)\n        cloneEl && cloneEl.parentNode && cloneEl.parentNode.removeChild(cloneEl);\n      }\n\n      if (dragEl) {\n        if (this.nativeDraggable) {\n          off(dragEl, 'dragend', this);\n        }\n\n        _disableDraggable(dragEl);\n\n        dragEl.style['will-change'] = ''; // Remove classes\n        // ghostClass is added in dragStarted\n\n        if (moved && !awaitingDragStarted) {\n          toggleClass(dragEl, putSortable ? putSortable.options.ghostClass : this.options.ghostClass, false);\n        }\n\n        toggleClass(dragEl, this.options.chosenClass, false); // Drag stop event\n\n        _dispatchEvent({\n          sortable: this,\n          name: 'unchoose',\n          toEl: parentEl,\n          newIndex: null,\n          newDraggableIndex: null,\n          originalEvent: evt\n        });\n\n        if (rootEl !== parentEl) {\n          if (newIndex >= 0) {\n            // Add event\n            _dispatchEvent({\n              rootEl: parentEl,\n              name: 'add',\n              toEl: parentEl,\n              fromEl: rootEl,\n              originalEvent: evt\n            }); // Remove event\n\n\n            _dispatchEvent({\n              sortable: this,\n              name: 'remove',\n              toEl: parentEl,\n              originalEvent: evt\n            }); // drag from one list and drop into another\n\n\n            _dispatchEvent({\n              rootEl: parentEl,\n              name: 'sort',\n              toEl: parentEl,\n              fromEl: rootEl,\n              originalEvent: evt\n            });\n\n            _dispatchEvent({\n              sortable: this,\n              name: 'sort',\n              toEl: parentEl,\n              originalEvent: evt\n            });\n          }\n\n          putSortable && putSortable.save();\n        } else {\n          if (newIndex !== oldIndex) {\n            if (newIndex >= 0) {\n              // drag & drop within the same list\n              _dispatchEvent({\n                sortable: this,\n                name: 'update',\n                toEl: parentEl,\n                originalEvent: evt\n              });\n\n              _dispatchEvent({\n                sortable: this,\n                name: 'sort',\n                toEl: parentEl,\n                originalEvent: evt\n              });\n            }\n          }\n        }\n\n        if (Sortable.active) {\n          /* jshint eqnull:true */\n          if (newIndex == null || newIndex === -1) {\n            newIndex = oldIndex;\n            newDraggableIndex = oldDraggableIndex;\n          }\n\n          _dispatchEvent({\n            sortable: this,\n            name: 'end',\n            toEl: parentEl,\n            originalEvent: evt\n          }); // Save sorting\n\n\n          this.save();\n        }\n      }\n    }\n\n    this._nulling();\n  },\n  _nulling: function _nulling() {\n    pluginEvent('nulling', this);\n    rootEl = dragEl = parentEl = ghostEl = nextEl = cloneEl = lastDownEl = cloneHidden = tapEvt = touchEvt = moved = newIndex = newDraggableIndex = oldIndex = oldDraggableIndex = lastTarget = lastDirection = putSortable = activeGroup = Sortable.dragged = Sortable.ghost = Sortable.clone = Sortable.active = null;\n    savedInputChecked.forEach(function (el) {\n      el.checked = true;\n    });\n    savedInputChecked.length = lastDx = lastDy = 0;\n  },\n  handleEvent: function handleEvent(\n  /**Event*/\n  evt) {\n    switch (evt.type) {\n      case 'drop':\n      case 'dragend':\n        this._onDrop(evt);\n\n        break;\n\n      case 'dragenter':\n      case 'dragover':\n        if (dragEl) {\n          this._onDragOver(evt);\n\n          _globalDragOver(evt);\n        }\n\n        break;\n\n      case 'selectstart':\n        evt.preventDefault();\n        break;\n    }\n  },\n\n  /**\n   * Serializes the item into an array of string.\n   * @returns {String[]}\n   */\n  toArray: function toArray() {\n    var order = [],\n        el,\n        children = this.el.children,\n        i = 0,\n        n = children.length,\n        options = this.options;\n\n    for (; i < n; i++) {\n      el = children[i];\n\n      if (closest(el, options.draggable, this.el, false)) {\n        order.push(el.getAttribute(options.dataIdAttr) || _generateId(el));\n      }\n    }\n\n    return order;\n  },\n\n  /**\n   * Sorts the elements according to the array.\n   * @param  {String[]}  order  order of the items\n   */\n  sort: function sort(order) {\n    var items = {},\n        rootEl = this.el;\n    this.toArray().forEach(function (id, i) {\n      var el = rootEl.children[i];\n\n      if (closest(el, this.options.draggable, rootEl, false)) {\n        items[id] = el;\n      }\n    }, this);\n    order.forEach(function (id) {\n      if (items[id]) {\n        rootEl.removeChild(items[id]);\n        rootEl.appendChild(items[id]);\n      }\n    });\n  },\n\n  /**\n   * Save the current sorting\n   */\n  save: function save() {\n    var store = this.options.store;\n    store && store.set && store.set(this);\n  },\n\n  /**\n   * For each element in the set, get the first element that matches the selector by testing the element itself and traversing up through its ancestors in the DOM tree.\n   * @param   {HTMLElement}  el\n   * @param   {String}       [selector]  default: `options.draggable`\n   * @returns {HTMLElement|null}\n   */\n  closest: function closest$1(el, selector) {\n    return closest(el, selector || this.options.draggable, this.el, false);\n  },\n\n  /**\n   * Set/get option\n   * @param   {string} name\n   * @param   {*}      [value]\n   * @returns {*}\n   */\n  option: function option(name, value) {\n    var options = this.options;\n\n    if (value === void 0) {\n      return options[name];\n    } else {\n      var modifiedValue = PluginManager.modifyOption(this, name, value);\n\n      if (typeof modifiedValue !== 'undefined') {\n        options[name] = modifiedValue;\n      } else {\n        options[name] = value;\n      }\n\n      if (name === 'group') {\n        _prepareGroup(options);\n      }\n    }\n  },\n\n  /**\n   * Destroy\n   */\n  destroy: function destroy() {\n    pluginEvent('destroy', this);\n    var el = this.el;\n    el[expando] = null;\n    off(el, 'mousedown', this._onTapStart);\n    off(el, 'touchstart', this._onTapStart);\n    off(el, 'pointerdown', this._onTapStart);\n\n    if (this.nativeDraggable) {\n      off(el, 'dragover', this);\n      off(el, 'dragenter', this);\n    } // Remove draggable attributes\n\n\n    Array.prototype.forEach.call(el.querySelectorAll('[draggable]'), function (el) {\n      el.removeAttribute('draggable');\n    });\n\n    this._onDrop();\n\n    this._disableDelayedDragEvents();\n\n    sortables.splice(sortables.indexOf(this.el), 1);\n    this.el = el = null;\n  },\n  _hideClone: function _hideClone() {\n    if (!cloneHidden) {\n      pluginEvent('hideClone', this);\n      if (Sortable.eventCanceled) return;\n      css(cloneEl, 'display', 'none');\n\n      if (this.options.removeCloneOnHide && cloneEl.parentNode) {\n        cloneEl.parentNode.removeChild(cloneEl);\n      }\n\n      cloneHidden = true;\n    }\n  },\n  _showClone: function _showClone(putSortable) {\n    if (putSortable.lastPutMode !== 'clone') {\n      this._hideClone();\n\n      return;\n    }\n\n    if (cloneHidden) {\n      pluginEvent('showClone', this);\n      if (Sortable.eventCanceled) return; // show clone at dragEl or original position\n\n      if (rootEl.contains(dragEl) && !this.options.group.revertClone) {\n        rootEl.insertBefore(cloneEl, dragEl);\n      } else if (nextEl) {\n        rootEl.insertBefore(cloneEl, nextEl);\n      } else {\n        rootEl.appendChild(cloneEl);\n      }\n\n      if (this.options.group.revertClone) {\n        this.animate(dragEl, cloneEl);\n      }\n\n      css(cloneEl, 'display', '');\n      cloneHidden = false;\n    }\n  }\n};\n\nfunction _globalDragOver(\n/**Event*/\nevt) {\n  if (evt.dataTransfer) {\n    evt.dataTransfer.dropEffect = 'move';\n  }\n\n  evt.cancelable && evt.preventDefault();\n}\n\nfunction _onMove(fromEl, toEl, dragEl, dragRect, targetEl, targetRect, originalEvent, willInsertAfter) {\n  var evt,\n      sortable = fromEl[expando],\n      onMoveFn = sortable.options.onMove,\n      retVal; // Support for new CustomEvent feature\n\n  if (window.CustomEvent && !IE11OrLess && !Edge) {\n    evt = new CustomEvent('move', {\n      bubbles: true,\n      cancelable: true\n    });\n  } else {\n    evt = document.createEvent('Event');\n    evt.initEvent('move', true, true);\n  }\n\n  evt.to = toEl;\n  evt.from = fromEl;\n  evt.dragged = dragEl;\n  evt.draggedRect = dragRect;\n  evt.related = targetEl || toEl;\n  evt.relatedRect = targetRect || getRect(toEl);\n  evt.willInsertAfter = willInsertAfter;\n  evt.originalEvent = originalEvent;\n  fromEl.dispatchEvent(evt);\n\n  if (onMoveFn) {\n    retVal = onMoveFn.call(sortable, evt, originalEvent);\n  }\n\n  return retVal;\n}\n\nfunction _disableDraggable(el) {\n  el.draggable = false;\n}\n\nfunction _unsilent() {\n  _silent = false;\n}\n\nfunction _ghostIsLast(evt, vertical, sortable) {\n  var rect = getRect(lastChild(sortable.el, sortable.options.draggable));\n  var spacer = 10;\n  return vertical ? evt.clientX > rect.right + spacer || evt.clientX <= rect.right && evt.clientY > rect.bottom && evt.clientX >= rect.left : evt.clientX > rect.right && evt.clientY > rect.top || evt.clientX <= rect.right && evt.clientY > rect.bottom + spacer;\n}\n\nfunction _getSwapDirection(evt, target, targetRect, vertical, swapThreshold, invertedSwapThreshold, invertSwap, isLastTarget) {\n  var mouseOnAxis = vertical ? evt.clientY : evt.clientX,\n      targetLength = vertical ? targetRect.height : targetRect.width,\n      targetS1 = vertical ? targetRect.top : targetRect.left,\n      targetS2 = vertical ? targetRect.bottom : targetRect.right,\n      invert = false;\n\n  if (!invertSwap) {\n    // Never invert or create dragEl shadow when target movemenet causes mouse to move past the end of regular swapThreshold\n    if (isLastTarget && targetMoveDistance < targetLength * swapThreshold) {\n      // multiplied only by swapThreshold because mouse will already be inside target by (1 - threshold) * targetLength / 2\n      // check if past first invert threshold on side opposite of lastDirection\n      if (!pastFirstInvertThresh && (lastDirection === 1 ? mouseOnAxis > targetS1 + targetLength * invertedSwapThreshold / 2 : mouseOnAxis < targetS2 - targetLength * invertedSwapThreshold / 2)) {\n        // past first invert threshold, do not restrict inverted threshold to dragEl shadow\n        pastFirstInvertThresh = true;\n      }\n\n      if (!pastFirstInvertThresh) {\n        // dragEl shadow (target move distance shadow)\n        if (lastDirection === 1 ? mouseOnAxis < targetS1 + targetMoveDistance // over dragEl shadow\n        : mouseOnAxis > targetS2 - targetMoveDistance) {\n          return -lastDirection;\n        }\n      } else {\n        invert = true;\n      }\n    } else {\n      // Regular\n      if (mouseOnAxis > targetS1 + targetLength * (1 - swapThreshold) / 2 && mouseOnAxis < targetS2 - targetLength * (1 - swapThreshold) / 2) {\n        return _getInsertDirection(target);\n      }\n    }\n  }\n\n  invert = invert || invertSwap;\n\n  if (invert) {\n    // Invert of regular\n    if (mouseOnAxis < targetS1 + targetLength * invertedSwapThreshold / 2 || mouseOnAxis > targetS2 - targetLength * invertedSwapThreshold / 2) {\n      return mouseOnAxis > targetS1 + targetLength / 2 ? 1 : -1;\n    }\n  }\n\n  return 0;\n}\n/**\n * Gets the direction dragEl must be swapped relative to target in order to make it\n * seem that dragEl has been \"inserted\" into that element's position\n * @param  {HTMLElement} target       The target whose position dragEl is being inserted at\n * @return {Number}                   Direction dragEl must be swapped\n */\n\n\nfunction _getInsertDirection(target) {\n  if (index(dragEl) < index(target)) {\n    return 1;\n  } else {\n    return -1;\n  }\n}\n/**\n * Generate id\n * @param   {HTMLElement} el\n * @returns {String}\n * @private\n */\n\n\nfunction _generateId(el) {\n  var str = el.tagName + el.className + el.src + el.href + el.textContent,\n      i = str.length,\n      sum = 0;\n\n  while (i--) {\n    sum += str.charCodeAt(i);\n  }\n\n  return sum.toString(36);\n}\n\nfunction _saveInputCheckedState(root) {\n  savedInputChecked.length = 0;\n  var inputs = root.getElementsByTagName('input');\n  var idx = inputs.length;\n\n  while (idx--) {\n    var el = inputs[idx];\n    el.checked && savedInputChecked.push(el);\n  }\n}\n\nfunction _nextTick(fn) {\n  return setTimeout(fn, 0);\n}\n\nfunction _cancelNextTick(id) {\n  return clearTimeout(id);\n} // Fixed #973:\n\n\nif (documentExists) {\n  on(document, 'touchmove', function (evt) {\n    if ((Sortable.active || awaitingDragStarted) && evt.cancelable) {\n      evt.preventDefault();\n    }\n  });\n} // Export utils\n\n\nSortable.utils = {\n  on: on,\n  off: off,\n  css: css,\n  find: find,\n  is: function is(el, selector) {\n    return !!closest(el, selector, el, false);\n  },\n  extend: extend,\n  throttle: throttle,\n  closest: closest,\n  toggleClass: toggleClass,\n  clone: clone,\n  index: index,\n  nextTick: _nextTick,\n  cancelNextTick: _cancelNextTick,\n  detectDirection: _detectDirection,\n  getChild: getChild\n};\n/**\n * Get the Sortable instance of an element\n * @param  {HTMLElement} element The element\n * @return {Sortable|undefined}         The instance of Sortable\n */\n\nSortable.get = function (element) {\n  return element[expando];\n};\n/**\n * Mount a plugin to Sortable\n * @param  {...SortablePlugin|SortablePlugin[]} plugins       Plugins being mounted\n */\n\n\nSortable.mount = function () {\n  for (var _len = arguments.length, plugins = new Array(_len), _key = 0; _key < _len; _key++) {\n    plugins[_key] = arguments[_key];\n  }\n\n  if (plugins[0].constructor === Array) plugins = plugins[0];\n  plugins.forEach(function (plugin) {\n    if (!plugin.prototype || !plugin.prototype.constructor) {\n      throw \"Sortable: Mounted plugin must be a constructor function, not \".concat({}.toString.call(plugin));\n    }\n\n    if (plugin.utils) Sortable.utils = _objectSpread({}, Sortable.utils, plugin.utils);\n    PluginManager.mount(plugin);\n  });\n};\n/**\n * Create sortable instance\n * @param {HTMLElement}  el\n * @param {Object}      [options]\n */\n\n\nSortable.create = function (el, options) {\n  return new Sortable(el, options);\n}; // Export\n\n\nSortable.version = version;\n\nvar autoScrolls = [],\n    scrollEl,\n    scrollRootEl,\n    scrolling = false,\n    lastAutoScrollX,\n    lastAutoScrollY,\n    touchEvt$1,\n    pointerElemChangedInterval;\n\nfunction AutoScrollPlugin() {\n  function AutoScroll() {\n    this.defaults = {\n      scroll: true,\n      scrollSensitivity: 30,\n      scrollSpeed: 10,\n      bubbleScroll: true\n    }; // Bind all private methods\n\n    for (var fn in this) {\n      if (fn.charAt(0) === '_' && typeof this[fn] === 'function') {\n        this[fn] = this[fn].bind(this);\n      }\n    }\n  }\n\n  AutoScroll.prototype = {\n    dragStarted: function dragStarted(_ref) {\n      var originalEvent = _ref.originalEvent;\n\n      if (this.sortable.nativeDraggable) {\n        on(document, 'dragover', this._handleAutoScroll);\n      } else {\n        if (this.options.supportPointer) {\n          on(document, 'pointermove', this._handleFallbackAutoScroll);\n        } else if (originalEvent.touches) {\n          on(document, 'touchmove', this._handleFallbackAutoScroll);\n        } else {\n          on(document, 'mousemove', this._handleFallbackAutoScroll);\n        }\n      }\n    },\n    dragOverCompleted: function dragOverCompleted(_ref2) {\n      var originalEvent = _ref2.originalEvent;\n\n      // For when bubbling is canceled and using fallback (fallback 'touchmove' always reached)\n      if (!this.options.dragOverBubble && !originalEvent.rootEl) {\n        this._handleAutoScroll(originalEvent);\n      }\n    },\n    drop: function drop() {\n      if (this.sortable.nativeDraggable) {\n        off(document, 'dragover', this._handleAutoScroll);\n      } else {\n        off(document, 'pointermove', this._handleFallbackAutoScroll);\n        off(document, 'touchmove', this._handleFallbackAutoScroll);\n        off(document, 'mousemove', this._handleFallbackAutoScroll);\n      }\n\n      clearPointerElemChangedInterval();\n      clearAutoScrolls();\n      cancelThrottle();\n    },\n    nulling: function nulling() {\n      touchEvt$1 = scrollRootEl = scrollEl = scrolling = pointerElemChangedInterval = lastAutoScrollX = lastAutoScrollY = null;\n      autoScrolls.length = 0;\n    },\n    _handleFallbackAutoScroll: function _handleFallbackAutoScroll(evt) {\n      this._handleAutoScroll(evt, true);\n    },\n    _handleAutoScroll: function _handleAutoScroll(evt, fallback) {\n      var _this = this;\n\n      var x = (evt.touches ? evt.touches[0] : evt).clientX,\n          y = (evt.touches ? evt.touches[0] : evt).clientY,\n          elem = document.elementFromPoint(x, y);\n      touchEvt$1 = evt; // IE does not seem to have native autoscroll,\n      // Edge's autoscroll seems too conditional,\n      // MACOS Safari does not have autoscroll,\n      // Firefox and Chrome are good\n\n      if (fallback || Edge || IE11OrLess || Safari) {\n        autoScroll(evt, this.options, elem, fallback); // Listener for pointer element change\n\n        var ogElemScroller = getParentAutoScrollElement(elem, true);\n\n        if (scrolling && (!pointerElemChangedInterval || x !== lastAutoScrollX || y !== lastAutoScrollY)) {\n          pointerElemChangedInterval && clearPointerElemChangedInterval(); // Detect for pointer elem change, emulating native DnD behaviour\n\n          pointerElemChangedInterval = setInterval(function () {\n            var newElem = getParentAutoScrollElement(document.elementFromPoint(x, y), true);\n\n            if (newElem !== ogElemScroller) {\n              ogElemScroller = newElem;\n              clearAutoScrolls();\n            }\n\n            autoScroll(evt, _this.options, newElem, fallback);\n          }, 10);\n          lastAutoScrollX = x;\n          lastAutoScrollY = y;\n        }\n      } else {\n        // if DnD is enabled (and browser has good autoscrolling), first autoscroll will already scroll, so get parent autoscroll of first autoscroll\n        if (!this.options.bubbleScroll || getParentAutoScrollElement(elem, true) === getWindowScrollingElement()) {\n          clearAutoScrolls();\n          return;\n        }\n\n        autoScroll(evt, this.options, getParentAutoScrollElement(elem, false), false);\n      }\n    }\n  };\n  return _extends(AutoScroll, {\n    pluginName: 'scroll',\n    initializeByDefault: true\n  });\n}\n\nfunction clearAutoScrolls() {\n  autoScrolls.forEach(function (autoScroll) {\n    clearInterval(autoScroll.pid);\n  });\n  autoScrolls = [];\n}\n\nfunction clearPointerElemChangedInterval() {\n  clearInterval(pointerElemChangedInterval);\n}\n\nvar autoScroll = throttle(function (evt, options, rootEl, isFallback) {\n  // Bug: https://bugzilla.mozilla.org/show_bug.cgi?id=505521\n  if (!options.scroll) return;\n  var x = (evt.touches ? evt.touches[0] : evt).clientX,\n      y = (evt.touches ? evt.touches[0] : evt).clientY,\n      sens = options.scrollSensitivity,\n      speed = options.scrollSpeed,\n      winScroller = getWindowScrollingElement();\n  var scrollThisInstance = false,\n      scrollCustomFn; // New scroll root, set scrollEl\n\n  if (scrollRootEl !== rootEl) {\n    scrollRootEl = rootEl;\n    clearAutoScrolls();\n    scrollEl = options.scroll;\n    scrollCustomFn = options.scrollFn;\n\n    if (scrollEl === true) {\n      scrollEl = getParentAutoScrollElement(rootEl, true);\n    }\n  }\n\n  var layersOut = 0;\n  var currentParent = scrollEl;\n\n  do {\n    var el = currentParent,\n        rect = getRect(el),\n        top = rect.top,\n        bottom = rect.bottom,\n        left = rect.left,\n        right = rect.right,\n        width = rect.width,\n        height = rect.height,\n        canScrollX = void 0,\n        canScrollY = void 0,\n        scrollWidth = el.scrollWidth,\n        scrollHeight = el.scrollHeight,\n        elCSS = css(el),\n        scrollPosX = el.scrollLeft,\n        scrollPosY = el.scrollTop;\n\n    if (el === winScroller) {\n      canScrollX = width < scrollWidth && (elCSS.overflowX === 'auto' || elCSS.overflowX === 'scroll' || elCSS.overflowX === 'visible');\n      canScrollY = height < scrollHeight && (elCSS.overflowY === 'auto' || elCSS.overflowY === 'scroll' || elCSS.overflowY === 'visible');\n    } else {\n      canScrollX = width < scrollWidth && (elCSS.overflowX === 'auto' || elCSS.overflowX === 'scroll');\n      canScrollY = height < scrollHeight && (elCSS.overflowY === 'auto' || elCSS.overflowY === 'scroll');\n    }\n\n    var vx = canScrollX && (Math.abs(right - x) <= sens && scrollPosX + width < scrollWidth) - (Math.abs(left - x) <= sens && !!scrollPosX);\n    var vy = canScrollY && (Math.abs(bottom - y) <= sens && scrollPosY + height < scrollHeight) - (Math.abs(top - y) <= sens && !!scrollPosY);\n\n    if (!autoScrolls[layersOut]) {\n      for (var i = 0; i <= layersOut; i++) {\n        if (!autoScrolls[i]) {\n          autoScrolls[i] = {};\n        }\n      }\n    }\n\n    if (autoScrolls[layersOut].vx != vx || autoScrolls[layersOut].vy != vy || autoScrolls[layersOut].el !== el) {\n      autoScrolls[layersOut].el = el;\n      autoScrolls[layersOut].vx = vx;\n      autoScrolls[layersOut].vy = vy;\n      clearInterval(autoScrolls[layersOut].pid);\n\n      if (vx != 0 || vy != 0) {\n        scrollThisInstance = true;\n        /* jshint loopfunc:true */\n\n        autoScrolls[layersOut].pid = setInterval(function () {\n          // emulate drag over during autoscroll (fallback), emulating native DnD behaviour\n          if (isFallback && this.layer === 0) {\n            Sortable.active._onTouchMove(touchEvt$1); // To move ghost if it is positioned absolutely\n\n          }\n\n          var scrollOffsetY = autoScrolls[this.layer].vy ? autoScrolls[this.layer].vy * speed : 0;\n          var scrollOffsetX = autoScrolls[this.layer].vx ? autoScrolls[this.layer].vx * speed : 0;\n\n          if (typeof scrollCustomFn === 'function') {\n            if (scrollCustomFn.call(Sortable.dragged.parentNode[expando], scrollOffsetX, scrollOffsetY, evt, touchEvt$1, autoScrolls[this.layer].el) !== 'continue') {\n              return;\n            }\n          }\n\n          scrollBy(autoScrolls[this.layer].el, scrollOffsetX, scrollOffsetY);\n        }.bind({\n          layer: layersOut\n        }), 24);\n      }\n    }\n\n    layersOut++;\n  } while (options.bubbleScroll && currentParent !== winScroller && (currentParent = getParentAutoScrollElement(currentParent, false)));\n\n  scrolling = scrollThisInstance; // in case another function catches scrolling as false in between when it is not\n}, 30);\n\nvar drop = function drop(_ref) {\n  var originalEvent = _ref.originalEvent,\n      putSortable = _ref.putSortable,\n      dragEl = _ref.dragEl,\n      activeSortable = _ref.activeSortable,\n      dispatchSortableEvent = _ref.dispatchSortableEvent,\n      hideGhostForTarget = _ref.hideGhostForTarget,\n      unhideGhostForTarget = _ref.unhideGhostForTarget;\n  if (!originalEvent) return;\n  var toSortable = putSortable || activeSortable;\n  hideGhostForTarget();\n  var touch = originalEvent.changedTouches && originalEvent.changedTouches.length ? originalEvent.changedTouches[0] : originalEvent;\n  var target = document.elementFromPoint(touch.clientX, touch.clientY);\n  unhideGhostForTarget();\n\n  if (toSortable && !toSortable.el.contains(target)) {\n    dispatchSortableEvent('spill');\n    this.onSpill({\n      dragEl: dragEl,\n      putSortable: putSortable\n    });\n  }\n};\n\nfunction Revert() {}\n\nRevert.prototype = {\n  startIndex: null,\n  dragStart: function dragStart(_ref2) {\n    var oldDraggableIndex = _ref2.oldDraggableIndex;\n    this.startIndex = oldDraggableIndex;\n  },\n  onSpill: function onSpill(_ref3) {\n    var dragEl = _ref3.dragEl,\n        putSortable = _ref3.putSortable;\n    this.sortable.captureAnimationState();\n\n    if (putSortable) {\n      putSortable.captureAnimationState();\n    }\n\n    var nextSibling = getChild(this.sortable.el, this.startIndex, this.options);\n\n    if (nextSibling) {\n      this.sortable.el.insertBefore(dragEl, nextSibling);\n    } else {\n      this.sortable.el.appendChild(dragEl);\n    }\n\n    this.sortable.animateAll();\n\n    if (putSortable) {\n      putSortable.animateAll();\n    }\n  },\n  drop: drop\n};\n\n_extends(Revert, {\n  pluginName: 'revertOnSpill'\n});\n\nfunction Remove() {}\n\nRemove.prototype = {\n  onSpill: function onSpill(_ref4) {\n    var dragEl = _ref4.dragEl,\n        putSortable = _ref4.putSortable;\n    var parentSortable = putSortable || this.sortable;\n    parentSortable.captureAnimationState();\n    dragEl.parentNode && dragEl.parentNode.removeChild(dragEl);\n    parentSortable.animateAll();\n  },\n  drop: drop\n};\n\n_extends(Remove, {\n  pluginName: 'removeOnSpill'\n});\n\nvar lastSwapEl;\n\nfunction SwapPlugin() {\n  function Swap() {\n    this.defaults = {\n      swapClass: 'sortable-swap-highlight'\n    };\n  }\n\n  Swap.prototype = {\n    dragStart: function dragStart(_ref) {\n      var dragEl = _ref.dragEl;\n      lastSwapEl = dragEl;\n    },\n    dragOverValid: function dragOverValid(_ref2) {\n      var completed = _ref2.completed,\n          target = _ref2.target,\n          onMove = _ref2.onMove,\n          activeSortable = _ref2.activeSortable,\n          changed = _ref2.changed,\n          cancel = _ref2.cancel;\n      if (!activeSortable.options.swap) return;\n      var el = this.sortable.el,\n          options = this.options;\n\n      if (target && target !== el) {\n        var prevSwapEl = lastSwapEl;\n\n        if (onMove(target) !== false) {\n          toggleClass(target, options.swapClass, true);\n          lastSwapEl = target;\n        } else {\n          lastSwapEl = null;\n        }\n\n        if (prevSwapEl && prevSwapEl !== lastSwapEl) {\n          toggleClass(prevSwapEl, options.swapClass, false);\n        }\n      }\n\n      changed();\n      completed(true);\n      cancel();\n    },\n    drop: function drop(_ref3) {\n      var activeSortable = _ref3.activeSortable,\n          putSortable = _ref3.putSortable,\n          dragEl = _ref3.dragEl;\n      var toSortable = putSortable || this.sortable;\n      var options = this.options;\n      lastSwapEl && toggleClass(lastSwapEl, options.swapClass, false);\n\n      if (lastSwapEl && (options.swap || putSortable && putSortable.options.swap)) {\n        if (dragEl !== lastSwapEl) {\n          toSortable.captureAnimationState();\n          if (toSortable !== activeSortable) activeSortable.captureAnimationState();\n          swapNodes(dragEl, lastSwapEl);\n          toSortable.animateAll();\n          if (toSortable !== activeSortable) activeSortable.animateAll();\n        }\n      }\n    },\n    nulling: function nulling() {\n      lastSwapEl = null;\n    }\n  };\n  return _extends(Swap, {\n    pluginName: 'swap',\n    eventProperties: function eventProperties() {\n      return {\n        swapItem: lastSwapEl\n      };\n    }\n  });\n}\n\nfunction swapNodes(n1, n2) {\n  var p1 = n1.parentNode,\n      p2 = n2.parentNode,\n      i1,\n      i2;\n  if (!p1 || !p2 || p1.isEqualNode(n2) || p2.isEqualNode(n1)) return;\n  i1 = index(n1);\n  i2 = index(n2);\n\n  if (p1.isEqualNode(p2) && i1 < i2) {\n    i2++;\n  }\n\n  p1.insertBefore(n2, p1.children[i1]);\n  p2.insertBefore(n1, p2.children[i2]);\n}\n\nvar multiDragElements = [],\n    multiDragClones = [],\n    lastMultiDragSelect,\n    // for selection with modifier key down (SHIFT)\nmultiDragSortable,\n    initialFolding = false,\n    // Initial multi-drag fold when drag started\nfolding = false,\n    // Folding any other time\ndragStarted = false,\n    dragEl$1,\n    clonesFromRect,\n    clonesHidden;\n\nfunction MultiDragPlugin() {\n  function MultiDrag(sortable) {\n    // Bind all private methods\n    for (var fn in this) {\n      if (fn.charAt(0) === '_' && typeof this[fn] === 'function') {\n        this[fn] = this[fn].bind(this);\n      }\n    }\n\n    if (sortable.options.supportPointer) {\n      on(document, 'pointerup', this._deselectMultiDrag);\n    } else {\n      on(document, 'mouseup', this._deselectMultiDrag);\n      on(document, 'touchend', this._deselectMultiDrag);\n    }\n\n    on(document, 'keydown', this._checkKeyDown);\n    on(document, 'keyup', this._checkKeyUp);\n    this.defaults = {\n      selectedClass: 'sortable-selected',\n      multiDragKey: null,\n      setData: function setData(dataTransfer, dragEl) {\n        var data = '';\n\n        if (multiDragElements.length && multiDragSortable === sortable) {\n          multiDragElements.forEach(function (multiDragElement, i) {\n            data += (!i ? '' : ', ') + multiDragElement.textContent;\n          });\n        } else {\n          data = dragEl.textContent;\n        }\n\n        dataTransfer.setData('Text', data);\n      }\n    };\n  }\n\n  MultiDrag.prototype = {\n    multiDragKeyDown: false,\n    isMultiDrag: false,\n    delayStartGlobal: function delayStartGlobal(_ref) {\n      var dragged = _ref.dragEl;\n      dragEl$1 = dragged;\n    },\n    delayEnded: function delayEnded() {\n      this.isMultiDrag = ~multiDragElements.indexOf(dragEl$1);\n    },\n    setupClone: function setupClone(_ref2) {\n      var sortable = _ref2.sortable,\n          cancel = _ref2.cancel;\n      if (!this.isMultiDrag) return;\n\n      for (var i = 0; i < multiDragElements.length; i++) {\n        multiDragClones.push(clone(multiDragElements[i]));\n        multiDragClones[i].sortableIndex = multiDragElements[i].sortableIndex;\n        multiDragClones[i].draggable = false;\n        multiDragClones[i].style['will-change'] = '';\n        toggleClass(multiDragClones[i], this.options.selectedClass, false);\n        multiDragElements[i] === dragEl$1 && toggleClass(multiDragClones[i], this.options.chosenClass, false);\n      }\n\n      sortable._hideClone();\n\n      cancel();\n    },\n    clone: function clone(_ref3) {\n      var sortable = _ref3.sortable,\n          rootEl = _ref3.rootEl,\n          dispatchSortableEvent = _ref3.dispatchSortableEvent,\n          cancel = _ref3.cancel;\n      if (!this.isMultiDrag) return;\n\n      if (!this.options.removeCloneOnHide) {\n        if (multiDragElements.length && multiDragSortable === sortable) {\n          insertMultiDragClones(true, rootEl);\n          dispatchSortableEvent('clone');\n          cancel();\n        }\n      }\n    },\n    showClone: function showClone(_ref4) {\n      var cloneNowShown = _ref4.cloneNowShown,\n          rootEl = _ref4.rootEl,\n          cancel = _ref4.cancel;\n      if (!this.isMultiDrag) return;\n      insertMultiDragClones(false, rootEl);\n      multiDragClones.forEach(function (clone) {\n        css(clone, 'display', '');\n      });\n      cloneNowShown();\n      clonesHidden = false;\n      cancel();\n    },\n    hideClone: function hideClone(_ref5) {\n      var _this = this;\n\n      var sortable = _ref5.sortable,\n          cloneNowHidden = _ref5.cloneNowHidden,\n          cancel = _ref5.cancel;\n      if (!this.isMultiDrag) return;\n      multiDragClones.forEach(function (clone) {\n        css(clone, 'display', 'none');\n\n        if (_this.options.removeCloneOnHide && clone.parentNode) {\n          clone.parentNode.removeChild(clone);\n        }\n      });\n      cloneNowHidden();\n      clonesHidden = true;\n      cancel();\n    },\n    dragStartGlobal: function dragStartGlobal(_ref6) {\n      var sortable = _ref6.sortable;\n\n      if (!this.isMultiDrag && multiDragSortable) {\n        multiDragSortable.multiDrag._deselectMultiDrag();\n      }\n\n      multiDragElements.forEach(function (multiDragElement) {\n        multiDragElement.sortableIndex = index(multiDragElement);\n      }); // Sort multi-drag elements\n\n      multiDragElements = multiDragElements.sort(function (a, b) {\n        return a.sortableIndex - b.sortableIndex;\n      });\n      dragStarted = true;\n    },\n    dragStarted: function dragStarted(_ref7) {\n      var _this2 = this;\n\n      var sortable = _ref7.sortable;\n      if (!this.isMultiDrag) return;\n\n      if (this.options.sort) {\n        // Capture rects,\n        // hide multi drag elements (by positioning them absolute),\n        // set multi drag elements rects to dragRect,\n        // show multi drag elements,\n        // animate to rects,\n        // unset rects & remove from DOM\n        sortable.captureAnimationState();\n\n        if (this.options.animation) {\n          multiDragElements.forEach(function (multiDragElement) {\n            if (multiDragElement === dragEl$1) return;\n            css(multiDragElement, 'position', 'absolute');\n          });\n          var dragRect = getRect(dragEl$1, false, true, true);\n          multiDragElements.forEach(function (multiDragElement) {\n            if (multiDragElement === dragEl$1) return;\n            setRect(multiDragElement, dragRect);\n          });\n          folding = true;\n          initialFolding = true;\n        }\n      }\n\n      sortable.animateAll(function () {\n        folding = false;\n        initialFolding = false;\n\n        if (_this2.options.animation) {\n          multiDragElements.forEach(function (multiDragElement) {\n            unsetRect(multiDragElement);\n          });\n        } // Remove all auxiliary multidrag items from el, if sorting enabled\n\n\n        if (_this2.options.sort) {\n          removeMultiDragElements();\n        }\n      });\n    },\n    dragOver: function dragOver(_ref8) {\n      var target = _ref8.target,\n          completed = _ref8.completed,\n          cancel = _ref8.cancel;\n\n      if (folding && ~multiDragElements.indexOf(target)) {\n        completed(false);\n        cancel();\n      }\n    },\n    revert: function revert(_ref9) {\n      var fromSortable = _ref9.fromSortable,\n          rootEl = _ref9.rootEl,\n          sortable = _ref9.sortable,\n          dragRect = _ref9.dragRect;\n\n      if (multiDragElements.length > 1) {\n        // Setup unfold animation\n        multiDragElements.forEach(function (multiDragElement) {\n          sortable.addAnimationState({\n            target: multiDragElement,\n            rect: folding ? getRect(multiDragElement) : dragRect\n          });\n          unsetRect(multiDragElement);\n          multiDragElement.fromRect = dragRect;\n          fromSortable.removeAnimationState(multiDragElement);\n        });\n        folding = false;\n        insertMultiDragElements(!this.options.removeCloneOnHide, rootEl);\n      }\n    },\n    dragOverCompleted: function dragOverCompleted(_ref10) {\n      var sortable = _ref10.sortable,\n          isOwner = _ref10.isOwner,\n          insertion = _ref10.insertion,\n          activeSortable = _ref10.activeSortable,\n          parentEl = _ref10.parentEl,\n          putSortable = _ref10.putSortable;\n      var options = this.options;\n\n      if (insertion) {\n        // Clones must be hidden before folding animation to capture dragRectAbsolute properly\n        if (isOwner) {\n          activeSortable._hideClone();\n        }\n\n        initialFolding = false; // If leaving sort:false root, or already folding - Fold to new location\n\n        if (options.animation && multiDragElements.length > 1 && (folding || !isOwner && !activeSortable.options.sort && !putSortable)) {\n          // Fold: Set all multi drag elements's rects to dragEl's rect when multi-drag elements are invisible\n          var dragRectAbsolute = getRect(dragEl$1, false, true, true);\n          multiDragElements.forEach(function (multiDragElement) {\n            if (multiDragElement === dragEl$1) return;\n            setRect(multiDragElement, dragRectAbsolute); // Move element(s) to end of parentEl so that it does not interfere with multi-drag clones insertion if they are inserted\n            // while folding, and so that we can capture them again because old sortable will no longer be fromSortable\n\n            parentEl.appendChild(multiDragElement);\n          });\n          folding = true;\n        } // Clones must be shown (and check to remove multi drags) after folding when interfering multiDragElements are moved out\n\n\n        if (!isOwner) {\n          // Only remove if not folding (folding will remove them anyways)\n          if (!folding) {\n            removeMultiDragElements();\n          }\n\n          if (multiDragElements.length > 1) {\n            var clonesHiddenBefore = clonesHidden;\n\n            activeSortable._showClone(sortable); // Unfold animation for clones if showing from hidden\n\n\n            if (activeSortable.options.animation && !clonesHidden && clonesHiddenBefore) {\n              multiDragClones.forEach(function (clone) {\n                activeSortable.addAnimationState({\n                  target: clone,\n                  rect: clonesFromRect\n                });\n                clone.fromRect = clonesFromRect;\n                clone.thisAnimationDuration = null;\n              });\n            }\n          } else {\n            activeSortable._showClone(sortable);\n          }\n        }\n      }\n    },\n    dragOverAnimationCapture: function dragOverAnimationCapture(_ref11) {\n      var dragRect = _ref11.dragRect,\n          isOwner = _ref11.isOwner,\n          activeSortable = _ref11.activeSortable;\n      multiDragElements.forEach(function (multiDragElement) {\n        multiDragElement.thisAnimationDuration = null;\n      });\n\n      if (activeSortable.options.animation && !isOwner && activeSortable.multiDrag.isMultiDrag) {\n        clonesFromRect = _extends({}, dragRect);\n        var dragMatrix = matrix(dragEl$1, true);\n        clonesFromRect.top -= dragMatrix.f;\n        clonesFromRect.left -= dragMatrix.e;\n      }\n    },\n    dragOverAnimationComplete: function dragOverAnimationComplete() {\n      if (folding) {\n        folding = false;\n        removeMultiDragElements();\n      }\n    },\n    drop: function drop(_ref12) {\n      var evt = _ref12.originalEvent,\n          rootEl = _ref12.rootEl,\n          parentEl = _ref12.parentEl,\n          sortable = _ref12.sortable,\n          dispatchSortableEvent = _ref12.dispatchSortableEvent,\n          oldIndex = _ref12.oldIndex,\n          putSortable = _ref12.putSortable;\n      var toSortable = putSortable || this.sortable;\n      if (!evt) return;\n      var options = this.options,\n          children = parentEl.children; // Multi-drag selection\n\n      if (!dragStarted) {\n        if (options.multiDragKey && !this.multiDragKeyDown) {\n          this._deselectMultiDrag();\n        }\n\n        toggleClass(dragEl$1, options.selectedClass, !~multiDragElements.indexOf(dragEl$1));\n\n        if (!~multiDragElements.indexOf(dragEl$1)) {\n          multiDragElements.push(dragEl$1);\n          dispatchEvent({\n            sortable: sortable,\n            rootEl: rootEl,\n            name: 'select',\n            targetEl: dragEl$1,\n            originalEvt: evt\n          }); // Modifier activated, select from last to dragEl\n\n          if (evt.shiftKey && lastMultiDragSelect && sortable.el.contains(lastMultiDragSelect)) {\n            var lastIndex = index(lastMultiDragSelect),\n                currentIndex = index(dragEl$1);\n\n            if (~lastIndex && ~currentIndex && lastIndex !== currentIndex) {\n              // Must include lastMultiDragSelect (select it), in case modified selection from no selection\n              // (but previous selection existed)\n              var n, i;\n\n              if (currentIndex > lastIndex) {\n                i = lastIndex;\n                n = currentIndex;\n              } else {\n                i = currentIndex;\n                n = lastIndex + 1;\n              }\n\n              for (; i < n; i++) {\n                if (~multiDragElements.indexOf(children[i])) continue;\n                toggleClass(children[i], options.selectedClass, true);\n                multiDragElements.push(children[i]);\n                dispatchEvent({\n                  sortable: sortable,\n                  rootEl: rootEl,\n                  name: 'select',\n                  targetEl: children[i],\n                  originalEvt: evt\n                });\n              }\n            }\n          } else {\n            lastMultiDragSelect = dragEl$1;\n          }\n\n          multiDragSortable = toSortable;\n        } else {\n          multiDragElements.splice(multiDragElements.indexOf(dragEl$1), 1);\n          lastMultiDragSelect = null;\n          dispatchEvent({\n            sortable: sortable,\n            rootEl: rootEl,\n            name: 'deselect',\n            targetEl: dragEl$1,\n            originalEvt: evt\n          });\n        }\n      } // Multi-drag drop\n\n\n      if (dragStarted && this.isMultiDrag) {\n        // Do not \"unfold\" after around dragEl if reverted\n        if ((parentEl[expando].options.sort || parentEl !== rootEl) && multiDragElements.length > 1) {\n          var dragRect = getRect(dragEl$1),\n              multiDragIndex = index(dragEl$1, ':not(.' + this.options.selectedClass + ')');\n          if (!initialFolding && options.animation) dragEl$1.thisAnimationDuration = null;\n          toSortable.captureAnimationState();\n\n          if (!initialFolding) {\n            if (options.animation) {\n              dragEl$1.fromRect = dragRect;\n              multiDragElements.forEach(function (multiDragElement) {\n                multiDragElement.thisAnimationDuration = null;\n\n                if (multiDragElement !== dragEl$1) {\n                  var rect = folding ? getRect(multiDragElement) : dragRect;\n                  multiDragElement.fromRect = rect; // Prepare unfold animation\n\n                  toSortable.addAnimationState({\n                    target: multiDragElement,\n                    rect: rect\n                  });\n                }\n              });\n            } // Multi drag elements are not necessarily removed from the DOM on drop, so to reinsert\n            // properly they must all be removed\n\n\n            removeMultiDragElements();\n            multiDragElements.forEach(function (multiDragElement) {\n              if (children[multiDragIndex]) {\n                parentEl.insertBefore(multiDragElement, children[multiDragIndex]);\n              } else {\n                parentEl.appendChild(multiDragElement);\n              }\n\n              multiDragIndex++;\n            }); // If initial folding is done, the elements may have changed position because they are now\n            // unfolding around dragEl, even though dragEl may not have his index changed, so update event\n            // must be fired here as Sortable will not.\n\n            if (oldIndex === index(dragEl$1)) {\n              var update = false;\n              multiDragElements.forEach(function (multiDragElement) {\n                if (multiDragElement.sortableIndex !== index(multiDragElement)) {\n                  update = true;\n                  return;\n                }\n              });\n\n              if (update) {\n                dispatchSortableEvent('update');\n              }\n            }\n          } // Must be done after capturing individual rects (scroll bar)\n\n\n          multiDragElements.forEach(function (multiDragElement) {\n            unsetRect(multiDragElement);\n          });\n          toSortable.animateAll();\n        }\n\n        multiDragSortable = toSortable;\n      } // Remove clones if necessary\n\n\n      if (rootEl === parentEl || putSortable && putSortable.lastPutMode !== 'clone') {\n        multiDragClones.forEach(function (clone) {\n          clone.parentNode && clone.parentNode.removeChild(clone);\n        });\n      }\n    },\n    nullingGlobal: function nullingGlobal() {\n      this.isMultiDrag = dragStarted = false;\n      multiDragClones.length = 0;\n    },\n    destroyGlobal: function destroyGlobal() {\n      this._deselectMultiDrag();\n\n      off(document, 'pointerup', this._deselectMultiDrag);\n      off(document, 'mouseup', this._deselectMultiDrag);\n      off(document, 'touchend', this._deselectMultiDrag);\n      off(document, 'keydown', this._checkKeyDown);\n      off(document, 'keyup', this._checkKeyUp);\n    },\n    _deselectMultiDrag: function _deselectMultiDrag(evt) {\n      if (typeof dragStarted !== \"undefined\" && dragStarted) return; // Only deselect if selection is in this sortable\n\n      if (multiDragSortable !== this.sortable) return; // Only deselect if target is not item in this sortable\n\n      if (evt && closest(evt.target, this.options.draggable, this.sortable.el, false)) return; // Only deselect if left click\n\n      if (evt && evt.button !== 0) return;\n\n      while (multiDragElements.length) {\n        var el = multiDragElements[0];\n        toggleClass(el, this.options.selectedClass, false);\n        multiDragElements.shift();\n        dispatchEvent({\n          sortable: this.sortable,\n          rootEl: this.sortable.el,\n          name: 'deselect',\n          targetEl: el,\n          originalEvt: evt\n        });\n      }\n    },\n    _checkKeyDown: function _checkKeyDown(evt) {\n      if (evt.key === this.options.multiDragKey) {\n        this.multiDragKeyDown = true;\n      }\n    },\n    _checkKeyUp: function _checkKeyUp(evt) {\n      if (evt.key === this.options.multiDragKey) {\n        this.multiDragKeyDown = false;\n      }\n    }\n  };\n  return _extends(MultiDrag, {\n    // Static methods & properties\n    pluginName: 'multiDrag',\n    utils: {\n      /**\r\n       * Selects the provided multi-drag item\r\n       * @param  {HTMLElement} el    The element to be selected\r\n       */\n      select: function select(el) {\n        var sortable = el.parentNode[expando];\n        if (!sortable || !sortable.options.multiDrag || ~multiDragElements.indexOf(el)) return;\n\n        if (multiDragSortable && multiDragSortable !== sortable) {\n          multiDragSortable.multiDrag._deselectMultiDrag();\n\n          multiDragSortable = sortable;\n        }\n\n        toggleClass(el, sortable.options.selectedClass, true);\n        multiDragElements.push(el);\n      },\n\n      /**\r\n       * Deselects the provided multi-drag item\r\n       * @param  {HTMLElement} el    The element to be deselected\r\n       */\n      deselect: function deselect(el) {\n        var sortable = el.parentNode[expando],\n            index = multiDragElements.indexOf(el);\n        if (!sortable || !sortable.options.multiDrag || !~index) return;\n        toggleClass(el, sortable.options.selectedClass, false);\n        multiDragElements.splice(index, 1);\n      }\n    },\n    eventProperties: function eventProperties() {\n      var _this3 = this;\n\n      var oldIndicies = [],\n          newIndicies = [];\n      multiDragElements.forEach(function (multiDragElement) {\n        oldIndicies.push({\n          multiDragElement: multiDragElement,\n          index: multiDragElement.sortableIndex\n        }); // multiDragElements will already be sorted if folding\n\n        var newIndex;\n\n        if (folding && multiDragElement !== dragEl$1) {\n          newIndex = -1;\n        } else if (folding) {\n          newIndex = index(multiDragElement, ':not(.' + _this3.options.selectedClass + ')');\n        } else {\n          newIndex = index(multiDragElement);\n        }\n\n        newIndicies.push({\n          multiDragElement: multiDragElement,\n          index: newIndex\n        });\n      });\n      return {\n        items: _toConsumableArray(multiDragElements),\n        clones: [].concat(multiDragClones),\n        oldIndicies: oldIndicies,\n        newIndicies: newIndicies\n      };\n    },\n    optionListeners: {\n      multiDragKey: function multiDragKey(key) {\n        key = key.toLowerCase();\n\n        if (key === 'ctrl') {\n          key = 'Control';\n        } else if (key.length > 1) {\n          key = key.charAt(0).toUpperCase() + key.substr(1);\n        }\n\n        return key;\n      }\n    }\n  });\n}\n\nfunction insertMultiDragElements(clonesInserted, rootEl) {\n  multiDragElements.forEach(function (multiDragElement, i) {\n    var target = rootEl.children[multiDragElement.sortableIndex + (clonesInserted ? Number(i) : 0)];\n\n    if (target) {\n      rootEl.insertBefore(multiDragElement, target);\n    } else {\n      rootEl.appendChild(multiDragElement);\n    }\n  });\n}\n/**\r\n * Insert multi-drag clones\r\n * @param  {[Boolean]} elementsInserted  Whether the multi-drag elements are inserted\r\n * @param  {HTMLElement} rootEl\r\n */\n\n\nfunction insertMultiDragClones(elementsInserted, rootEl) {\n  multiDragClones.forEach(function (clone, i) {\n    var target = rootEl.children[clone.sortableIndex + (elementsInserted ? Number(i) : 0)];\n\n    if (target) {\n      rootEl.insertBefore(clone, target);\n    } else {\n      rootEl.appendChild(clone);\n    }\n  });\n}\n\nfunction removeMultiDragElements() {\n  multiDragElements.forEach(function (multiDragElement) {\n    if (multiDragElement === dragEl$1) return;\n    multiDragElement.parentNode && multiDragElement.parentNode.removeChild(multiDragElement);\n  });\n}\n\nSortable.mount(new AutoScrollPlugin());\nSortable.mount(Remove, Revert);\n\nexport default Sortable;\nexport { MultiDragPlugin as MultiDrag, Sortable, SwapPlugin as Swap };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}