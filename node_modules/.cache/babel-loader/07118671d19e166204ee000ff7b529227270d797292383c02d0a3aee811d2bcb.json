{"ast":null,"code":"import { defineComponent, inject, watch } from 'vue';\nimport '../../select/index.mjs';\nimport { selectKey } from '../../select/src/token.mjs';\nvar CacheOptions = defineComponent({\n  props: {\n    data: {\n      type: Array,\n      default: () => []\n    }\n  },\n  setup(props) {\n    const select = inject(selectKey);\n    watch(() => props.data, () => {\n      props.data.forEach(item => {\n        if (!select.cachedOptions.has(item.value)) {\n          select.cachedOptions.set(item.value, item);\n        }\n      });\n      select.setSelected();\n    }, {\n      immediate: true,\n      deep: true\n    });\n    return () => void 0;\n  }\n});\nexport { CacheOptions as default };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}